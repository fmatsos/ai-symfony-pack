category: Security

questions:
  -
    question: >
      Which Symfony CLI command is used to check for known security vulnerabilities in your project's dependencies?
    answers:
      - { value: "`symfony check:security`", correct: true }
      - { value: "`composer audit`", correct: false }
      - { value: "`php bin/console security:audit`", correct: false }
      - { value: "`symfony security:check`", correct: false }
    help: |
      The `symfony check:security` command scans your project dependencies against the public PHP security advisories database.
      https://github.com/symfony/symfony-docs/blob/7.3/setup.rst#_snippet_9

  -
    question: >
      In `security.yaml`, what is the primary purpose of the `firewalls` section?
    answers:
      - { value: "To define the security protection for different parts of the application.", correct: true }
      - { value: "To configure database connections for user storage.", correct: false }
      - { value: "To manage HTTP caching strategies.", correct: false }
      - { value: "To declare global security roles.", correct: false }
    help: |
      The `firewalls` option is the most important setting in the security configuration, defining how security is applied to different parts of your application.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_8

  -
    question: |
      Consider the following `security.yaml` configuration:

      ```yaml
      security:
          firewalls:
              dev:
                  pattern: ^/(_(profiler|wdt)|css|images|js)/
                  security: false
              main:
                  lazy: true
                  provider: app_user_provider
      ```

      What is the significance of the `dev` firewall being defined before the `main` firewall?
    answers:
      - { value: "Firewalls are processed in the order they are defined, and the first matching firewall handles the request.", correct: true }
      - { value: "The `dev` firewall automatically inherits settings from `main`.", correct: false }
      - { value: "This order optimizes performance for development assets.", correct: false }
      - { value: "It ensures that `main` firewall's rules are always applied first.", correct: false }
    help: |
      The order in which firewalls are defined is very important, as the request will be handled by the first firewall whose pattern matches.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_13

  -
    question: >
      Which of the following `access_control` configurations correctly enforces HTTPS for the `/cart/checkout` path?
    answers:
      - { value: "{ path: ^/cart/checkout, roles: PUBLIC_ACCESS, requires_channel: https }", correct: true }
      - { value: "{ path: ^/cart/checkout, roles: PUBLIC_ACCESS, secure: true }", correct: false }
      - { value: "{ path: ^/cart/checkout, roles: PUBLIC_ACCESS, protocol: https }", correct: false }
      - { value: "{ path: ^/cart/checkout, roles: PUBLIC_ACCESS, channel: secure }", correct: false }
    help: |
      The `requires_channel: https` option in `access_control` forces requests to a specific path to be over HTTPS.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_6

  -
    question: |
      You want to secure all actions within `App\Controller\AdminController` to require `ROLE_ADMIN`, but `adminDashboard()` should specifically require `ROLE_SUPER_ADMIN`. Which `#[IsGranted]` attribute usage is correct?
    answers:
      - { value: '''
        #[IsGranted(\'ROLE_ADMIN\')]
        class AdminController extends AbstractController
        {
            #[IsGranted(\'ROLE_SUPER_ADMIN\')]
            public function adminDashboard(): Response {}
        }
        ''', correct: true }
      - { value: '''
        #[IsGranted(\'ROLE_ADMIN\')]
        class AdminController extends AbstractController
        {
            #[IsGranted(\'ROLE_ADMIN, ROLE_SUPER_ADMIN\')]
            public function adminDashboard(): Response {}
        }
        ''', correct: false }
      - { value: '''
        #[IsGranted(\'ROLE_SUPER_ADMIN\')]
        class AdminController extends AbstractController
        {
            #[IsGranted(\'ROLE_ADMIN\')]
            public function adminDashboard(): Response {}
        }
        ''', correct: false }
      - { value: '''
        class AdminController extends AbstractController
        {
            #[IsGranted(\'ROLE_ADMIN\')]
            public function __construct() {}

            #[IsGranted(\'ROLE_SUPER_ADMIN\')]
            public function adminDashboard(): Response {}
        }
        ''', correct: false }
    help: |
      The `#[IsGranted]` attribute can be applied at the class level to secure all actions, and then overridden at the method level for more specific requirements.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_64

  -
    question: >
      Which event is dispatched after an authenticator has successfully created the security passport, but before the token is created?
    answers:
      - { value: "Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent", correct: true }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\AuthenticationTokenCreatedEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\Event\\AuthenticationSuccessEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent", correct: false }
    help: |
      `CheckPassportEvent` is dispatched after the authenticator created the security passport. Listeners of this event do the actual authentication checks.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      What is the default value for the `invalidate_session` option in Symfony's security logout configuration?
    answers:
      - { value: "true", correct: true }
      - { value: "false", correct: false }
      - { value: "null", correct: false }
      - { value: "auto", correct: false }
    help: |
      By default, when users log out from any firewall, their sessions are invalidated.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_18

  -
    question: >
      Which of the following options can be used in `access_control` to restrict access based on the client's IP address?
    answers:
      - { value: "`ip`", correct: true }
      - { value: "`ips`", correct: true }
      - { value: "`client_ip`", correct: false }
      - { value: "`remote_addr`", correct: false }
    help: |
      The `ip` and `ips` options support IP addresses and subnet masks for access control.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_0
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_2

  -
    question: |
      You are implementing a custom service that needs to check if the current user has `ROLE_SALES_ADMIN`. Which of the following is the correct way to inject and use the `Security` service for this purpose?

      ```php
      namespace App\Service;

      use Symfony\Bundle\SecurityBundle\Security;
      // ...

      class SalesReportManager
      {
          public function __construct(
              private /* ??? */ $security,
          ) {}

          public function generateReport(): void
          {
              $salesData = [];
              if ($this->security->isGranted('ROLE_SALES_ADMIN')) {
                  // ...
              }
              // ...
          }
      }
      ```
    answers:
      - { value: "`Security`", correct: true }
      - { value: "`AccessDecisionManagerInterface`", correct: false }
      - { value: "`AuthorizationCheckerInterface`", correct: false }
      - { value: "`TokenStorageInterface`", correct: false }
    help: |
      The `Symfony\\Bundle\\SecurityBundle\\Security` service provides a convenient `isGranted()` method for authorization checks.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_69

  -
    question: >
      What is the purpose of the `#[AsCommand]` attribute in a Symfony console command?
    answers:
      - { value: "To define the command's name and description.", correct: true }
      - { value: "To inject services into the command.", correct: false }
      - { value: "To automatically register the command as a service.", correct: false }
      - { value: "To mark the command as an asynchronous job.", correct: false }
    help: |
      The `#[AsCommand]` attribute is used to configure the command's name, description, and other options directly in the class.
      https://symfony.com/doc/current/console.html#configuring-the-command (This was from the example, but it's a good general question. I'll make sure to link to the correct security-related docs for security questions.)

  -
    question: >
      Which interface should a user class implement if you want to customize how two user objects are compared for equality in Symfony's security component?
    answers:
      - { value: "Symfony\\Component\\Security\\Core\\User\\EquatableInterface", correct: true }
      - { value: "Symfony\\Component\\Security\\Core\\User\\UserInterface", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\User\\UserProviderInterface", correct: false }
    help: |
      Implementing `EquatableInterface` allows you to define custom logic for comparing user objects using the `isEqualTo()` method.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_75

  -
    question: >
      When configuring `login_throttling` in a Symfony firewall, what is the default maximum number of login attempts allowed per minute if no `max_attempts` or `interval` is specified?
    answers:
      - { value: "5", correct: true }
      - { value: "3", correct: false }
      - { value: "10", correct: false }
      - { value: "Unlimited", correct: false }
    help: |
      By default, the login throttling feature allows 5 login attempts per minute.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_41

  -
    question: >
      Which of the following `Clear-Site-Data` HTTP header values is NOT an allowed option for the `clear_site_data` setting in Symfony's logout configuration?
    answers:
      - { value: "headers", correct: true }
      - { value: "cache", correct: false }
      - { value: "cookies", correct: false }
      - { value: "storage", correct: false }
      - { value: "*", correct: false }
    help: |
      Allowed values for `clear_site_data` are `cache`, `cookies`, `storage`, `executionContexts`, and `*`.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_17

  -
    question: >
      What is the recommended way to generate a form-based login system (controller, Twig template, security config) in Symfony?
    answers:
      - { value: "`php bin/console make:security:form-login`", correct: true }
      - { value: "`php bin/console security:generate-form`", correct: false }
      - { value: "`composer require symfony/form-login-bundle`", correct: false }
      - { value: "`symfony new --login`", correct: false }
    help: |
      The `make:security:form-login` command streamlines the setup of a form-based login.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_17

  -
    question: >
      When configuring `access_control` rules, what is the general principle regarding the order of rules?
    answers:
      - { value: "More specific rules should be defined before more general rules.", correct: true }
      - { value: "Rules are applied in reverse order of definition.", correct: false }
      - { value: "The order of rules does not matter as Symfony finds the best match.", correct: false }
      - { value: "Rules with `PUBLIC_ACCESS` should always be defined first.", correct: false }
    help: |
      Symfony processes access control rules sequentially, applying the first matching rule. Therefore, more specific rules should precede general ones.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_62

  -
    question: >
      Which option in a firewall configuration allows multiple firewalls to share the same authentication state, meaning a user authenticated in one is recognized in others?
    answers:
      - { value: "`context`", correct: true }
      - { value: "`shared_session`", correct: false }
      - { value: "`global_auth`", correct: false }
      - { value: "`common_security`", correct: false }
    help: |
      The `context` option allows multiple firewalls to share the same authentication state.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_36
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_35

  -
    question: >
      What is the default `target` path for redirection after a successful logout in Symfony's security configuration?
    answers:
      - { value: "`/`", correct: true }
      - { value: "`/login`", correct: false }
      - { value: "`/home`", correct: false }
      - { value: "The previous URL", correct: false }
    help: |
      The `target` option for logout defaults to `/`.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_20

  -
    question: |
      Which of the following security expression language functions is equivalent to checking if the user has the `IS_AUTHENTICATED_FULLY` role?
    answers:
      - { value: "`is_fully_authenticated()`", correct: true }
      - { value: "`is_authenticated()`", correct: false }
      - { value: "`is_remember_me()`", correct: false }
      - { value: "`has_role('IS_AUTHENTICATED_FULLY')`", correct: false }
    help: |
      The `is_fully_authenticated()` function is equivalent to checking if the user has the `IS_AUTHENTICATED_FULLY` role.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      When configuring a `form_login` authenticator, what is the purpose of the `check_path` option?
    answers:
      - { value: "It defines the URL to which the login form is submitted for authentication.", correct: true }
      - { value: "It specifies the path to redirect to after a successful login.", correct: false }
      - { value: "It points to the Twig template for the login form.", correct: false }
      - { value: "It is used for CSRF token validation.", correct: false }
    help: |
      The `check_path` option in `form_login` specifies the URL that handles the login form submission.
      https://github.com/symfony.com/doc/current/security.html#form-login

  -
    question: >
      Which of the following is the correct interface for a user object that can store a hashed password in Symfony?
    answers:
      - { value: "Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface", correct: true }
      - { value: "Symfony\\Component\\Security\\Core\\User\\UserInterface", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\Encoder\\PasswordEncoderInterface", correct: false }
      - { value: "Symfony\\Component\\PasswordHasher\\PasswordHasherInterface", correct: false }
    help: |
      The `PasswordAuthenticatedUserInterface` provides the `getPassword()` method for retrieving the hashed password.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_12

  -
    question: >
      What is the default value for the `username_parameter` in a Symfony form login configuration?
    answers:
      - { value: "`_username`", correct: true }
      - { value: "`username`", correct: false }
      - { value: "`email`", correct: false }
      - { value: "`user`", correct: false }
    help: |
      The default name of the username field in the login form is `_username`.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which event is dispatched immediately after a user has been successfully authenticated and logged in, allowing listeners to modify the response sent back to the user?
    answers:
      - { value: "Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent", correct: true }
      - { value: "Symfony\\Component\\Security\\Core\\Event\\AuthenticationSuccessEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\InteractiveLoginEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent", correct: false }
    help: |
      `LoginSuccessEvent` is dispatched after authentication was fully successful, and listeners can modify the response.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      When using the `#[IsGranted]` attribute, what is the purpose of the `message` option?
    answers:
      - { value: "To provide a user-facing message if access is denied.", correct: true }
      - { value: "To log a message when the attribute is processed.", correct: false }
      - { value: "To define a translation key for the access denied message.", correct: false }
      - { value: "To specify the HTTP status code for access denied.", correct: false }
    help: |
      The `message` option in `#[IsGranted]` allows setting a custom message displayed to the user upon access denial.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_64

  -
    question: >
      What is the default `session_fixation_strategy` in Symfony's security component?
    answers:
      - { value: "MIGRATE", correct: true }
      - { value: "NONE", correct: false }
      - { value: "INVALIDATE", correct: false }
      - { value: "REGENERATE", correct: false }
    help: |
      The default `session_fixation_strategy` is `SessionAuthenticationStrategy::MIGRATE`.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_6

  -
    question: >
      Which of the following is a valid way to configure a password hasher for all instances of `PasswordAuthenticatedUserInterface` with a custom cost of 15?
    answers:
      - { value: '''
        password_hashers:
            Symfony\\\\Component\\\\Security\\\\Core\\\\User\\\\PasswordAuthenticatedUserInterface:
                algorithm: \'auto\'
                cost: 15
        ''', correct: true }
      - { value: '''
        password_hashers:
            PasswordAuthenticatedUserInterface:
                algorithm: \'auto\'
                cost: 15
        ''', correct: false }
      - { value: '''
        password_hashers:
            all_users:
                algorithm: \'auto\'
                cost: 15
        ''', correct: false }
      - { value: '''
        password_hashers:
            default:
                algorithm: \'auto\'
                cost: 15
        ''', correct: false }
    help: |
      You can configure password hashers for specific user classes or interfaces, including `PasswordAuthenticatedUserInterface`.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_1

  -
    question: >
      What is the purpose of the `allow_if` option in Symfony's `access_control` configuration?
    answers:
      - { value: "It allows defining complex access logic using an expression, which works in an OR fashion with the `roles` option.", correct: true }
      - { value: "It specifies a condition that must be true for the access rule to be ignored.", correct: false }
      - { value: "It defines a fallback role if the primary roles are not met.", correct: false }
      - { value: "It enables a custom voter service for the specific access rule.", correct: false }
    help: |
      The `allow_if` option enables complex access logic via expressions, acting as an OR condition with specified roles.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_3

  -
    question: >
      In a Twig template, how can you check if the current user is fully authenticated and display their email address?
    answers:
      - { value: "{% if is_granted('IS_AUTHENTICATED_FULLY') %}<p>Email: {{ app.user.email }}</p>{% endif %}", correct: true }
      - { value: "{% if app.user %}<p>Email: {{ app.user.email }}</p>{% endif %}", correct: false }
      - { value: "{% if is_logged_in() %}<p>Email: {{ app.user.email }}</p>{% endif %}", correct: false }
      - { value: "{% if has_role('IS_AUTHENTICATED_FULLY') %}<p>Email: {{ app.user.email }}</p>{% endif %}", correct: false }
    help: |
      The `is_granted()` Twig function checks for roles, and `app.user` provides access to the authenticated user object.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_56

  -
    question: >
      When should you avoid calling `Security::getFirewallConfig()` in a service's constructor?
    answers:
      - { value: "Because authentication may not be complete yet, leading to incorrect firewall information.", correct: true }
      - { value: "Because it can cause a circular dependency.", correct: false }
      - { value: "Because the firewall configuration is not available at compile time.", correct: false }
      - { value: "Because it is a performance bottleneck.", correct: false }
    help: |
      It is recommended to avoid calling `getFirewallConfig()` in the constructor as authentication may not be complete.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_16

  -
    question: >
      Which command is used to install the Symfony SecurityBundle?
    answers:
      - { value: "`composer require symfony/security-bundle`", correct: true }
      - { value: "`composer install symfony/security-bundle`", correct: false }
      - { value: "`php bin/console security:install`", correct: false }
      - { value: "`symfony install security`", correct: false }
    help: |
      The `composer require symfony/security-bundle` command installs the SecurityBundle.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_0

  -
    question: >
      What is the default value for the `path` option in Symfony's security logout configuration?
    answers:
      - { value: "`/logout`", correct: true }
      - { value: "`/app_logout`", correct: false }
      - { value: "`/exit`", correct: false }
      - { value: "`/signout`", correct: false }
    help: |
      The `path` option for logout defaults to `/logout`.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_19

  -
    question: >
      Which of the following is a valid method to define a user provider that chains multiple other providers?
    answers:
      - { value: '''
        $security->provider(\'all_users\')->chain()
            ->providers([\'backend_users\', \'legacy_users\', \'users\'])
        ;
        ''', correct: true }
      - { value: '''
        $security->provider(\'all_users\')->aggregate()
            ->providers([\'backend_users\', \'legacy_users\', \'users\'])
        ;
        ''', correct: false }
      - { value: '''
        $security->provider(\'all_users\')->combine()
            ->providers([\'backend_users\', \'legacy_users\', \'users\'])
        ;
        ''', correct: false }
      - { value: '''
        $security->provider(\'all_users\')->merge()
            ->providers([\'backend_users\', \'legacy_users\', \'users\'])
        ;
        ''', correct: false }
    help: |
      The `chain()` method is used to define a user provider that delegates to multiple other providers.
      https://github.com/symfony/symfony-docs/blob/7.3/security/user_providers.rst#_snippet_7

  -
    question: >
      What is the purpose of the `csrf_token_id` option in Symfony's security logout configuration?
    answers:
      - { value: "An arbitrary string used to identify the CSRF token for validity checks.", correct: true }
      - { value: "The name of the HTML input field for the CSRF token.", correct: false }
      - { value: "The secret key used to generate the CSRF token.", correct: false }
      - { value: "The lifetime of the CSRF token in seconds.", correct: false }
    help: |
      The `csrf_token_id` is an arbitrary string used to identify the CSRF token for validation.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_24

  -
    question: >
      Which of the following `access_control` rules correctly restricts access to the `/admin` path to requests originating from `127.0.0.1` AND using port `8080`?
    answers:
      - { value: "{ path: ^/admin, roles: ROLE_USER, ip: 127.0.0.1, port: 8080 }", correct: true }
      - { value: "{ path: ^/admin, roles: ROLE_USER, ip: 127.0.0.1 OR port: 8080 }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER, ip_and_port: 127.0.0.1:8080 }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER, conditions: \"request.getClientIp() == '127.0.0.1' and request.getPort() == 8080\" }", correct: false }
    help: |
      `access_control` allows combining `ip` and `port` options to specify multiple matching criteria.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_0

  -
    question: >
      When configuring `login_throttling`, what is the purpose of the `limiter` option?
    answers:
      - { value: "To specify a custom rate limiter service ID.", correct: true }
      - { value: "To define the maximum number of login attempts.", correct: false }
      - { value: "To set the time interval for throttling.", correct: false }
      - { value: "To enable or disable login throttling.", correct: false }
    help: |
      The `limiter` option allows you to use a custom rate limiter service for login throttling.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_41

  -
    question: >
      Which type of authentication is typically used when an external system handles initial authentication and passes the user identifier via a server parameter like `REMOTE_USER`?
    answers:
      - { value: "Remote User authentication", correct: true }
      - { value: "X.509 authentication", correct: false }
      - { value: "Form login authentication", correct: false }
      - { value: "JSON login authentication", correct: false }
    help: |
      Remote User authentication is designed for scenarios where an external system provides the user identifier via a server parameter.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_38

  -
    question: >
      What is the recommended approach for checking user permissions within a custom Symfony Voter?
    answers:
      - { value: "Directly use the `AccessDecisionManager` service.", correct: true }
      - { value: "Use `Security::isGranted()` as it's a convenient helper.", correct: false }
      - { value: "Inject `AuthorizationCheckerInterface` and use its `isGranted()` method.", correct: false }
      - { value: "Access the token directly from the `TokenStorageInterface` and check roles.", correct: false }
    help: |
      The `Security::isGranted()` method is not recommended for use inside voters due to potential token mismatches; `AccessDecisionManager` should be used instead.
      https://github.com/symfony/symfony-docs/blob/7.3/security/voters.rst#_snippet_13

  -
    question: >
      Which of the following events is dispatched when an `AuthenticationException` is thrown during the authentication process?
    answers:
      - { value: "Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent", correct: true }
      - { value: "Symfony\\Component\\Security\\Core\\Event\\AuthenticationFailureEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\AuthenticationExceptionEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\AuthenticationErrorEvent", correct: false }
    help: |
      `LoginFailureEvent` is dispatched after an `AuthenticationException` was thrown during authentication.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      What is the primary purpose of the `PasswordUpgraderInterface` in Symfony's security component?
    answers:
      - { value: "To allow upgrading a user's password hash when a stronger algorithm or higher cost is configured.", correct: true }
      - { value: "To automatically rehash all user passwords in the database.", correct: false }
      - { value: "To define a custom password hashing algorithm.", correct: false }
      - { value: "To check if a plain password matches a hashed password.", correct: false }
    help: |
      The `PasswordUpgraderInterface` provides the `upgradePassword()` method, used to rehash a user's password if it needs upgrading (e.g., due to a change in algorithm or cost).
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_12

  -
    question: >
      Which of the following `access_control` configurations correctly uses a custom request matcher service named `App\Security\RequestMatcher\MyRequestMatcher`?
    answers:
      - { value: "{ roles: ROLE_USER, request_matcher: App\\\\Security\\\\RequestMatcher\\\\MyRequestMatcher }", correct: true }
      - { value: "{ roles: ROLE_USER, matcher_service: App\\\\Security\\\\RequestMatcher\\\\MyRequestMatcher }", correct: false }
      - { value: "{ roles: ROLE_USER, service: App\\\\Security\\\\RequestMatcher\\\\MyRequestMatcher }", correct: false }
      - { value: "{ roles: ROLE_USER, custom_matcher: @App\\\\Security\\\\RequestMatcher\\\\MyRequestMatcher }", correct: false }
    help: |
      The `request_matcher` option allows specifying a service for custom request matching needs in `access_control`.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_0

  -
    question: >
      When configuring a firewall, what does the `lazy: true` option signify?
    answers:
      - { value: "The user provider will only be loaded when authentication is actually needed.", correct: true }
      - { value: "The firewall will only be activated if a matching route is accessed.", correct: false }
      - { value: "Authentication will be performed asynchronously.", correct: false }
      - { value: "The security component will not be initialized until the first request.", correct: false }
    help: |
      The `lazy: true` option defers the loading of the user provider until it's explicitly required for authentication.
      https://symfony.com/doc/current/security.html#firewalls-lazy-loading

  -
    question: >
      Which of the following is the correct way to configure a JSON login authenticator for a firewall, assuming `api_login` is the route name for the login endpoint?
    answers:
      - { value: '''
        json_login:
            check_path: api_login
        ''', correct: true }
      - { value: '''
        json_login:
            login_path: api_login
        ''', correct: false }
      - { value: '''
        json_login:
            route: api_login
        ''', correct: false }
      - { value: '''
        json_login:
            endpoint: api_login
        ''', correct: false }
    help: |
      The `json_login` authenticator uses `check_path` to specify the route for handling JSON login requests.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_25

  -
    question: >
      What is the primary benefit of using the `symfony/rate-limiter` component for login throttling?
    answers:
      - { value: "It helps prevent brute-force attacks by limiting the number of login attempts.", correct: true }
      - { value: "It encrypts login credentials during transmission.", correct: false }
      - { value: "It provides a CAPTCHA mechanism for login forms.", correct: false }
      - { value: "It automatically blocks suspicious IP addresses.", correct: false }
    help: |
      The `symfony/rate-limiter` component is used to implement login throttling, which prevents brute-force attacks.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_40

  -
    question: >
      Which of the following variables is available in Symfony's security expression language and represents the current user object, or `null` if not authenticated?
    answers:
      - { value: "`user`", correct: true }
      - { value: "`current_user`", correct: false }
      - { value: "`security.user`", correct: false }
      - { value: "`authenticated_user`", correct: false }
    help: |
      The `user` variable in security expressions is an instance of `UserInterface` or `null`.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      What is the default value for the `post_only` option in a Symfony form login configuration?
    answers:
      - { value: "true", correct: true }
      - { value: "false", correct: false }
      - { value: "null", correct: false }
      - { value: "auto", correct: false }
    help: |
      By default, login forms must be submitted to the `check_path` URL as a POST request.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which event is dispatched just before a user logs out of your application?
    answers:
      - { value: "Symfony\\Component\\Security\\Http\\Event\\LogoutEvent", correct: true }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\PreLogoutEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\UserLogoutEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\Event\\SecurityLogoutEvent", correct: false }
    help: |
      The `LogoutEvent` is dispatched just before a user logs out.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      How can you programmatically log in a user on a specific firewall using the `Security` helper class in Symfony?
    answers:
      - { value: "`$security->login($user, $authenticatorName, $firewallName, $badges, $attributes);`", correct: true }
      - { value: "`$security->authenticate($user, $firewallName);`", correct: false }
      - { value: "`$security->setToken(new UsernamePasswordToken($user, $firewallName, $user->getRoles()));`", correct: false }
      - { value: "`$security->doLogin($user, $firewallName);`", correct: false }
    help: |
      The `Security::login()` method allows programmatic user login with options for authenticator, firewall, badges, and attributes.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      What is the purpose of the `AuthenticationTokenCreatedEvent`?
    answers:
      - { value: "Dispatched after the passport was validated and the authenticator created the security token (and user).", correct: true }
      - { value: "Dispatched before the authenticator attempts to create a security token.", correct: false }
      - { value: "Dispatched when an authentication token is successfully stored in the session.", correct: false }
      - { value: "Dispatched when a new user is registered and an initial token is generated.", correct: false }
    help: |
      `AuthenticationTokenCreatedEvent` is dispatched after the passport was validated and the authenticator created the security token.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      Which of the following `access_control` configurations correctly restricts access to the `admin` route to users with `ROLE_ADMIN`?
    answers:
      - { value: "{ route: 'admin', roles: ROLE_ADMIN }", correct: true }
      - { value: "{ path: '^/admin', roles: ROLE_ADMIN }", correct: false }
      - { value: "{ name: 'admin', roles: ROLE_ADMIN }", correct: false }
      - { value: "{ _route: 'admin', roles: ROLE_ADMIN }", correct: false }
    help: |
      The `route` option can be used as a shortcut to match access control rules against a specific route name.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_0

  -
    question: >
      What is the default value for the `csrf_parameter` in Symfony's security logout configuration?
    answers:
      - { value: "`_csrf_token`", correct: true }
      - { value: "`_token`", correct: false }
      - { value: "`csrf_token`", correct: false }
      - { value: "`logout_token`", correct: false }
    help: |
      The `csrf_parameter` for logout defaults to `_csrf_token`.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_22

  -
    question: >
      Which event is dispatched only when the authenticator implements `InteractiveAuthenticatorInterface`, indicating a login requires explicit user action (e.g., a login form)?
    answers:
      - { value: "Symfony\\Component\\Security\\Http\\Event\\InteractiveLoginEvent", correct: true }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\FormLoginEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\UserActionLoginEvent", correct: false }
    help: |
      `InteractiveLoginEvent` is dispatched after authentication was fully successful only when the authenticator implements `InteractiveAuthenticatorInterface`.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      What is the purpose of the `PasswordHasherInterface::needsRehash()` method?
    answers:
      - { value: "To determine if a hashed password needs to be rehashed (e.g., due to an outdated algorithm).", correct: true }
      - { value: "To rehash a password with a new algorithm.", correct: false }
      - { value: "To verify if a plain password matches a hashed password.", correct: false }
      - { value: "To generate a new salt for password hashing.", correct: false }
    help: |
      `needsRehash()` checks if the password needs to be rehashed based on current configuration.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_12

  -
    question: >
      Which of the following `access_control` configurations correctly restricts access to the `/admin` path to requests using only `POST` or `PUT` HTTP methods?
    answers:
      - { value: "{ path: ^/admin, roles: ROLE_USER, methods: [POST, PUT] }", correct: true }
      - { value: "{ path: ^/admin, roles: ROLE_USER, http_methods: [POST, PUT] }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER, method: POST|PUT }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER, request_method: [POST, PUT] }", correct: false }
    help: |
      The `methods` option in `access_control` allows restricting access based on HTTP methods.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_0

  -
    question: >
      What is the purpose of the `AuthenticationSuccessHandlerInterface`?
    answers:
      - { value: "To customize behavior after a successful authentication.", correct: true }
      - { value: "To handle the redirection after a successful login.", correct: false }
      - { value: "To log successful authentication attempts.", correct: false }
      - { value: "To generate the authentication token.", correct: false }
    help: |
      `AuthenticationSuccessHandlerInterface` is used for customizing successful authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is the correct way to configure the X.509 authenticator for a firewall named `main` using a user provider named `your_user_provider`?
    answers:
      - { value: '''
        firewalls:
            main:
                x509:
                    provider: your_user_provider
        ''', correct: true }
      - { value: '''
        firewalls:
            main:
                client_certificate:
                    provider: your_user_provider
        ''', correct: false }
      - { value: '''
        firewalls:
            main:
                certificate:
                    provider: your_user_provider
        ''', correct: false }
      - { value: '''
        firewalls:
            main:
                ssl_client_cert:
                    provider: your_user_provider
        ''', correct: false }
    help: |
      The `x509` option enables the X.509 authenticator and requires a `provider` to be specified.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_37

  -
    question: >
      What is the default value for the `failure_path` option in Symfony's form login configuration?
    answers:
      - { value: "`/login`", correct: true }
      - { value: "`/login_error`", correct: false }
      - { value: "`/`", correct: false }
      - { value: "The current URL", correct: false }
    help: |
      The `failure_path` option defaults to `/login` for redirection after a failed login attempt.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following `access_control` configurations correctly restricts access to the `/admin` path to requests originating from the host `symfony.com`?
    answers:
      - { value: "{ path: ^/admin, roles: ROLE_USER, host: symfony\\\\.com$ }", correct: true }
      - { value: "{ path: ^/admin, roles: ROLE_USER, domain: symfony.com }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER, hostname: symfony.com }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER, server_name: symfony.com }", correct: false }
    help: |
      The `host` option in `access_control` allows matching against the request's hostname using a regular expression.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_0

  -
    question: >
      What is the purpose of the `TokenDeauthenticatedEvent`?
    answers:
      - { value: "Dispatched when a user is deauthenticated, for instance because the password was changed.", correct: true }
      - { value: "Dispatched when a user's session token expires.", correct: false }
      - { value: "Dispatched when a user explicitly logs out.", correct: false }
      - { value: "Dispatched when an invalid authentication token is presented.", correct: false }
    help: |
      `TokenDeauthenticatedEvent` is dispatched when a user is deauthenticated, such as after a password change.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      Which of the following is a valid policy for a rate limiter defined under `framework.rate_limiter`?
    answers:
      - { value: "token_bucket", correct: true }
      - { value: "sliding_window", correct: true }
      - { value: "fixed_window", correct: false }
      - { value: "leaky_bucket", correct: false }
    help: |
      Symfony's rate limiter component supports `token_bucket` and `sliding_window` policies.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_43

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following `access_control` rules correctly uses an environment variable `TRUSTED_IPS` for IP restriction?
    answers:
      - { value: "{ path: ^/admin, roles: ROLE_USER_IP, ips: '%env(TRUSTED_IPS)%' }", correct: true }
      - { value: "{ path: ^/admin, roles: ROLE_USER_IP, ip: env('TRUSTED_IPS') }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER_IP, trusted_ips: '%TRUSTED_IPS%' }", correct: false }
      - { value: "{ path: ^/admin, roles: ROLE_USER_IP, allowed_ips: '%env(TRUSTED_IPS)%' }", correct: false }
    help: |
      Environment variables can be used within `ips` configuration by wrapping them in `%env(...)%`.
      https://github.com/symfony/symfony-docs/blob/7.3/security/access_control.rst#_snippet_0

  -
    question: >
      What is the default value for the `default_target_path` option in Symfony's form login configuration?
    answers:
      - { value: "`/`", correct: true }
      - { value: "`/home`", correct: false }
      - { value: "`/dashboard`", correct: false }
      - { value: "The previous URL", correct: false }
    help: |
      The `default_target_path` option defaults to `/` when there is no previous page stored in the session.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following is a valid way to configure an in-memory user provider in `security.yaml`?
    answers:
      - { value: '''
        providers:
            users_in_memory: { memory: null }
        ''', correct: true }
      - { value: '''
        providers:
            in_memory_users: { type: memory }
        ''', correct: false }
      - { value: '''
        providers:
            memory_provider: { provider: memory }
        ''', correct: false }
      - { value: '''
        providers:
            static_users: { users: [] }
        ''', correct: false }
    help: |
      The `memory: null` configuration is used to define an in-memory user provider.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_1

  -
    question: >
      What is the purpose of the `SwitchUserEvent`?
    answers:
      - { value: "Dispatched after impersonation is completed.", correct: true }
      - { value: "Dispatched when a user switches between different authentication methods.", correct: false }
      - { value: "Dispatched when a user changes their role.", correct: false }
      - { value: "Dispatched when a user logs in with a different username.", correct: false }
    help: |
      The `SwitchUserEvent` is dispatched after impersonation is completed.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      Which of the following is the correct way to configure a password hasher for a specific `App\Entity\User` class with the `auto` algorithm and a `cost` of 15?
    answers:
      - { value: '''
        password_hashers:
            App\\\\Entity\\\\User:
                algorithm: \'auto\'
                cost: 15
        ''', correct: true }
      - { value: '''
        password_hashers:
            App\\\\Entity\\\\User: \'auto\'
            options: { cost: 15 }
        ''', correct: false }
      - { value: '''
        password_hashers:
            user_class: App\\\\Entity\\\\User
            algorithm: \'auto\'
            cost: 15
        ''', correct: false }
      - { value: '''
        password_hashers:
            App\\\\Entity\\\\User:
                hasher: auto
                cost: 15
        ''', correct: false }
    help: |
      Password hashers are configured per user class, with `algorithm` and `cost` options.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_1

  -
    question: >
      What is the purpose of the `use_referer` option in Symfony's form login configuration?
    answers:
      - { value: "If true, redirects the user to the `HTTP_REFERER` header value when no previous URL is in the session.", correct: true }
      - { value: "It forces the login form to be submitted with a `Referer` header.", correct: false }
      - { value: "It prevents redirection loops by ignoring the `Referer` header if it's the login path.", correct: false }
      - { value: "It uses the `Referer` header as the default target path.", correct: false }
    help: |
      The `use_referer` option controls redirection based on the `HTTP_REFERER` header.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following is a valid method of configuring a firewall to be stateless?
    answers:
      - { value: "`stateless: true`", correct: true }
      - { value: "`session: false`", correct: false }
      - { value: "`no_session: true`", correct: false }
      - { value: "`lazy: true`", correct: false }
    help: |
      The `stateless: true` option is used to configure a firewall to be stateless, meaning it will not use sessions.
      https://symfony.com/doc/current/security.html#stateless-firewalls

  -
    question: >
      What is the primary function of the `access_control` section in `security.yaml`?
    answers:
      - { value: "To define URL-based access restrictions and trigger authentication.", correct: true }
      - { value: "To configure user roles and permissions globally.", correct: false }
      - { value: "To manage database access for user entities.", correct: false }
      - { value: "To define custom authentication providers.", correct: false }
    help: |
      `access_control` defines the security protection of application URLs, used to trigger authentication and manage access permissions.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_7

  -
    question: >
      Which of the following describes the `role_names` variable available in Symfony's security expression language?
    answers:
      - { value: "An array with the string representation of the roles the user has, including roles granted indirectly via role hierarchy but excluding `IS_AUTHENTICATED_*` attributes.", correct: true }
      - { value: "An array of all roles assigned directly to the user.", correct: false }
      - { value: "A comma-separated string of all user roles.", correct: false }
      - { value: "An array containing only the `IS_AUTHENTICATED_*` attributes.", correct: false }
    help: |
      The `role_names` variable provides an array of string representations of the user's roles, including inherited roles, but excluding `IS_AUTHENTICATED_*` attributes.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      What is the purpose of the `AuthenticationSuccessEvent`?
    answers:
      - { value: "Dispatched when authentication is nearing success. This is the last event that can make an authentication fail by throwing an `AuthenticationException`.", correct: true }
      - { value: "Dispatched after the user is fully logged in and the response is sent.", correct: false }
      - { value: "Dispatched when the user's credentials have been successfully validated.", correct: false }
      - { value: "Dispatched when a new security token is created after successful authentication.", correct: false }
    help: |
      `AuthenticationSuccessEvent` is dispatched when authentication is nearing success and can still be failed.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` with a pattern that matches all requests?
    answers:
      - { value: "`pattern: ^/`", correct: true }
      - { value: "`pattern: .*`", correct: true }
      - { value: "`pattern: /`", correct: false }
      - { value: "Omitting the `pattern` option entirely.", correct: false }
    help: |
      A firewall with no pattern should be defined last because it will match all requests. `^/` or `.*` are common patterns for this.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_13

  -
    question: >
      What is the purpose of the `use_forward` option in Symfony's form login configuration?
    answers:
      - { value: "If true, forwards the user to the login form instead of redirecting.", correct: true }
      - { value: "It enables server-side forwarding of login requests.", correct: false }
      - { value: "It allows the login form to be submitted via a forward proxy.", correct: false }
      - { value: "It ensures that the original request attributes are preserved during login.", correct: false }
    help: |
      The `use_forward` option determines whether to forward or redirect to the login form.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following is a valid way to configure a remote user authenticator for a firewall named `main` using a user provider named `your_user_provider` and a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `always_use_default_target_path` option in Symfony's form login configuration?
    answers:
      - { value: "If true, users are always redirected to the `default_target_path`, regardless of the previous URL stored in the session.", correct: true }
      - { value: "It ensures that the `default_target_path` is always used as a fallback.", correct: false }
      - { value: "It forces a redirect to the `default_target_path` even if the user was already on that page.", correct: false }
      - { value: "It disables the use of the `_target_path` parameter.", correct: false }
    help: |
      When `always_use_default_target_path` is true, users are always redirected to the specified default path.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following best describes the `object` variable in Symfony's security expression language?
    answers:
      - { value: "The object (if any) that's passed as the second argument to `isGranted()`.", correct: true }
      - { value: "The currently authenticated user object.", correct: false }
      - { value: "The request object.", correct: false }
      - { value: "The security token object.", correct: false }
    help: |
      The `object` variable in security expressions refers to the subject passed to `isGranted()`.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      What is the purpose of the `form_only` option in Symfony's form login configuration?
    answers:
      - { value: "Set to true to require login data sent via form (`application/x-www-form-urlencoded` or `multipart/form-data`).", correct: true }
      - { value: "It ensures that only HTML forms can trigger the login process.", correct: false }
      - { value: "It disables JSON login for the firewall.", correct: false }
      - { value: "It forces the login form to be rendered using Twig.", correct: false }
    help: |
      The `form_only` option ensures that login data must be sent via a form, preventing other content types from being handled by the form login authenticator.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following is the correct way to configure a firewall named `main` with a pattern that matches URLs starting with `/admin`?
    answers:
      - { value: "`pattern: ^/admin`", correct: true }
      - { value: "`path: /admin*`", correct: false }
      - { value: "`route_prefix: /admin`", correct: false }
      - { value: "`url: /admin/**`", correct: false }
    help: |
      The `pattern` option uses a regular expression to match against the incoming request URL.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_9

  -
    question: >
      What does the `is_authenticated()` function in Symfony's security expression language return?
    answers:
      - { value: "True if the user is authenticated via \"remember-me\" or authenticated \"fully\" (i.e., logged in).", correct: true }
      - { value: "True only if the user is fully authenticated (not via \"remember-me\").", correct: false }
      - { value: "True if the user has any role.", correct: false }
      - { value: "True if the user has a valid session.", correct: false }
    help: |
      `is_authenticated()` returns true if the user is authenticated via "remember-me" or "fully".
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      Which of the following is the correct interface for a user object that can be updated with a new hashed password after re-hashing?
    answers:
      - { value: "Symfony\\Component\\Security\\Core\\User\\PasswordUpgraderInterface", correct: true }
      - { value: "Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\User\\UserInterface", correct: false }
      - { value: "Symfony\\Component\\PasswordHasher\\PasswordHasherInterface", correct: false }
    help: |
      The `PasswordUpgraderInterface` defines the `upgradePassword` method for updating a user's hashed password.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_12

  -
    question: >
      What is the purpose of the `_target_path` parameter in a Symfony login form?
    answers:
      - { value: "It is the name of the HTML element used to set the target path for redirection after successful login.", correct: true }
      - { value: "It specifies the route name for the login success page.", correct: false }
      - { value: "It's a hidden field that stores the user's original requested URL.", correct: false }
      - { value: "It defines the default path to redirect to if no specific target is provided.", correct: false }
    help: |
      `_target_path` is the name of the HTML element used to set the target path in a login form.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following is a valid way to configure a firewall named `dev` to be completely unsecured (no security checks)?
    answers:
      - { value: '''
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        ''', correct: true }
      - { value: '''
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            enabled: false
        ''', correct: false }
      - { value: '''
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            anonymous: true
        ''', correct: false }
      - { value: '''
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            access: public
        ''', correct: false }
    help: |
      Setting `security: false` for a firewall completely disables security for requests matching its pattern.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_13

  -
    question: >
      Which of the following describes the `subject` variable in Symfony's security expression language?
    answers:
      - { value: "It stores the same value as `object`, so they are equivalent.", correct: true }
      - { value: "It refers to the currently authenticated user.", correct: false }
      - { value: "It is the request object being secured.", correct: false }
      - { value: "It is the security token.", correct: false }
    help: |
      The `subject` variable is an alias for the `object` variable in security expressions.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      What is the purpose of the `AuthenticationTrustResolverInterface` in Symfony's security component?
    answers:
      - { value: "It helps determine the 'trust level' of an authenticated user (e.g., anonymous, remembered, fully authenticated).", correct: true }
      - { value: "It manages the trust between different security providers.", correct: false }
      - { value: "It verifies the authenticity of the authentication token.", correct: false }
      - { value: "It resolves user roles based on their trust level.", correct: false }
    help: |
      The `trust_resolver` variable (an instance of `AuthenticationTrustResolverInterface`) is used to determine the authentication trust level.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      Which of the following events is dispatched after impersonation is completed?
    answers:
      - { value: "Symfony\\Component\\Security\\Http\\Event\\SwitchUserEvent", correct: true }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\ImpersonationSuccessEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\Event\\UserSwitchEvent", correct: false }
      - { value: "Symfony\\Component\\Security\\Http\\Event\\UserImpersonatedEvent", correct: false }
    help: |
      The `SwitchUserEvent` is dispatched after impersonation is completed.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      What is the purpose of the `is_remember_me()` function in Symfony's security expression language?
    answers:
      - { value: "It returns true if the user is authenticated via a 'remember-me' cookie.", correct: true }
      - { value: "It is equivalent to checking if the user has the `IS_AUTHENTICATED_REMEMBERED` role.", correct: false }
      - { value: "It checks if the user has opted for the 'remember me' functionality during login.", correct: false }
      - { value: "It determines if the user's session is persistent.", correct: false }
    help: |
      `is_remember_me()` is similar to, but not equal to, `IS_AUTHENTICATED_REMEMBERED`. It specifically checks for remember-me authentication.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      When configuring password hashers, what does the `auto` algorithm signify?
    answers:
      - { value: "Symfony automatically chooses the best available hashing algorithm based on PHP configuration and recommendations.", correct: true }
      - { value: "The algorithm is automatically detected from the existing hashed password.", correct: false }
      - { value: "It uses a random hashing algorithm for each user.", correct: false }
      - { value: "It defaults to bcrypt with a configurable cost.", correct: false }
    help: |
      The `auto` algorithm tells Symfony to automatically choose the best available hashing algorithm.
      https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords

  -
    question: >
      Which of the following is the correct interface for a user object that provides a method to get the hashed password?
    answers:
      - { value: "Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface", correct: true }
      - { value: "Symfony\\Component\\Security\\Core\\User\\UserInterface", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\User\\CredentialsInterface", correct: false }
      - { value: "Symfony\\Component\\Security\\Core\\User\\PasswordProviderInterface", correct: false }
    help: |
      The `PasswordAuthenticatedUserInterface` provides the `getPassword()` method.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_12

  -
    question: >
      What is the purpose of the `PasswordHasherInterface::hash()` method?
    answers:
      - { value: "To hash a plaintext password.", correct: true }
      - { value: "To verify a plaintext password against a hashed password.", correct: false }
      - { value: "To generate a random salt for hashing.", correct: false }
      - { value: "To upgrade an old password hash to a new one.", correct: false }
    help: |
      The `hash()` method of `PasswordHasherInterface` is used to hash a plaintext password.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_12

  -
    question: >
      Which of the following best describes the `token` variable in Symfony's security expression language?
    answers:
      - { value: "The token object representing the current authentication.", correct: true }
      - { value: "The CSRF token for the current request.", correct: false }
      - { value: "A unique identifier for the user's session.", correct: false }
      - { value: "The encoded password hash.", correct: false }
    help: |
      The `token` variable provides access to the current security token object.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      When using `access_control` rules, if a request matches multiple rules, which rule will Symfony apply?
    answers:
      - { value: "The first access control rule that matches the request.", correct: true }
      - { value: "The last access control rule that matches the request.", correct: false }
      - { value: "The rule with the most specific path.", correct: false }
      - { value: "All matching rules, combining their roles.", correct: false }
    help: |
      Only the *first* access control that matches will be used.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_1

  -
    question: >
      What is the purpose of the `login_path` option in a Symfony form login configuration?
    answers:
      - { value: "It defines the route name or path to the login form itself.", correct: true }
      - { value: "It specifies the URL to which the login form is submitted.", correct: false }
      - { value: "It is the path to redirect to after a failed login attempt.", correct: false }
      - { value: "It indicates the path where login attempts are logged.", correct: false }
    help: |
      The `login_path` option specifies the route or path to the login form.
      https://github.com/symfony.com/doc/current/security.html#form-login

  -
    question: >
      Which of the following is the correct way to specify a custom `interval` for login throttling, allowing 3 attempts per 15 minutes?
    answers:
      - { value: '''
        login_throttling:
            max_attempts: 3
            interval: \'15 minutes\'
        ''', correct: true }
      - { value: '''
        login_throttling:
            limit: 3
            period: \'15 minutes\'
        ''', correct: false }
      - { value: '''
        login_throttling:
            attempts: 3
            time: \'15 minutes\'
        ''', correct: false }
      - { value: '''
        login_throttling:
            max: 3
            duration: \'15 minutes\'
        ''', correct: false }
    help: |
      The `max_attempts` and `interval` options are used to configure login throttling.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_41

  -
    question: >
      Which of the following is a valid way to configure an entity user provider for a firewall?
    answers:
      - { value: '''
        providers:
            app_user_provider:
                entity:
                    class: App\\\\Entity\\\\User
                    property: email
        ''', correct: true }
      - { value: '''
        providers:
            app_user_provider:
                database:
                    entity: App\\\\Entity\\\\User
                    username_field: email
        ''', correct: false }
      - { value: '''
        providers:
            app_user_provider:
                orm:
                    class: App\\\\Entity\\\\User
                    id_property: email
        ''', correct: false }
      - { value: '''
        providers:
            app_user_provider:
                db:
                    user_class: App\\\\Entity\\\\User
                    username_property: email
        ''', correct: false }
    help: |
      The `entity` key is used to configure an entity user provider, specifying the `class` and `property` for identifying users.
      https://symfony.com/doc/current/security/user_providers.html#entity-provider

  -
    question: >
      What is the purpose of the `_failure_path` parameter in a Symfony login form?
    answers:
      - { value: "It is the name of the HTML element used to set the failure path for redirection after a failed login attempt.", correct: true }
      - { value: "It specifies the route name for the login failure page.", correct: false }
      - { value: "It's a hidden field that stores the error message from a failed login.", correct: false }
      - { value: "It defines the default path to redirect to if login fails.", correct: false }
    help: |
      `_failure_path` is the name of the HTML element used to set the failure path in a login form.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_13

  -
    question: >
      Which of the following roles is automatically granted to any user who is authenticated, including those authenticated via "remember-me"?
    answers:
      - { value: "IS_AUTHENTICATED_REMEMBERED", correct: true }
      - { value: "IS_AUTHENTICATED_FULLY", correct: false }
      - { value: "IS_AUTHENTICATED_ANONYMOUSLY", correct: false }
      - { value: "ROLE_USER", correct: false }
    help: |
      `IS_AUTHENTICATED_REMEMBERED` is granted to users who are authenticated, including those via "remember-me".
      https://symfony.com/doc/current/security.html#built-in-roles

  -
    question: >
      Which of the following roles is automatically granted to any user, even if they are not authenticated?
    answers:
      - { value: "IS_AUTHENTICATED_ANONYMOUSLY", correct: true }
      - { value: "PUBLIC_ACCESS", correct: false }
      - { value: "ROLE_GUEST", correct: false }
      - { value: "IS_AUTHENTICATED_UNDEFINED", correct: false }
    help: |
      `IS_AUTHENTICATED_ANONYMOUSLY` is granted to every user, including anonymous ones.
      https://symfony.com/doc/current/security.html#built-in-roles

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure an LDAP user provider?
    answers:
      - { value: '''
        providers:
            backend_users:
                ldap:
                    service: ldap.client
                    base_dn: \'ou=users,dc=symfony,dc=com\'
                    search_dn: \'cn=admin,dc=symfony,dc=com\'
                    search_password: \'admin\'
                    default_roles: [\'ROLE_LDAP_USER\']
        ''', correct: true }
      - { value: '''
        providers:
            backend_users:
                ldap_server:
                    host: ldap.example.com
        ''', correct: false }
      - { value: '''
        providers:
            backend_users:
                directory:
                    type: ldap
        ''', correct: false }
      - { value: '''
        providers:
            backend_users:
                external:
                    type: ldap
        ''', correct: false }
    help: |
      The `ldap` key is used to configure an LDAP user provider, requiring a `service` and other LDAP-specific options.
      https://symfony.com/doc/current/security/user_providers.html#ldap-provider

  -
    question: >
      What is the purpose of the `is_granted(permission, object)` function in Symfony's security expression language?
    answers:
      - { value: "Checks if the user has the given permission on an optional object, equivalent to using the `isGranted()` method from the security service.", correct: true }
      - { value: "Grants a specific permission to the current user.", correct: false }
      - { value: "Checks if the current user has a specific role.", correct: false }
      - { value: "Determines if the user has access to a given URL path.", correct: false }
    help: |
      `is_granted()` checks if the user has a specific permission, optionally on a subject, and is equivalent to the `Security` service's `isGranted()` method.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      Which of the following is the correct way to set a hashed password on a user object that implements `PasswordAuthenticatedUserInterface`?
    answers:
      - { value: "`$user->setPassword($hashedPassword);`", correct: true }
      - { value: "`$user->setHashedPassword($hashedPassword);`", correct: false }
      - { value: "`$user->password = $hashedPassword;`", correct: false }
      - { value: "`$user->updatePassword($hashedPassword);`", correct: false }
    help: |
      The `setPassword()` method is used to set the hashed password on a `PasswordAuthenticatedUserInterface` object.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_10

  -
    question: >
      What is the purpose of the `AuthenticationTokenCreatedEvent`?
    answers:
      - { value: "Dispatched after the passport was validated and the authenticator created the security token (and user).", correct: true }
      - { value: "Dispatched before the authenticator attempts to create a security token.", correct: false }
      - { value: "Dispatched when an authentication token is successfully stored in the session.", correct: false }
      - { value: "Dispatched when a new user is registered and an initial token is generated.", correct: false }
    help: |
      `AuthenticationTokenCreatedEvent` is dispatched after the passport was validated and the authenticator created the security token.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      Which of the following roles is automatically granted to a user who has successfully authenticated, but not necessarily via "remember-me"?
    answers:
      - { value: "IS_AUTHENTICATED_FULLY", correct: true }
      - { value: "IS_AUTHENTICATED_REMEMBERED", correct: false }
      - { value: "ROLE_AUTHENTICATED", correct: false }
      - { value: "ROLE_LOGGED_IN", correct: false }
    help: |
      `IS_AUTHENTICATED_FULLY` is granted when the user is fully authenticated, typically through a login form or token.
      https://symfony.com/doc/current/security.html#built-in-roles

  -
    question: >
      Which Symfony CLI command can be used to audit JavaScript dependencies for security vulnerabilities when using the AssetMapper component?
    answers:
      - { value: "`php bin/console importmap:audit`", correct: true }
      - { value: "`php bin/console asset:audit`", correct: false }
      - { value: "`npm audit`", correct: false }
      - { value: "`symfony check:js-security`", correct: false }
    help: |
      The `importmap:audit` command checks for security vulnerabilities in your application's AssetMapper dependencies.
      https://github.com/symfony/symfony-docs/blob/7.3/frontend/asset_mapper.rst#_snippet_60

  -
    question: >
      What is the purpose of the `CheckPassportEvent` in Symfony's security component?
    answers:
      - { value: "Dispatched after the authenticator created the security passport. Listeners of this event do the actual authentication checks.", correct: true }
      - { value: "Dispatched before the authenticator attempts to create a passport.", correct: false }
      - { value: "Dispatched when a passport is successfully validated.", correct: false }
      - { value: "Dispatched when a user's identity is verified against a user provider.", correct: false }
    help: |
      `CheckPassportEvent` is dispatched after the authenticator created the security passport, allowing for authentication checks.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      Which of the following is the correct way to configure a firewall named `main` with a custom user provider named `my_custom_provider`?
    answers:
      - { value: '''
        main:
            provider: my_custom_provider
        ''', correct: true }
      - { value: '''
        main:
            user_provider: my_custom_provider
        ''', correct: false }
      - { value: '''
        main:
            users: my_custom_provider
        ''', correct: false }
      - { value: '''
        main:
            auth_provider: my_custom_provider
        ''', correct: false }
    help: |
      The `provider` option in a firewall configuration links it to a defined user provider.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_13

  -
    question: >
      What is the purpose of the `AuthenticationSuccessEvent`?
    answers:
      - { value: "Dispatched when authentication is nearing success. This is the last event that can make an authentication fail by throwing an AuthenticationException.", correct: true }
      - { value: "Dispatched after the user is fully logged in and the response is sent.", correct: false }
      - { value: "Dispatched when the user's credentials have been successfully validated.", correct: false }
      - { value: "Dispatched when a new security token is created after successful authentication.", correct: false }
    help: |
      `AuthenticationSuccessEvent` is dispatched when authentication is nearing success and can still be failed.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_77

  -
    question: >
      Which of the following is a valid way to configure a password hasher for the `App\Entity\User` class to use the `auto` algorithm with default options?
    answers:
      - { value: '''
        password_hashers:
            App\\\\Entity\\\\User: \'auto\'
        ''', correct: true }
      - { value: '''
        password_hashers:
            App\\\\Entity\\\\User:
                algorithm: default
        ''', correct: false }
      - { value: '''
        password_hashers:
            App\\\\Entity\\\\User: { hasher: auto }
        ''', correct: false }
      - { value: '''
        password_hashers:
            App\\\\Entity\\\\User:
                type: auto
        ''', correct: false }
    help: |
      The `auto` algorithm can be specified directly as a string value for the user class.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_1

  -
    question: >
      Which of the following best describes the `user` variable in Symfony's security expression language?
    answers:
      - { value: "An instance of `UserInterface` that represents the current user or `null` if not authenticated.", correct: true }
      - { value: "The username of the currently authenticated user.", correct: false }
      - { value: "An array containing the user's roles.", correct: false }
      - { value: "The user entity object from the database.", correct: false }
    help: |
      The `user` variable provides access to the `UserInterface` object for the current user.
      https://github.com/symfony/symfony-docs/blob/7.3/security/expressions.rst#_snippet_1

  -
    question: >
      What is the purpose of the `login_throttling` option in a Symfony firewall configuration?
    answers:
      - { value: "To limit the number of login attempts within a given period to prevent brute-force attacks.", correct: true }
      - { value: "To control the rate at which users can register new accounts.", correct: false }
      - { value: "To throttle the number of concurrent active user sessions.", correct: false }
      - { value: "To restrict the frequency of password reset requests.", correct: false }
    help: |
      `login_throttling` is used to configure rate limiting for login attempts.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_41

  -
    question: >
      When configuring `access_control` rules, what is the effect of defining a rule with `path: ^/admin` and `roles: ROLE_ADMIN` followed by another rule with `path: ^/admin/users` and `roles: ROLE_SUPER_ADMIN`?
    answers:
      - { value: "Requests to `/admin/users` will require `ROLE_SUPER_ADMIN`, while other `/admin` paths will require `ROLE_ADMIN`.", correct: true }
      - { value: "Only `ROLE_SUPER_ADMIN` will be required for all `/admin` paths.", correct: false }
      - { value: "Both `ROLE_ADMIN` and `ROLE_SUPER_ADMIN` will be required for `/admin/users`.", correct: false }
      - { value: "The second rule will be ignored as the first one already matches `/admin/users`.", correct: false }
    help: |
      Access control rules are processed in order, and the first matching rule is applied. More specific rules should come before more general ones.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_62

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to handle logout requests via the route named `app_logout`?
    answers:
      - { value: '''
        logout:
            path: app_logout
        ''', correct: true }
      - { value: '''
        logout:
            route: app_logout
        ''', correct: false }
      - { value: '''
        logout:
            url: app_logout
        ''', correct: false }
      - { value: '''
        logout:
            handler: app_logout
        ''', correct: false }
    help: |
      The `path` option under `logout` specifies the URL or route that triggers the logout process.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_53

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is the correct way to configure a password hasher for all `PasswordAuthenticatedUserInterface` instances with a `cost` of 4 and `timeCost` of 2 for testing environments?
    answers:
      - { value: '''
        if (\'test\' === $container->env()) {
            $security->passwordHasher(PasswordAuthenticatedUserInterface::class)
                ->algorithm(\'auto\')
                ->cost(4)
                ->timeCost(2)
            ;
        }
        ''', correct: true }
      - { value: '''
        if (\'test\' === $container->env()) {
            $security->passwordHasher(PasswordAuthenticatedUserInterface::class)
                ->cost(4)
                ->time_cost(2)
            ;
        }
        ''', correct: false }
      - { value: '''
        if (\'test\' === $container->env()) {
            $security->passwordHasher(PasswordAuthenticatedUserInterface::class)
                ->options([\'cost\' => 4, \'time_cost\' => 2])
            ;
        }
        ''', correct: false }
      - { value: '''
        if (\'test\' === $container->env()) {
            $security->passwordHasher(PasswordAuthenticatedUserInterface::class)
                ->setCost(4)
                ->setTimeCost(2)
            ;
        }
        ''', correct: false }
    help: |
      Password hasher options like `cost` and `timeCost` can be configured programmatically based on the environment.
      https://github.com/symfony/symfony-docs/blob/7.3/security/passwords.rst#_snippet_4

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is the correct way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a custom server parameter `AUTH_USER`?
    answers:
      - { value: '''
        remote_user:
            provider: your_user_provider
            user: AUTH_USER
        ''', correct: true }
      - { value: '''
        remote_user:
            provider: your_user_provider
            server_param: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            username_key: AUTH_USER
        ''', correct: false }
      - { value: '''
        remote_user:
            provider: your_user_provider
            header: AUTH_USER
        ''', correct: false }
    help: |
      The `remote_user` authenticator can specify the server parameter holding the user identifier using the `user` option.
      https://github.com/symfony/symfony-docs/blob/7.3/reference/configuration/security.rst#_snippet_34

  -
    question: >
      What is the purpose of the `AuthenticationFailureHandlerInterface`?
    answers:
      - { value: "To customize behavior after a failed authentication attempt.", correct: true }
      - { value: "To log authentication errors.", correct: false }
      - { value: "To redirect the user to the login page after failure.", correct: false }
      - { value: "To display an error message to the user.", correct: false }
    help: |
      `AuthenticationFailureHandlerInterface` is used for customizing failed authentication behavior.
      https://github.com/symfony/symfony-docs/blob/7.3/security.rst#_snippet_47

  -
    question: >
      Which of the following is a valid way to configure a firewall named `main` to use a remote user authenticator with a