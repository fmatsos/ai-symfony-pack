category: HTTP

questions:
  -
    question: >
      What is the primary role of the `Symfony\Component\HttpFoundation\Request` object in a Symfony application?
    answers:
      - { value: "To encapsulate all incoming HTTP request information.", correct: true }
      - { value: "To send HTTP requests to external APIs.", correct: false }
      - { value: "To manage database connections.", correct: false }
      - { value: "To render Twig templates.", correct: false }
    help: |
      The `Request` object encapsulates all information about the current HTTP request, including headers, query parameters, POST data, and uploaded files.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#the-request

  -
    question: |
      Given the following code, how would you retrieve the value of the `id` query parameter?

      ```php
      use Symfony\Component\HttpFoundation\Request;

      $request = Request::createFromGlobals();
      // ...
      ```
    answers:
      - { value: "`$request->query->get('id');`", correct: true }
      - { value: "`$request->get('id');`", correct: false }
      - { value: "`$request->attributes->get('id');`", correct: false }
      - { value: "`$_GET['id'];`", correct: false }
    help: |
      The `query` property of the `Request` object provides access to GET parameters.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#accessing-request-data

  -
    question: >
      Which of the following HTTP status codes indicates a successful request where a new resource has been created?
    answers:
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: true }
      - { value: "204 No Content", correct: false }
      - { value: "301 Moved Permanently", correct: false }
    help: |
      The 201 Created status code indicates that the request has been fulfilled and resulted in one or more new resources being created.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201

  -
    question: |
      You need to send an HTTP DELETE request to remove a resource. Which of the following is the correct HTTP method to use?
    answers:
      - { value: "DELETE", correct: true }
      - { value: "REMOVE", correct: false }
      - { value: "UNLINK", correct: false }
      - { value: "PURGE", correct: false }
    help: |
      The DELETE method is used to delete a specified resource.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#http-methods

  -
    question: >
      What is the purpose of the `Symfony\Component\HttpFoundation\Response` object?
    answers:
      - { value: "To represent the outgoing HTTP response to the client.", correct: true }
      - { value: "To handle incoming HTTP requests.", correct: false }
      - { value: "To manage application configuration.", correct: false }
      - { value: "To process form submissions.", correct: false }
    help: |
      The `Response` object is a PHP representation of the HTTP response that the application will send back to the client.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#the-response

  -
    question: |
      How can you set the content and the HTTP status code for a `Symfony\Component\HttpFoundation\Response` object?

      ```php
      use Symfony\Component\HttpFoundation\Response;

      $response = new Response();
      // ...
      ```
    answers:
      - { value: "`$response->setContent('Hello'); $response->setStatusCode(Response::HTTP_OK);`", correct: true }
      - { value: "`$response->body = 'Hello'; $response->status = 200;`", correct: false }
      - { value: "`$response->setBody('Hello', 200);`", correct: false }
      - { value: "`$response->withContent('Hello')->withStatus(200);`", correct: false }
    help: |
      The `setContent()` and `setStatusCode()` methods are used to configure the response body and status code.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#creating-a-response

  -
    question: >
      Which HTTP status code indicates that the requested resource has been permanently moved to a new URL?
    answers:
      - { value: "301 Moved Permanently", correct: true }
      - { value: "302 Found", correct: false }
      - { value: "304 Not Modified", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      The 301 Moved Permanently status code indicates that the resource has been assigned a new permanent URI and any future references to this resource should use one of the returned URIs.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301

  -
    question: >
      What is the purpose of the `Cache-Control: public` directive in an HTTP response?
    answers:
      - { value: "It indicates that the response can be cached by any cache, including shared caches.", correct: true }
      - { value: "It restricts caching to private caches only.", correct: false }
      - { value: "It specifies that the content is publicly accessible, but not cacheable.", correct: false }
      - { value: "It forces the client to revalidate the cache every time.", correct: false }
    help: |
      The `public` directive indicates that the response may be cached by any cache, even if it would normally be non-cacheable or cacheable only by a private cache.
      https://symfony.com/doc/current/http_cache/expiration.html#public-and-private-responses

  -
    question: |
      How can you retrieve the list of languages accepted by the client, ordered by descending quality, using the Symfony `Request` object?
    answers:
      - { value: "`$request->getLanguages();`", correct: true }
      - { value: "`$request->getPreferredLanguage();`", correct: false }
      - { value: "`$request->headers->get('Accept-Language');`", correct: false }
      - { value: "`$request->getLocale();`", correct: false }
    help: |
      The `getLanguages()` method returns an array of languages the client accepts, ordered by descending quality.
      https://symfony.com/doc/current/components/http_foundation.html#accessing-accept-headers

  -
    question: >
      Which Symfony component provides a flexible API for making HTTP requests and is recommended for interacting with external APIs?
    answers:
      - { value: "HttpClient", correct: true }
      - { value: "BrowserKit", correct: false }
      - { value: "DomCrawler", correct: false }
      - { value: "WebLink", correct: false }
    help: |
      The Symfony HttpClient component provides a powerful and flexible way to make HTTP requests.
      https://symfony.com/doc/current/http_client.html

  -
    question: |
      Given an autowired `HttpClientInterface $client`, how do you make a basic GET request to `https://api.example.com/data`?
    answers:
      - { value: "`$response = $client->request('GET', 'https://api.example.com/data');`", correct: true }
      - { value: "`$response = $client->get('https://api.example.com/data');`", correct: false }
      - { value: "`$response = $client->send('GET', 'https://api.example.com/data');`", correct: false }
      - { value: "`$response = $client->fetch('https://api.example.com/data', 'GET');`", correct: false }
    help: |
      The `request()` method is the primary way to send HTTP requests with the Symfony HTTP Client.
      https://symfony.com/doc/current/http_client.html#making-requests

  -
    question: |
      After receiving an `ResponseInterface` object from an HTTP client request, how do you retrieve the full response body as a string?
    answers:
      - { value: "`$response->getContent();`", correct: true }
      - { value: "`$response->getBody();`", correct: false }
      - { value: "`$response->toString();`", correct: false }
      - { value: "`$response->read();`", correct: false }
    help: |
      The `getContent()` method returns the response body as a string, blocking execution until the full content is received.
      https://symfony.com/doc/current/http_client.html#getting-the-response-content

  -
    question: >
      Which HTTP status code indicates that the server successfully processed the request, but is not returning any content?
    answers:
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: false }
      - { value: "204 No Content", correct: true }
      - { value: "400 Bad Request", correct: false }
    help: |
      The 204 No Content status code indicates that the server successfully processed the request and is not returning any content.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204

  -
    question: >
      What is the purpose of the `Vary` HTTP header in a response?
    answers:
      - { value: "It indicates that the cached response might differ based on the values of specified request headers.", correct: true }
      - { value: "It specifies the encoding used for the response body.", correct: false }
      - { value: "It defines the maximum number of times a response can be redirected.", correct: false }
      - { value: "It suggests alternative resources that can be used instead of the requested one.", correct: false }
    help: |
      The `Vary` header indicates that the response content is subject to change based on the values of one or more request headers.
      https://symfony.com/doc/current/http_cache/cache_vary.html

  -
    question: |
      How can you configure a default `User-Agent` header for all requests made by the Symfony HTTP Client in `config/packages/framework.yaml`?
    answers:
      - { value: |
          ```yaml
          framework:
              http_client:
                  default_options:
                      headers:
                          'User-Agent': 'My App'
          ```, correct: true }
      - { value: |
          ```yaml
          framework:
              http_client:
                  global_headers:
                      'User-Agent': 'My App'
          ```, correct: false }
      - { value: |
          ```yaml
          framework:
              http_client:
                  options:
                      default_headers:
                          'User-Agent': 'My App'
          ```, correct: false }
    help: |
      Default headers are configured under `http_client.default_options.headers` in the framework configuration.
      https://symfony.com/doc/current/http_client.html#default-request-options

  -
    question: >
      Which HTTP method is considered "idempotent" and "safe"?
    answers:
      - { value: "GET", correct: true }
      - { value: "POST", correct: false }
      - { value: "PUT", correct: false }
      - { value: "DELETE", correct: false }
    help: |
      GET is a safe method (it doesn't change the server's state) and idempotent (multiple identical requests have the same effect as a single one).
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET

  -
    question: |
      You want to send a JSON payload in the request body using Symfony's HTTP Client. Which option should you use?
    answers:
      - { value: "`'json' => ['key' => 'value']`", correct: true }
      - { value: "`'body' => json_encode(['key' => 'value'])`", correct: true }
      - { value: "`'payload' => ['key' => 'value']`", correct: false }
      - { value: "`'data' => ['key' => 'value']`", correct: false }
    help: |
      The `json` option automatically encodes the array as JSON and sets the `Content-Type` header to `application/json`. Alternatively, you can manually encode and set the `body` option.
      https://symfony.com/doc/current/http_client.html#request-body

  -
    question: >
      What does an HTTP status code of `401 Unauthorized` typically indicate?
    answers:
      - { value: "The client needs to authenticate to get the requested response.", correct: true }
      - { value: "The client does not have access rights to the content.", correct: false }
      - { value: "The server did not find the requested resource.", correct: false }
      - { value: "The request could not be understood by the server.", correct: false }
    help: |
      The 401 Unauthorized status code means that the client must authenticate itself to get the requested response.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401

  -
    question: |
      How can you programmatically simulate an HTTP request for testing purposes using the `Symfony\Component\HttpFoundation\Request` class?
    answers:
      - { value: "`Request::create('/path', 'GET', ['param' => 'value']);`", correct: true }
      - { value: "`Request::fromUrl('/path', 'GET');`", correct: false }
      - { value: "`new Request('/path', 'GET');`", correct: false }
      - { value: "`Request::simulate('/path', 'GET');`", correct: false }
    help: |
      The `Request::create()` static method allows you to create a `Request` object programmatically, simulating an incoming request.
      https://symfony.com/doc/current/components/http_foundation.html#simulating-a-request

  -
    question: >
      Which of the following methods on `Symfony\Component\HttpFoundation\Response` would you use to set the `Expires` HTTP header?
    answers:
      - { value: "`setExpires(\DateTimeInterface $expires);`", correct: true }
      - { value: "`setExpirationDate(\DateTimeInterface $date);`", correct: false }
      - { value: "`headers->set('Expires', $dateString);`", correct: false }
      - { value: "`setCacheLifetime(int $seconds);`", correct: false }
    help: |
      The `setExpires()` method sets the `Expires` HTTP header.
      https://symfony.com/doc/current/components/http_foundation.html#http-cache-headers

  -
    question: >
      What is the main advantage of using `HttpClientInterface::stream()` for large HTTP responses?
    answers:
      - { value: "It allows processing the response content in chunks, preventing memory exhaustion.", correct: true }
      - { value: "It automatically decompresses the response body.", correct: false }
      - { value: "It caches the entire response in memory for faster access.", correct: false }
      - { value: "It guarantees that the entire response is received before any processing begins.", correct: false }
    help: |
      The `stream()` method allows you to process large responses chunk by chunk, which is crucial for preventing memory exhaustion when dealing with large files.
      https://symfony.com/doc/current/http_client.html#streaming-responses

  -
    question: >
      Which HTTP status code indicates that the server understands the request but refuses to authorize it, even with authentication?
    answers:
      - { value: "403 Forbidden", correct: true }
      - { value: "401 Unauthorized", correct: false }
      - { value: "404 Not Found", correct: false }
      - { value: "400 Bad Request", correct: false }
    help: |
      The 403 Forbidden status code means the client does not have access rights to the content, i.e., it is unauthorized, so the server is refusing to give the requested resource.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403

  -
    question: |
      How do you configure HTTP Basic authentication for a specific HTTP client instance in a standalone PHP script?
    answers:
      - { value: "`$client = HttpClient::create(['auth_basic' => ['username', 'password']]);`", correct: true }
      - { value: "`$client = HttpClient::create(['basic_auth' => 'username:password']);`", correct: false }
      - { value: "`$client = HttpClient::create()->setAuthBasic('username', 'password');`", correct: false }
    help: |
      HTTP Basic authentication can be configured using the `auth_basic` option when creating the client.
      https://symfony.com/doc/current/http_client.html#authentication

  -
    question: >
      What is the purpose of `Symfony\Component\HttpClient\MockHttpClient`?
    answers:
      - { value: "To provide a test double for `HttpClientInterface` allowing predefined or dynamic responses.", correct: true }
      - { value: "To send HTTP requests to a real mock server.", correct: false }
      - { value: "To automatically generate HTTP requests based on a schema.", correct: false }
      - { value: "To monitor network traffic for HTTP requests.", correct: false }
    help: |
      `MockHttpClient` is an implementation of `HttpClientInterface` for testing purposes, allowing you to define responses without making actual HTTP calls.
      https://symfony.com/doc/current/http_client.html#testing

  -
    question: |
      When using `MockHttpClient`, how can you inspect the HTTP method that a simulated request would have used?
    answers:
      - { value: "`$mockResponse->getRequestMethod();`", correct: true }
      - { value: "`$mockResponse->getMethod();`", correct: false }
      - { value: "`$mockResponse->getSimulatedMethod();`", correct: false }
      - { value: "`$mockResponse->info('method');`", correct: false }
    help: |
      The `MockResponse` class provides helper methods like `getRequestMethod()` to inspect the simulated request details.
      https://symfony.com/doc/current/http_client.html#_mockresponse_request_inspection_methods

  -
    question: >
      Which HTTP status code indicates that the server cannot find the requested resource?
    answers:
      - { value: "404 Not Found", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "500 Internal Server Error", correct: false }
      - { value: "204 No Content", correct: false }
    help: |
      The 404 Not Found status code means the server cannot find the requested resource.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404

  -
    question: |
      How do you set a cookie named `PHPSESSID` with a specific value on a `Symfony\Component\HttpFoundation\Response` object?
    answers:
      - { value: "`$response->headers->setCookie(new Cookie('PHPSESSID', 'value'));`", correct: true }
      - { value: "`$response->setCookie('PHPSESSID', 'value');`", correct: false }
      - { value: "`$response->cookies->add('PHPSESSID', 'value');`", correct: false }
      - { value: "`$response->addHeader('Set-Cookie', 'PHPSESSID=value');`", correct: false }
    help: |
      Cookies are managed via the `ResponseHeaderBag` accessible through `$response->headers`. You use `setCookie()` with a `Cookie` object.
      https://symfony.com/doc/current/components/http_foundation.html#managing-cookies

  -
    question: >
      What is the purpose of the `#[Cache]` attribute in a Symfony controller method?
    answers:
      - { value: "To configure HTTP caching directives directly on the controller action.", correct: true }
      - { value: "To mark the method as cacheable by the Symfony internal cache.", correct: false }
      - { value: "To define a cache key for the method's return value.", correct: false }
      - { value: "To enable opcode caching for the controller.", correct: false }
    help: |
      The `#[Cache]` attribute allows you to configure HTTP caching headers like `Cache-Control` directly on your controller methods.
      https://symfony.com/doc/current/http_cache/expiration.html#configuring-cache-with-attributes

  -
    question: |
      Which of the following options can be used to define the request body when making an HTTP client request in Symfony?
    answers:
      - { value: "A string of raw data.", correct: true }
      - { value: "An associative array of form parameters.", correct: true }
      - { value: "A PHP `resource` (e.g., a file handle).", correct: true }
      - { value: "A `Closure` that generates the data.", correct: true }
      - { value: "An object implementing `\JsonSerializable`.", correct: false }
    help: |
      The `body` option supports various types for defining the request body, including strings, arrays, closures, and resources.
      https://symfony.com/doc/current/http_client.html#request-body

  -
    question: >
      What does an HTTP status code of `304 Not Modified` indicate?
    answers:
      - { value: "The resource has not been modified since the version specified by the client's conditional headers.", correct: true }
      - { value: "The request was successful, but the server made no changes.", correct: false }
      - { value: "The client's request was invalid and could not be processed.", correct: false }
      - { value: "The server is temporarily unavailable.", correct: false }
    help: |
      The 304 Not Modified status code indicates that the resource has not been modified since the version specified by the request headers `If-Modified-Since` or `If-None-Match`.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/304

  -
    question: |
      How can you force the Symfony HTTP Client to use HTTP/2 for all requests in `config/packages/framework.php`?
    answers:
      - { value: |
          ```php
          use Symfony\Config\FrameworkConfig;

          return static function (FrameworkConfig $framework): void {
              $framework->httpClient()
                  ->defaultOptions()
                      ->httpVersion('2.0')
              ;
          };
          ```, correct: true }
      - { value: |
          ```php
          use Symfony\Config\FrameworkConfig;

          return static function (FrameworkConfig $framework): void {
              $framework->httpClient()
                  ->defaultOptions()
                      ->protocol('HTTP/2')
              ;
          };
          ```, correct: false }
      - { value: |
          ```php
          use Symfony\Config\FrameworkConfig;

          return static function (FrameworkConfig $framework): void {
              $framework->httpClient()
                  ->forceHttp2(true)
              ;
          };
          ```, correct: false }
    help: |
      The `httpVersion()` method under `defaultOptions()` is used to specify the HTTP protocol version.
      https://symfony.com/doc/current/http_client.html#http-2-support

  -
    question: >
      Which method on `Symfony\Component\HttpFoundation\Response` allows you to set multiple cache-related headers in a single call?
    answers:
      - { value: "`setCache(array $options);`", correct: true }
      - { value: "`configureCache(array $directives);`", correct: false }
      - { value: "`addCacheHeaders(array $headers);`", correct: false }
      - { value: "`cache(array $config);`", correct: false }
    help: |
      The `setCache()` method provides a convenient way to set various cache-related headers at once.
      https://symfony.com/doc/current/components/http_foundation.html#http-cache-headers

  -
    question: >
      What is the primary purpose of `Symfony\Component\HttpClient\UriTemplateHttpClient`?
    answers:
      - { value: "To allow defining HTTP request URLs using URI templates with variables.", correct: true }
      - { value: "To generate unique URIs for each request.", correct: false }
      - { value: "To validate URIs against a predefined schema.", correct: false }
      - { value: "To handle URI encoding and decoding automatically.", correct: false }
    help: |
      `UriTemplateHttpClient` is a decorator that allows you to define request URLs using URI templates, which are expanded with provided variables.
      https://symfony.com/doc/current/http_client.html#uri-templates

  -
    question: |
      How do you retrieve the raw content of the HTTP request body (e.g., for a JSON or XML payload) using the `Symfony\Component\HttpFoundation\Request` object?
    answers:
      - { value: "`$request->getContent();`", correct: true }
      - { value: "`$request->getRawBody();`", correct: false }
      - { value: "`$request->body->getContents();`", correct: false }
      - { value: "`$request->getPayload()->all();`", correct: false }
    help: |
      The `getContent()` method returns the raw body of the request.
      https://symfony.com/doc/current/components/http_foundation.html#accessing-the-request-body

  -
    question: >
      Which HTTP status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request?
    answers:
      - { value: "500 Internal Server Error", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "503 Service Unavailable", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      The 500 Internal Server Error status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500

  -
    question: |
      When configuring a Symfony HTTP Client, which option is used to add query string parameters that will be automatically URL-encoded?
    answers:
      - { value: "`'query' => ['param1' => 'value1', 'param2' => 'value2']`", correct: true }
      - { value: "`'params' => ['param1' => 'value1']`", correct: false }
      - { value: "`'queryString' => 'param1=value1'`", correct: false }
      - { value: "`'url_params' => ['param1' => 'value1']`", correct: false }
    help: |
      The `query` option allows you to define query string parameters as an associative array, which are then automatically URL-encoded.
      https://symfony.com/doc/current/http_client.html#query-parameters

  -
    question: >
      What happens if you call `$response->getContent(true)` on a `ResponseInterface` object from Symfony's HTTP Client and the response has an HTTP status code of `404 Not Found`?
    answers:
      - { value: "An `HttpException` (or similar) is thrown.", correct: true }
      - { value: "An empty string is returned.", correct: false }
      - { value: "The HTML content of the 404 page is returned.", correct: false }
      - { value: "A warning is logged, but content is still returned.", correct: false }
    help: |
      By default, `getContent(true)` (or `getHeaders(true)`, `toArray(true)`) will throw an exception if the response status code is a 4xx or 5xx error.
      https://symfony.com/doc/current/http_client.html#handling-http-errors

  -
    question: |
      How can you cancel an ongoing HTTP request using the Symfony HTTP Client?
    answers:
      - { value: "By calling `$response->cancel();` on the `ResponseInterface` object.", correct: true }
      - { value: "By throwing an exception from an `on_progress` callback.", correct: true }
      - { value: "By setting a very short timeout on the request.", correct: false }
      - { value: "By destroying the `HttpClientInterface` instance.", correct: false }
    help: |
      Requests can be cancelled either by explicitly calling `cancel()` on the response or by throwing an exception from an `on_progress` callback.
      https://symfony.com/doc/current/http_client.html#cancelling-requests

  -
    question: >
      Which `Symfony\Component\HttpClient` class is used to apply different request options based on URL patterns?
    answers:
      - { value: "ScopingHttpClient", correct: true }
      - { value: "PatternHttpClient", correct: false }
      - { value: "ConditionalHttpClient", correct: false }
      - { value: "RouteHttpClient", correct: false }
    help: |
      `ScopingHttpClient` allows you to define different options for requests matching specific URL regular expressions.
      https://symfony.com/doc/current/http_client.html#scoping-http-clients

  -
    question: |
      Which of the following `HeaderUtils` methods is used to combine an array of header parts (e.g., `[['foo', 'abc'], ['bar']]`) into an associative array (e.g., `['foo' => 'abc', 'bar' => true]`)?
    answers:
      - { value: "`HeaderUtils::combine();`", correct: true }
      - { value: "`HeaderUtils::parse();`", correct: false }
      - { value: "`HeaderUtils::fromParts();`", correct: false }
      - { value: "`HeaderUtils::merge();`", correct: false }
    help: |
      The `HeaderUtils::combine()` method combines an array of header parts into an associative array.
      https://symfony.com/doc/current/components/http_foundation.html#headerutils-class

  -
    question: >
      What is the purpose of `Symfony\Component\HttpFoundation\StreamedResponse`?
    answers:
      - { value: "To send HTTP responses incrementally, allowing for large content or real-time updates.", correct: true }
      - { value: "To redirect the client to another URL.", correct: false }
      - { value: "To serve static files directly from the filesystem.", correct: false }
      - { value: "To compress the response content before sending.", correct: false }
    help: |
      `StreamedResponse` allows you to stream the HTTP response back to the client, which is useful for large files or server-sent events.
      https://symfony.com/doc/current/components/http_foundation.html#streaming-a-response

  -
    question: >
      When using `HttpClient::create()`, which underlying HTTP client transport does Symfony prioritize if the cURL PHP extension is enabled?
    answers:
      - { value: "CurlHttpClient", correct: true }
      - { value: "NativeHttpClient", correct: false }
      - { value: "AmpHttpClient", correct: false }
      - { value: "SocketHttpClient", correct: false }
    help: |
      `HttpClient::create()` prioritizes `CurlHttpClient` if the cURL extension is available.
      https://symfony.com/doc/current/http_client.html#choosing-the-http-client-transport

  -
    question: |
      How do you set the `Last-Modified` HTTP header on a Symfony `Response` object?
    answers:
      - { value: "`$response->setLastModified(\DateTimeImmutable::createFromFormat('Y-m-d', '2023-01-01'));`", correct: true }
      - { value: "`$response->headers->set('Last-Modified', '...');`", correct: false }
      - { value: "`$response->lastModified('...');`", correct: false }
      - { value: "`$response->setModifiedDate('...');`", correct: false }
    help: |
      The `setLastModified()` method is used to set the `Last-Modified` header, accepting a `DateTimeInterface` object.
      https://symfony.com/doc/current/components/http_foundation.html#http-cache-headers

  -
    question: >
      Which HTTP status code indicates that the server is currently unable to handle the request due to a temporary overload or maintenance?
    answers:
      - { value: "503 Service Unavailable", correct: true }
      - { value: "500 Internal Server Error", correct: false }
      - { value: "408 Request Timeout", correct: false }
      - { value: "429 Too Many Requests", correct: false }
    help: |
      The 503 Service Unavailable status code indicates that the server is not ready to handle the request.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503

  -
    question: |
      You want to override a globally configured HTTP client header for a specific request. How would you do this?
    answers:
      - { value: "By passing the header in the `headers` option of the `request()` method.", correct: true }
      - { value: "By using `HttpClientInterface::withOptions()` for that specific request.", correct: false }
      - { value: "By clearing all default headers before the request.", correct: false }
      - { value: "It is not possible to override global headers per request.", correct: false }
    help: |
      Headers provided in the `headers` option of the `request()` method override any default headers configured globally for the client.
      https://symfony.com/doc/current/http_client.html#overriding-default-request-options

  -
    question: >
      What is the purpose of `Response::isNotModified($request)`?
    answers:
      - { value: "To check if the client's conditional request headers (If-None-Match, If-Modified-Since) match the response's validators.", correct: true }
      - { value: "To mark the response as not needing revalidation by the client.", correct: false }
      - { value: "To remove the response body if it hasn't changed.", correct: false }
      - { value: "To determine if the server-side cache is still valid.", correct: false }
    help: |
      `isNotModified()` checks if the response validators (ETag, Last-Modified) match the conditional values in the client's request, and if so, sets the status to 304.
      https://symfony.com/doc/current/components/http_foundation.html#checking-if-a-response-is-not-modified

  -
    question: |
      Which `Symfony\Component\HttpFoundation\Request` method would you use to get a list of accepted content types, ordered by descending quality?
    answers:
      - { value: "`getAcceptableContentTypes();`", correct: true }
      - { value: "`getPreferredFormat();`", correct: false }
      - { value: "`getContentType();`", correct: false }
      - { value: "`getAccepts();`", correct: false }
    help: |
      The `getAcceptableContentTypes()` method parses the `Accept` header and returns an ordered list of acceptable content types.
      https://symfony.com/doc/current/components/http_foundation.html#accessing-accept-headers

  -
    question: >
      What does `Response::expire()` do to an HTTP response?
    answers:
      - { value: "It marks the response as immediately stale, forcing caches to revalidate it.", correct: true }
      - { value: "It deletes the response from any proxy caches.", correct: false }
      - { value: "It sets the `Expires` header to a date in the past.", correct: false }
      - { value: "It removes all caching headers from the response.", correct: false }
    help: |
      The `expire()` method marks the response as immediately stale, telling caches to revalidate the content with the origin server before serving it again.
      https://symfony.com/doc/current/http_cache.html#marking-a-response-as-stale

  -
    question: |
      How do you configure HTTP Bearer authentication for a scoped client named `my_api` in `config/packages/framework.yaml`?
    answers:
      - { value: |
          ```yaml
          framework:
              http_client:
                  scoped_clients:
                      my_api:
                          auth_bearer: 'my-secret-token'
          ```, correct: true }
      - { value: |
          ```yaml
          framework:
              http_client:
                  scoped_clients:
                      my_api:
                          token: 'my-secret-token'
          ```, correct: false }
      - { value: |
          ```yaml
          framework:
              http_client:
                  scoped_clients:
                      my_api:
                          bearer: 'my-secret-token'
          ```, correct: false }
    help: |
      Bearer token authentication is configured using the `auth_bearer` option.
      https://symfony.com/doc/current/http_client.html#authentication

  -
    question: >
      Which HTTP status code indicates a client-side error where the request could not be understood by the server?
    answers:
      - { value: "400 Bad Request", correct: true }
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      The 400 Bad Request status code means the server cannot or will not process the request due to something that is perceived to be a client error.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400

  -
    question: |
      What is the correct way to inject the `HttpClientInterface` into a service in Symfony for making external HTTP requests?
    answers:
      - { value: |
          ```php
          use Symfony\Contracts\HttpClient\HttpClientInterface;

          class MyService
          {
              public function __construct(
                  private HttpClientInterface $client,
              ) {}
          }
          ```, correct: true }
      - { value: |
          ```php
          use Symfony\Component\HttpClient\HttpClient;

          class MyService
          {
              public function __construct()
              {
                  $this->client = HttpClient::create();
              }
          }
          ```, correct: false }
      - { value: |
          ```php
          use Psr\Http\Client\ClientInterface;

          class MyService
          {
              public function __construct(
                  private ClientInterface $client,
              ) {}
          }
          ```, correct: false }
    help: |
      You should type-hint against `HttpClientInterface` from `Symfony\Contracts\HttpClient` for autowiring.
      https://symfony.com/doc/current/http_client.html#usage

  -
    question: >
      Which of the following HTTP methods is typically used to update an existing resource completely, replacing the entire resource with the new payload?
    answers:
      - { value: "PUT", correct: true }
      - { value: "PATCH", correct: false }
      - { value: "POST", correct: false }
      - { value: "UPDATE", correct: false }
    help: |
      The PUT method is used to update an existing resource or create a new one if it does not exist, replacing the entire resource.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT

  -
    question: |
      How can you retrieve a POST parameter named `username` from a Symfony `Request` object, providing a default value of `'guest'` if it's not present?
    answers:
      - { value: "`$request->getPayload()->get('username', 'guest');`", correct: true }
      - { value: "`$request->request->get('username', 'guest');`", correct: true }
      - { value: "`$request->post->get('username', 'guest');`", correct: false }
      - { value: "`$request->get('username', 'guest');`", correct: false }
    help: |
      POST parameters can be accessed via `$request->getPayload()` (recommended for Symfony 6.2+) or `$request->request`.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#accessing-request-data

  -
    question: >
      Which HTTP status code indicates that the request method is known by the server but has been disabled or is not supported for the target resource?
    answers:
      - { value: "405 Method Not Allowed", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "501 Not Implemented", correct: false }
    help: |
      The 405 Method Not Allowed status code indicates that the request method is known by the server but has been disabled or is not supported for the target resource.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405

  -
    question: |
      You are testing a service that makes HTTP requests. How would you create a `MockHttpClient` that returns a specific `MockResponse` for any request?
    answers:
      - { value: "`$client = new MockHttpClient(new MockResponse('body', ['http_code' => 200]));`", correct: true }
      - { value: "`$client = MockHttpClient::createWithResponse(new MockResponse('body', ['http_code' => 200]));`", correct: false }
      - { value: "`$client = new MockHttpClient([new MockResponse('body', ['http_code' => 200])]);`", correct: true }
      - { value: "`$client = MockHttpClient::fromResponse(new MockResponse('body', ['http_code' => 200]));`", correct: false }
    help: |
      `MockHttpClient` can be constructed with a single `MockResponse` object or an array of `MockResponse` objects.
      https://symfony.com/doc/current/http_client.html#testing

  -
    question: >
      What is the primary role of the `HttpKernel` component in a Symfony application's request-response lifecycle?
    answers:
      - { value: "To convert an incoming `Request` into an outgoing `Response` by dispatching events and calling a controller.", correct: true }
      - { value: "To handle routing and URL matching.", correct: false }
      - { value: "To manage the application's dependency injection container.", correct: false }
      - { value: "To render views and templates.", correct: false }
    help: |
      The `HttpKernel` is the core component that processes a `Request` and generates a `Response`, involving event dispatching and controller execution.
      https://symfony.com/doc/current/components/http_kernel.html#basic-usage

  -
    question: |
      After the `HttpKernel` has handled a request and returned a `Response`, what is the typical next step to send the response to the client and then trigger the `kernel.terminate` event?
    answers:
      - { value: "`$response->send(); $kernel->terminate($request, $response);`", correct: true }
      - { value: "`$kernel->sendResponse($response);`", correct: false }
      - { value: "`$response->output(); $kernel->shutdown();`", correct: false }
      - { value: "`$kernel->handle($request)->send();`", correct: false }
    help: |
      The `Response::send()` method sends the headers and content, and `HttpKernel::terminate()` triggers the `kernel.terminate` event.
      https://symfony.com/doc/current/components/http_kernel.html#basic-usage

  -
    question: >
      Which HTTP status code indicates that the server successfully processed the request, but the client should reset the document view?
    answers:
      - { value: "205 Reset Content", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "204 No Content", correct: false }
      - { value: "303 See Other", correct: false }
    help: |
      The 205 Reset Content status code indicates that the server successfully processed the request, but is not returning any content. It requires the client to reset the document view.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/205

  -
    question: |
      How do you retrieve an uploaded file named `document` from a `Symfony\Component\HttpFoundation\Request` object?
    answers:
      - { value: "`$request->files->get('document');`", correct: true }
      - { value: "`$request->getUploadedFile('document');`", correct: false }
      - { value: "`$request->file('document');`", correct: false }
      - { value: "`$request->getFiles()['document'];`", correct: false }
    help: |
      Uploaded files are accessed via the `files` property of the `Request` object.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#accessing-request-data

  -
    question: >
      What is the purpose of `Symfony\Component\HttpClient\Response\MockResponse::fromFile(string $filePath)`?
    answers:
      - { value: "To create a mock HTTP response by reading its body and headers from a file.", correct: true }
      - { value: "To send a file as the body of a mock HTTP request.", correct: false }
      - { value: "To save a mock response to a file for later use.", correct: false }
      - { value: "To simulate a file upload in a test.", correct: false }
    help: |
      The static method `fromFile()` creates a `MockResponse` directly from a file, useful for testing with predefined response data.
      https://symfony.com/doc/current/http_client.html#_mockresponse_request_inspection_methods

  -
    question: >
      Which HTTP status code indicates that the request has been accepted for processing, but the processing has not been completed?
    answers:
      - { value: "202 Accepted", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: false }
      - { value: "203 Non-Authoritative Information", correct: false }
    help: |
      The 202 Accepted status code indicates that the request has been accepted for processing, but the processing has not been completed.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/202

  -
    question: |
      How can you add HTTP Basic authentication credentials to a specific HTTP client request, overriding any global settings?
    answers:
      - { value: "`'auth_basic' => ['the-username', 'the-password']`", correct: true }
      - { value: "`'basic_auth' => 'the-username:the-password'`", correct: false }
      - { value: "`'credentials' => ['username' => 'the-username', 'password' => 'the-password']`", correct: false }
      - { value: "`'authentication' => ['type' => 'basic', 'user' => 'the-username', 'pass' => 'the-password']`", correct: false }
    help: |
      The `auth_basic` option can be used per-request to set or override HTTP Basic authentication.
      https://symfony.com/doc/current/http_client.html#authentication

  -
    question: >
      What is the purpose of the `Connection: close` header in an HTTP response?
    answers:
      - { value: "It indicates that the server will close the TCP connection after completing the response.", correct: true }
      - { value: "It tells the client to close its connection to the server.", correct: false }
      - { value: "It prevents the response from being cached.", correct: false }
      - { value: "It signals an error and requests the client to retry.", correct: false }
    help: |
      The `Connection: close` header indicates that the server will close the TCP connection after the current response has been completed.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Connection

  -
    question: |
      Which `Symfony\Component\HttpFoundation\Request` method allows you to get a list of accepted character sets, ordered by descending quality?
    answers:
      - { value: "`getCharsets();`", correct: true }
      - { value: "`getAcceptedCharsets();`", correct: false }
      - { value: "`getEncoding();`", correct: false }
      - { value: "`getCharacterSets();`", correct: false }
    help: |
      The `getCharsets()` method parses the `Accept-Charset` header and returns an ordered list of accepted character sets.
      https://symfony.com/doc/current/components/http_foundation.html#accessing-accept-headers

  -
    question: >
      What is the significance of the `ETag` HTTP header in caching?
    answers:
      - { value: "It is a unique identifier for a specific version of a resource, used for conditional requests.", correct: true }
      - { value: "It specifies the expiration date of a cached resource.", correct: false }
      - { value: "It indicates the size of the response body.", correct: false }
      - { value: "It defines the content encoding of the response.", correct: false }
    help: |
      The `ETag` (Entity Tag) is an identifier for a specific version of a resource. It allows caches to be more efficient and saves bandwidth.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag

  -
    question: |
      How do you set the `ETag` HTTP header on a Symfony `Response` object, making it a "weak" ETag?
    answers:
      - { value: "`$response->setEtag('my-etag-value', true);`", correct: true }
      - { value: "`$response->setEtagWeak('my-etag-value');`", correct: false }
      - { value: "`$response->headers->set('ETag', 'W/\"my-etag-value\"');`", correct: false }
      - { value: "`$response->addEtag('my-etag-value', 'weak');`", correct: false }
    help: |
      The `setEtag()` method accepts a second boolean argument to specify if the ETag should be weak.
      https://symfony.com/doc/current/components/http_foundation.html#http-cache-headers

  -
    question: >
      Which HTTP status code indicates that the server successfully processed the request, but the returned meta-information is from a cached copy rather than the origin server?
    answers:
      - { value: "203 Non-Authoritative Information", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "206 Partial Content", correct: false }
      - { value: "300 Multiple Choices", correct: false }
    help: |
      The 203 Non-Authoritative Information status code indicates that the returned meta-information is not the definitive set as available from the origin server, but is gathered from a local or a third-party copy.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/203

  -
    question: |
      You need to send multiple HTTP requests concurrently and process their responses as they become available. Which method of `HttpClientInterface` is designed for this?
    answers:
      - { value: "`stream(iterable $responses, ?float $timeout = null);`", correct: true }
      - { value: "`sendAsyncRequest(RequestInterface $request);`", correct: false }
      - { value: "`wait(float $timeout = null);`", correct: false }
      - { value: "`concurrent(array $requests);`", correct: false }
    help: |
      The `stream()` method monitors a list of HTTP responses, yielding chunks of data as they arrive, enabling concurrent processing.
      https://symfony.com/doc/current/http_client.html#streaming-responses

  -
    question: >
      What is the purpose of the `Content-Type` HTTP header in a response?
    answers:
      - { value: "It indicates the media type of the resource sent to the client.", correct: true }
      - { value: "It specifies the character encoding of the response.", correct: false }
      - { value: "It suggests the file extension for the downloaded content.", correct: false }
      - { value: "It defines the content negotiation preferences.", correct: false }
    help: |
      The `Content-Type` header indicates the original media type of the resource (prior to any content encoding applied for transfer).
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type

  -
    question: |
      Which `Symfony\Component\HttpFoundation\Request` method allows you to get a list of accepted encodings, ordered by descending quality?
    answers:
      - { value: "`getEncodings();`", correct: true }
      - { value: "`getAcceptedEncodings();`", correct: false }
      - { value: "`getContentEncodings();`", correct: false }
      - { value: "`getTransferEncodings();`", correct: false }
    help: |
      The `getEncodings()` method parses the `Accept-Encoding` header and returns an ordered list of accepted encodings.
      https://symfony.com/doc/current/components/http_foundation.html#accessing-accept-headers

  -
    question: >
      What does an HTTP status code of `429 Too Many Requests` signify?
    answers:
      - { value: "The user has sent too many requests in a given amount of time.", correct: true }
      - { value: "The server is temporarily overloaded.", correct: false }
      - { value: "The request body is too large.", correct: false }
      - { value: "The client needs to upgrade to a different protocol.", correct: false }
    help: |
      The 429 Too Many Requests status code indicates that the user has sent too many requests in a given amount of time ("rate limiting").
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429

  -
    question: |
      How do you clear a specific cookie named `my_cookie` from a Symfony `Response` object?
    answers:
      - { value: "`$response->headers->clearCookie('my_cookie');`", correct: true }
      - { value: "`$response->clearCookie('my_cookie');`", correct: false }
      - { value: "`$response->cookies->remove('my_cookie');`", correct: false }
      - { value: "`$response->headers->setCookie(new Cookie('my_cookie', '', time() - 3600));`", correct: true }
    help: |
      The `clearCookie()` method on `ResponseHeaderBag` is used to remove a cookie. Alternatively, setting an expired cookie also clears it.
      https://symfony.com/doc/current/components/http_foundation.html#managing-cookies

  -
    question: >
      Which HTTP status code indicates that the server understands the content type of the request entity, but was unable to process the contained entities?
    answers:
      - { value: "422 Unprocessable Content", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "415 Unsupported Media Type", correct: false }
      - { value: "500 Internal Server Error", correct: false }
    help: |
      The 422 Unprocessable Content (WebDAV) status code means the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422

  -
    question: |
      What is the purpose of the `Accept` HTTP header in a request?
    answers:
      - { value: "It specifies the media types that the client is willing to accept in the response.", correct: true }
      - { value: "It indicates the preferred language for the response.", correct: false }
      - { value: "It defines the character set the client prefers.", correct: false }
      - { value: "It tells the server what content type the request body contains.", correct: false }
    help: |
      The `Accept` header indicates the content types, or media types, that are acceptable for the response.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept

  -
    question: >
      Which HTTP method is typically used to submit data to be processed to a specified resource, often causing a change in state or a side effect on the server?
    answers:
      - { value: "POST", correct: true }
      - { value: "GET", correct: false }
      - { value: "PUT", correct: false }
      - { value: "FETCH", correct: false }
    help: |
      The POST method is used to send data to a server to create/update a resource.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST

  -
    question: |
      When using `HttpClientInterface::stream()`, what does `ChunkInterface::isTimeout()` indicate?
    answers:
      - { value: "The stream timed out for this specific response.", correct: true }
      - { value: "The entire streaming operation has timed out.", correct: false }
      - { value: "The server took too long to send the initial headers.", correct: false }
      - { value: "The network connection was lost.", correct: false }
    help: |
      `isTimeout()` returns true if the stream timed out for the associated response, meaning no new data arrived within the specified timeout period.
      https://symfony.com/doc/current/http_client.html#streaming-responses

  -
    question: >
      Which HTTP status code indicates that the request has been fulfilled and resulted in multiple options for the client to choose from?
    answers:
      - { value: "300 Multiple Choices", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "301 Moved Permanently", correct: false }
      - { value: "303 See Other", correct: false }
    help: |
      The 300 Multiple Choices status code indicates that the request has more than one possible response. The user agent or user should choose one of them.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/300

  -
    question: |
      How can you set a specific `ETag` value on a Symfony `Response` object?
    answers:
      - { value: "`$response->setEtag('\"abcdef123\"');`", correct: true }
      - { value: "`$response->headers->set('ETag', '\"abcdef123\"');`", correct: false }
      - { value: "`$response->addEtag('\"abcdef123\"');`", correct: false }
      - { value: "`$response->setHash('\"abcdef123\"');`", correct: false }
    help: |
      The `setEtag()` method is the correct way to set the `ETag` header.
      https://symfony.com/doc/current/components/http_foundation.html#http-cache-headers

  -
    question: >
      What does an HTTP status code of `408 Request Timeout` indicate?
    answers:
      - { value: "The server didn't receive a complete request message within the time that it was prepared to wait.", correct: true }
      - { value: "The server is too busy to handle the request.", correct: false }
      - { value: "The client's network connection was lost.", correct: false }
      - { value: "The request took too long to process on the server side.", correct: false }
    help: |
      The 408 Request Timeout status code means the server didn't receive a complete request message within the time that it was prepared to wait.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/408

  -
    question: |
      Which of the following classes is specifically designed for creating mock HTTP responses for testing in Symfony?
    answers:
      - { value: "`Symfony\Component\HttpClient\Response\MockResponse`", correct: true }
      - { value: "`Symfony\Component\HttpClient\Test\TestResponse`", correct: false }
      - { value: "`Symfony\Component\HttpFoundation\Response`", correct: false }
      - { value: "`Symfony\Component\HttpClient\MockClientResponse`", correct: false }
    help: |
      `MockResponse` is the dedicated class for creating predefined HTTP responses for use with `MockHttpClient`.
      https://symfony.com/doc/current/http_client.html#testing

  -
    question: >
      What is the purpose of the `If-None-Match` HTTP request header in caching?
    answers:
      - { value: "It makes a request conditional, asking the server to send the resource only if its ETag does not match the provided one.", correct: true }
      - { value: "It specifies that the client does not have any cached version of the resource.", correct: false }
      - { value: "It provides a list of ETags that the client is willing to accept.", correct: false }
      - { value: "It forces the server to revalidate the resource even if the ETag matches.", correct: false }
    help: |
      The `If-None-Match` header makes the request conditional: the server will send the requested resource only if its ETag does not match the ones specified by the client.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match

  -
    question: |
      Which `Symfony\Component\HttpFoundation\Request` method allows you to get a list of accepted content types, ordered by descending quality?
    answers:
      - { value: "`getAcceptableContentTypes();`", correct: true }
      - { value: "`getPreferredFormat();`", correct: false }
      - { value: "`getContentType();`", correct: false }
      - { value: "`getAccepts();`", correct: false }
    help: |
      The `getAcceptableContentTypes()` method parses the `Accept` header and returns an ordered list of acceptable content types.
      https://symfony.com/doc/current/components/http_foundation.html#accessing-accept-headers

  -
    question: >
      What does an HTTP status code of `413 Content Too Large` indicate?
    answers:
      - { value: "The request entity is larger than limits defined by server.", correct: true }
      - { value: "The server is out of disk space.", correct: false }
      - { value: "The client sent too many requests.", correct: false }
      - { value: "The server cannot process the request due to memory constraints.", correct: false }
    help: |
      The 413 Content Too Large status code indicates that the request entity is larger than limits defined by server.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/413

  -
    question: |
      How can you add a custom header `X-Custom-Header: value` to a Symfony `Response` object?
    answers:
      - { value: "`$response->headers->set('X-Custom-Header', 'value');`", correct: true }
      - { value: "`$response->addHeader('X-Custom-Header', 'value');`", correct: false }
      - { value: "`$response->set('X-Custom-Header', 'value');`", correct: false }
      - { value: "`$response->headers['X-Custom-Header'] = 'value';`", correct: false }
    help: |
      HTTP response headers are managed via the `ResponseHeaderBag` object, accessible through `$response->headers`.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#creating-a-response

  -
    question: >
      Which HTTP status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax)?
    answers:
      - { value: "400 Bad Request", correct: true }
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      The 400 Bad Request status code means the server cannot or will not process the request due to something that is perceived to be a client error.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400

  -
    question: |
      What is the purpose of the `If-Modified-Since` HTTP request header in caching?
    answers:
      - { value: "It makes a request conditional, asking the server to send the resource only if it has been modified since the specified date.", correct: true }
      - { value: "It provides the date when the client last modified its local copy of the resource.", correct: false }
      - { value: "It specifies the maximum age of a cached resource that the client will accept.", correct: false }
      - { value: "It indicates the date when the client's cached version will expire.", correct: false }
    help: |
      The `If-Modified-Since` header makes the request conditional: the server will send the requested resource only if it has been modified since the date specified by the client.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since

  -
    question: >
      Which HTTP status code indicates that the server requires the client to provide a proxy to complete the request?
    answers:
      - { value: "407 Proxy Authentication Required", correct: true }
      - { value: "401 Unauthorized", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      The 407 Proxy Authentication Required status code indicates that the client needs to authenticate itself to get the requested response from a proxy.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/407

  -
    question: |
      How can you configure a base URI for a Symfony HTTP Client instance using the `withOptions()` method?
    answers:
      - { value: "`$client = $client->withOptions(['base_uri' => 'https://api.example.com/']);`", correct: true }
      - { value: "`$client = $client->setBaseUri('https://api.example.com/');`", correct: false }
      - { value: "`$client = $client->options()->setBaseUri('https://api.example.com/');`", correct: false }
      - { value: "`$client = $client->configure(['base_uri' => 'https://api.example.com/']);`", correct: false }
    help: |
      The `withOptions()` method allows you to create a new client instance with modified options, including `base_uri`.
      https://symfony.com/doc/current/http_client.html#base-uri

  -
    question: >
      What does an HTTP status code of `411 Length Required` indicate?
    answers:
      - { value: "The server refuses to accept the request without a defined `Content-Length` header.", correct: true }
      - { value: "The request body is too short.", correct: false }
      - { value: "The server requires a specific length for the URI.", correct: false }
      - { value: "The client needs to provide a range header.", correct: false }
    help: |
      The 411 Length Required status code means the server refuses to accept the request without a defined `Content-Length` header.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/411

  -
    question: |
      Which `Symfony\Component\HttpFoundation\Request` method allows you to get the URI path being requested, excluding any query parameters?
    answers:
      - { value: "`getPathInfo();`", correct: true }
      - { value: "`getUri();`", correct: false }
      - { value: "`getBasePath();`", correct: false }
      - { value: "`getRoute();`", correct: false }
    help: |
      The `getPathInfo()` method returns the path information from the URI, which is the part after the script name and before the query string.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#accessing-request-data

  -
    question: >
      What is the purpose of the `Content-Length` HTTP header in a request or response?
    answers:
      - { value: "It indicates the size of the entity-body, in octets.", correct: true }
      - { value: "It specifies the maximum length of the URI.", correct: false }
      - { value: "It defines the number of characters in the response.", correct: false }
      - { value: "It sets a timeout for the transfer of the content.", correct: false }
    help: |
      The `Content-Length` header indicates the size of the entity-body, in octets, sent to the recipient.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length

  -
    question: |
      How can you retrieve a specific HTTP request header (e.g., `User-Agent`) from a Symfony `Request` object, with normalized, lowercase keys?
    answers:
      - { value: "`$request->headers->get('user-agent');`", correct: true }
      - { value: "`$request->headers->get('User-Agent');`", correct: true }
      - { value: "`$request->getHeader('User-Agent');`", correct: false }
      - { value: "`$request->server->get('HTTP_USER_AGENT');`", correct: false }
    help: |
      The `headers` property of the `Request` object provides access to HTTP headers with normalized, lowercase keys. You can use either the original casing or lowercase.
      https://symfony.com/doc/current/introduction/http_fundamentals.html#accessing-request-data

  -
    question: >
      Which HTTP status code indicates that the server refuses to accept the request because the content format is not supported by the server for the requested method?
    answers:
      - { value: "415 Unsupported Media Type", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "406 Not Acceptable", correct: false }
      - { value: "422 Unprocessable Content", correct: false }
    help: |
      The 415 Unsupported Media Type status code means the server refuses to accept the request because the content format is not supported by the server for the requested method.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/415

  -
    question: |
      What is the purpose of `Symfony\Component\HttpClient\ThrottlingHttpClient`?
    answers:
      - { value: "To limit the rate of requests sent to a specific host or globally.", correct: true }
      - { value: "To reduce the bandwidth usage of HTTP requests.", correct: false }
      - { value: "To automatically retry failed HTTP requests.", correct: false }
      - { value: "To prioritize certain HTTP requests over others.", correct: false }
    help: |
      `ThrottlingHttpClient` (introduced in Symfony 7.1) is used to limit the rate at which HTTP requests are sent, preventing abuse or adhering to API rate limits.
      https://symfony.com/doc/current/http_client.html#rate-limiter

  -
    question: >
      Which HTTP status code indicates that the server understands the request but cannot fulfill it due to a client error (e.g., invalid parameters)?
    answers:
      - { value: "400 Bad Request", correct: true }
      - { value: "404 Not Found", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      The 400 Bad Request status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400

  -
    question: |
      How can you configure a custom mock response factory for the Symfony HTTP Client in `config/packages/framework.php`?
    answers:
      - { value: |
          ```php
          use Symfony\Config\FrameworkConfig;

          return static function (FrameworkConfig $framework): void {
              $framework->httpClient()
                  ->mockResponseFactory(MyMockClientCallback::class)
              ;
          };
          ```, correct: true }
      - { value: |
          ```php
          use Symfony\Config\FrameworkConfig;

          return static function (FrameworkConfig $framework): void {
              $framework->httpClient()
                  ->setMockFactory(MyMockClientCallback::class)
              ;
          };
          ```, correct: false }
      - { value: |
          ```php
          use Symfony\Config\FrameworkConfig;

          return static function (FrameworkConfig $framework): void {
              $framework->httpClient()
                  ->mockResponses(MyMockClientCallback::class)
              ;
          };
          ```, correct: false }
    help: |
      The `mockResponseFactory()` method is used to specify a service that will act as the mock response factory.
      https://symfony.com/doc/current/http_client.html#mocking-responses-in-tests

  -
    question: >
      What is the primary function of the `User-Agent` HTTP request header?
    answers:
      - { value: "It identifies the client software originating the request.", correct: true }
      - { value: "It specifies the preferred language of the user.", correct: false }
      - { value: "It indicates the user's authentication credentials.", correct: false }
      - { value: "It describes the operating system of the client.", correct: false }
    help: |
      The `User-Agent` header string helps identify the application, operating system, vendor, and/or version of the user agent.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent

  -
    question: |
      Which HTTP status code indicates that the server cannot fulfill the request because the requested range is not satisfiable?
    answers:
      - { value: "416 Range Not Satisfiable", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Content Too Large", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      The 416 Range Not Satisfiable status code indicates that the server cannot fulfill the request because the requested range is not satisfiable.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/416

  -
    question: |
      When dealing with HTTP caching, what is the purpose of the `s-maxage` directive in the `Cache-Control` header?
    answers:
      - { value: "It specifies the maximum age a response can be cached by shared (proxy) caches.", correct: true }
      - { value: "It defines the maximum age for private caches only.", correct: false }
      - { value: "It indicates the time after which the resource should be revalidated by the origin server.", correct: false }
      - { value: "It sets the stale-while-revalidate period for all caches.", correct: false }
    help: |
      The `s-maxage` directive specifies the maximum amount of time a response can be stored by a shared cache (like a proxy or CDN).
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#s-maxage

  -
    question: |
      Which HTTP status code indicates that the server is acting as a gateway or proxy and received an invalid response from an upstream server?
    answers:
      - { value: "502 Bad Gateway", correct: true }
      - { value: "500 Internal Server Error", correct: false }
      - { value: "504 Gateway Timeout", correct: false }
      - { value: "400 Bad Request", correct: false }
    help: |
      The 502 Bad Gateway status code means the server, while acting as a gateway or proxy, received an invalid response from an upstream server.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502

  -
    question: |
      What does `Symfony\Component\HttpClient\HttpClient::create()` do if the cURL PHP extension is not available or too old?
    answers:
      - { value: "It falls back to `AmpHttpClient` if the `amphp/http-client` package is installed.", correct: true }
      - { value: "It throws an exception indicating a missing dependency.", correct: false }
      - { value: "It falls back directly to `NativeHttpClient` (PHP streams).", correct: false }
      - { value: "It attempts to install the cURL extension automatically.", correct: false }
    help: |
      If cURL is not available, `HttpClient::create()` attempts to use `AmpHttpClient` as a fallback.
      https://symfony.com/doc/current/http_client.html#choosing-the-http-client-transport

  -
    question: >
      What is the purpose of the `Accept-Encoding` HTTP request header?
    answers:
      - { value: "It indicates the content encoding (e.g., gzip, deflate) that the client can understand.", correct: true }
      - { value: "It specifies the character set preferred by the client.", correct: false }
      - { value: "It defines the language preferences of the client.", correct: false }
      - { value: "It suggests the file format for the response body.", correct: false }
    help: |
      The `Accept-Encoding` header indicates the content encoding (e.g., compression algorithms) that the client can understand.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding

  -
    question: |
      Which HTTP status code indicates that the server is acting as a gateway or proxy and did not receive a response from an upstream server within the time it was prepared to wait?
    answers:
      - { value: "504 Gateway Timeout", correct: true }
      - { value: "502 Bad Gateway", correct: false }
      - { value: "408 Request Timeout", correct: false }
      - { value: "503 Service Unavailable", correct: false }
    help: |
      The 504 Gateway Timeout status code means the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504

  -
    question: |
      How can you convert a streamed request body to a string using `FormDataPart` to ensure the `Content-Length` header is present, potentially resolving HTTP 411 errors?
    answers:
      - { value: "`$formData->bodyToString();`", correct: true }
      - { value: "`$formData->toString();`", correct: false }
      - { value: "`$formData->getContent();`", correct: false }
      - { value: "`$formData->getStreamedBody();`", correct: false }
    help: |
      The `bodyToString()` method on `FormDataPart` converts the streamed body to a string, which can help ensure the `Content-Length` header is set correctly.
      https://symfony.com/doc/current/http_client.html#uploading-data

  -
    question: >
      What is the purpose of the `Host` HTTP request header?
    answers:
      - { value: "It specifies the domain name of the server (for virtual hosting).", correct: true }
      - { value: "It indicates the client's IP address.", correct: false }
      - { value: "It defines the port number for the connection.", correct: false }
      - { value: "It specifies the protocol version used by the client.", correct: false }
    help: |
      The `Host` header specifies the domain name of the server (for virtual hosting) and optionally the port number.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host

  -
    question: |
      Which HTTP status code indicates that the server does not support the functionality required to fulfill the request?
    answers:
      - { value: "501 Not Implemented", correct: true }
      - { value: "405 Method Not Allowed", correct: false }
      - { value: "500 Internal Server Error", correct: false }
      - { value: "400 Bad Request", correct: false }
    help: |
      The 501 Not Implemented status code means the server does not support the functionality required to fulfill the request.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501

  -
    question: |
      How can you retrieve the full URL of the current request from a Symfony `Request` object?
    answers:
      - { value: "`$request->getUri();`", correct: true }
      - { value: "`$request->getSchemeAndHttpHost().$request->getRequestUri();`", correct: true }
      - { value: "`$request->getUrl();`", correct: false }
      - { value: "`$request->getAbsoluteUrl();`", correct: false }
    help: |
      The `getUri()` method returns the full URI. Alternatively, you can construct it from other request properties.
      https://symfony.com/doc/current/components/http_foundation.html#accessing-request-data

  -
    question: >
      What is the purpose of the `Referer` HTTP request header?
    answers:
      - { value: "It indicates the address of the previous web page from which a link to the currently requested page was followed.", correct: true }
      - { value: "It specifies the URL to which the client should be redirected.", correct: false }
      - { value: "It provides a list of URLs that the client has recently visited.", correct: false }
      - { value: "It indicates the origin of the request for security purposes.", correct: false }
    help: |
      The `Referer` header contains the address of the web page from which a resource was requested.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer

  -
    question: |
      Which HTTP status code indicates that the server understands the request but cannot fulfill it due to a conflict with the current state of the target resource?
    answers:
      - { value: "409 Conflict", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "412 Precondition Failed", correct: false }
      - { value: "422 Unprocessable Content", correct: false }
    help: |
      The 409 Conflict status code indicates that the request could not be completed due to a conflict with the current state of the target resource.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409

  -
    question: |
      How do you set the `max-age` directive for shared caches (s-maxage) on a Symfony `Response` object?
    answers:
      - { value: "`$response->setSharedMaxAge(3600);`", correct: true }
      - { value: "`$response->setMaxAge(3600, true);`", correct: false }
      - { value: "`$response->headers->set('Cache-Control', 's-maxage=3600');`", correct: false }
      - { value: "`$response->setPublic()->setMaxAge(3600);`", correct: false }
    help: |
      The `setSharedMaxAge()` method sets the `s-maxage` directive of the `Cache-Control` header.
      https://symfony.com/doc/current/components/http_foundation.html#http-cache-headers

  -
    question: >
      What is the purpose of the `Origin` HTTP request header?
    answers:
      - { value: "It indicates the origin of the cross-origin request.", correct: true }
      - { value: "It specifies the country from which the request originated.", correct: false }
      - { value: "It defines the starting point of a range request.", correct: false }
      - { value: "It is used for basic authentication.", correct: false }
    help: |
      The `Origin` request header indicates the origin of the cross-origin request.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin

  -
    question: |
      Which HTTP status code indicates that the server cannot fulfill the request because the request URI is longer than the server is willing to interpret?
    answers:
      - { value: "414 URI Too Long", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "413 Content Too Large", correct: false }
      - { value: "404 Not Found", correct: false }
    help: |
      The 414 URI Too Long status code means the server refuses to service the request because the request-target is longer than the server is willing to interpret.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/414

  -
    question: |
      How can you instantiate a `NativeHttpClient` (which uses native PHP streams) in a standalone PHP script?
    answers:
      - { value: "`$client = new NativeHttpClient();`", correct: true }
      - { value: "`$client = HttpClient::create(['transport' => 'native']);`", correct: false }
      - { value: "`$client = HttpClient::createNative();`", correct: false }
      - { value: "`$client = new StreamHttpClient();`", correct: false }
    help: |
      You can directly instantiate `NativeHttpClient` if you specifically want to use PHP streams.
      https://symfony.com/doc/current/http_client.html#choosing-the-http-client-transport

  -
    question: >
      What is the purpose of the `Accept-Charset` HTTP request header?
    answers:
      - { value: "It indicates the character sets that the client can understand in the response.", correct: true }
      - { value: "It specifies the preferred language for the response.", correct: false }
      - { value: "It defines the content encoding of the response.", correct: false }
      - { value: "It suggests the file format for the response body.", correct: false }
    help: |
      The `Accept-Charset` header indicates the character sets that are acceptable for the response.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Charset

  -
    question: |
      Which HTTP status code indicates that the server cannot fulfill the request because the preconditions given in the request headers (e.g., `If-Match`, `If-Unmodified-Since`) evaluated to false?
    answers:
      - { value: "412 Precondition Failed", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "409 Conflict", correct: false }
      - { value: "428 Precondition Required", correct: false }
    help: |
      The 412 Precondition Failed status code means the server does not meet one of the preconditions that the requester put on the request header fields.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/412

  -
    question: |
      How do you set the `stale-while-revalidate` directive in the `Cache-Control` header for a Symfony `Response`?
    answers:
      - { value: "`$response->setStaleWhileRevalidate(3600);`", correct: true }
      - { value: "`$response->setCache(['stale_while_revalidate' => 3600]);`", correct: true }
      - { value: "`$response->headers->set('Cache-Control', 'stale-while-revalidate=3600');`", correct: false }
      - { value: "`$response->setRevalidateTimeout(3600);`", correct: false }
    help: |
      The `setStaleWhileRevalidate()` method or the `setCache()` method with the `stale_while_revalidate` option can be used.
      https://symfony.com/doc/current/components/http_foundation.html#http-cache-headers

  -
    question: >
      What is the purpose of the `Cookie` HTTP request header?
    answers:
      - { value: "It contains HTTP cookies previously sent by the server with the `Set-Cookie` header.", correct: true }
      - { value: "It specifies the client's preferred cookie policy.", correct: false }
      - { value: "It requests the server to set a new cookie.", correct: false }
      - { value: "It indicates the maximum number of cookies the client can store.", correct: false }
    help: |
      The `Cookie` header contains HTTP cookies that were previously sent by the server with the `Set-Cookie` header.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cookie

  -
    question: |
      Which HTTP status code indicates that the server understands the request but cannot fulfill it because the requested resource has been deleted?
    answers:
      - { value: "410 Gone", correct: true }
      - { value: "404 Not Found", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "405 Method Not Allowed", correct: false }
    help: |
      The 410 Gone status code indicates that the target resource is no longer available at the origin server and that this condition is likely to be permanent.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/410

  -
    question: |
      What is the purpose of the `Set-Cookie` HTTP response header?
    answers:
      - { value: "It sends cookies from the server to the user agent, to be stored and sent back with future requests.", correct: true }
      - { value: "It requests the client to clear all its cookies.", correct: false }
      - { value: "It specifies the security policy for cookies.", correct: false }
      - { value: "It defines the maximum number of cookies the server can set.", correct: false }
    help: |
      The `Set-Cookie` header is used to send cookies from the server to the user agent, which then stores them and sends them back with subsequent requests.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie