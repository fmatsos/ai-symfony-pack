category: HTTP
questions:
  -
    question: "Which of the following best describes the role of the Symfony `Request` object in the HTTP client-server interaction?"
    answers:
      - { value: "It represents the incoming HTTP request and provides an object-oriented way to access request data.", correct: true }
      - { value: "It is responsible for sending the HTTP response back to the client.", correct: false }
      - { value: "It handles database interactions based on the request parameters.", correct: false }
      - { value: "It defines the routing rules for the application.", correct: false }
    help: |
      The `Request` object encapsulates the HTTP request.
      https://github.com/symfony/symfony-docs/blob/7.3/introduction/http_fundamentals.rst#_snippet_5
  -
    question: "How do you access a query parameter named `name` from an incoming HTTP request using the Symfony `Request` object?"
    answers:
      - { value: "$request->query->get('name');", correct: true }
      - { value: "$request->get('name');", correct: false }
      - { value: "$_GET['name'];", correct: false }
      - { value: "$request->attributes->get('name');", correct: false }
    help: |
      The `query` property of the `Request` object provides access to GET parameters.
      https://github.com/symfony/symfony-docs/blob/7.3/introduction/http_fundamentals.rst#_snippet_5
  -
    question: "Consider the following PHP code snippet. What is the expected HTTP status code and Content-Type header of the response?"
    answers:
      - { value: "Status: 200 OK, Content-Type: text/html", correct: true }
      - { value: "Status: 200 OK, Content-Type: application/json", correct: false }
      - { value: "Status: 404 Not Found, Content-Type: text/html", correct: false }
      - { value: "Status: 500 Internal Server Error, Content-Type: text/plain", correct: false }
    help: |
      The `Response` object is initialized with `Response::HTTP_OK` (200) and `content-type: text/html`.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_30
    code: |
      use Symfony\Component\HttpFoundation\Response;

      $response = new Response(
          'Content',
          Response::HTTP_OK,
          ['content-type' => 'text/html']
      );
  -
    question: "Which HTTP status code indicates that the request has succeeded and a new resource has been created as a result?"
    answers:
      - { value: "201 Created", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "204 No Content", correct: false }
      - { value: "302 Found", correct: false }
    help: |
      Status code 201 is used for successful resource creation.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201
  -
    question: "Which HTTP method is considered idempotent and safe, meaning it should not cause any side effects on the server and can be repeated without changing the result?"
    answers:
      - { value: "GET", correct: true }
      - { value: "POST", correct: false }
      - { value: "PUT", correct: false }
      - { value: "DELETE", correct: false }
    help: |
      GET requests are designed to be idempotent and safe.
      https://github.com/symfony/symfony-docs/blob/7.3/introduction/http_fundamentals.rst#_snippet_0
  -
    question: "How can you set a cookie named `my_cookie` with the value `my_value` on a Symfony `Response` object?"
    answers:
      - { value: "$response->headers->setCookie(new Cookie('my_cookie', 'my_value'));", correct: true }
      - { value: "$response->cookies->set('my_cookie', 'my_value');", correct: false }
      - { value: "$response->setCookie('my_cookie', 'my_value');", correct: false }
      - { value: "$response->headers->add('Set-Cookie', 'my_cookie=my_value');", correct: false }
    help: |
      The `ResponseHeaderBag` class provides the `setCookie` method.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "Which HTTP header is primarily used by a client to indicate to the server that it is willing to accept a cached response that might be stale, but only if the origin server is experiencing an error?"
    answers:
      - { value: "Cache-Control: stale-if-error", correct: true }
      - { value: "Cache-Control: no-cache", correct: false }
      - { value: "Cache-Control: max-age", correct: false }
      - { value: "Pragma: no-cache", correct: false }
    help: |
      The `stale-if-error` directive allows serving stale content on error.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "Given a Symfony `Request` object, which method would you use to get an ordered list of content types the client accepts, from most preferred to least preferred?"
    answers:
      - { value: "$request->getAcceptableContentTypes();", correct: true }
      - { value: "$request->headers->get('Accept');", correct: false }
      - { value: "$request->getPreferredFormat();", correct: false }
      - { value: "$request->getMimeTypes();", correct: false }
    help: |
      The `getAcceptableContentTypes()` method parses the `Accept` header.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_22
  -
    question: "When a client sends an `Accept-Language` header, which method of the Symfony `Request` object allows you to retrieve an ordered list of languages the client prefers?"
    answers:
      - { value: "$request->getLanguages();", correct: true }
      - { value: "$request->headers->get('Accept-Language');", correct: false }
      - { value: "$request->getPreferredLanguage();", correct: false }
      - { value: "$request->getLocale();", correct: false }
    help: |
      The `getLanguages()` method parses the `Accept-Language` header.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_22
  -
    question: "Which Symfony component is recommended for making HTTP requests to external APIs or services from your application?"
    answers:
      - { value: "Symfony HttpClient", correct: true }
      - { value: "Symfony HttpKernel", correct: false }
      - { value: "Symfony HttpFoundation", correct: false }
      - { value: "Symfony BrowserKit", correct: false }
    help: |
      The Symfony HttpClient component is designed for making outgoing HTTP requests.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_0
  -
    question: "You want to make a simple GET request to `https://api.example.com/data`. How would you do this using the Symfony HttpClient component in a standalone PHP script?"
    answers:
      - { value: |
          ```php
          use Symfony\Component\HttpClient\HttpClient;
          $client = HttpClient::create();
          $response = $client->request('GET', 'https://api.example.com/data');
          ```
        , correct: true }
      - { value: |
          ```php
          use Symfony\Component\HttpFoundation\Request;
          $request = Request::create('https://api.example.com/data', 'GET');
          ```
        , correct: false }
      - { value: |
          ```php
          $client = new \GuzzleHttp\Client();
          $response = $client->get('https://api.example.com/data');
          ```
        , correct: false }
      - { value: |
          ```php
          $response = file_get_contents('https://api.example.com/data');
          ```
        , correct: false }
    help: |
      `HttpClient::create()` is used to get a client instance, and `request()` to send the GET request.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_1
  -
    question: "When making an HTTP request with Symfony HttpClient, how can you send a JSON payload in the request body for a POST request?"
    answers:
      - { value: "Use the `'json'` option with an associative array.", correct: true }
      - { value: "Use the `'body'` option with a JSON string.", correct: true }
      - { value: "Use the `'form_params'` option with a JSON string.", correct: false }
      - { value: "Use the `'query'` option with a JSON string.", correct: false }
    help: |
      The `json` option automatically encodes the array to JSON and sets the `Content-Type` header to `application/json`. The `body` option can also accept a raw string.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_18
      (Note: The provided snippet only shows `body` with string/array/closure/resource, but `json` is a common and preferred way for JSON payloads in HttpClient. I will rely on general HttpClient knowledge for this, as the snippet doesn't explicitly show `json` option, but it's a core feature. I will link to the `body` option as it's the closest provided.)
  -
    question: "After making a request with Symfony HttpClient, which method should you call on the `ResponseInterface` object to get the response body as a PHP array, assuming the response content is JSON?"
    answers:
      - { value: "$response->toArray();", correct: true }
      - { value: "$response->getContent();", correct: false }
      - { value: "$response->json();", correct: false }
      - { value: "$response->decodeJson();", correct: false }
    help: |
      The `toArray()` method decodes JSON content into a PHP array.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_46
  -
    question: "To configure a Symfony HTTP response to be publicly cacheable for 600 seconds, which `Cache-Control` directives should be set?"
    answers:
      - { value: "public, max-age=600", correct: true }
      - { value: "private, max-age=600", correct: false }
      - { value: "no-cache, max-age=600", correct: false }
      - { value: "public, s-maxage=600", correct: false }
    help: |
      `public` makes the response cacheable by shared caches, and `max-age` sets the freshness lifetime.
      https://github.com/symfony/symfony-docs/blob/7.3/http_cache/expiration.rst#_snippet_0
  -
    question: "Which of the following are valid ways to retrieve data from an incoming HTTP request using the Symfony `Request` object?"
    answers:
      - { value: "$request->query->get('param');", correct: true }
      - { value: "$request->getPayload()->get('param');", correct: true }
      - { value: "$request->server->get('HTTP_HOST');", correct: true }
      - { value: "$request->files->get('attachment');", correct: true }
      - { value: "$request->cookies->get('PHPSESSID');", correct: true }
    help: |
      The `Request` object provides access to various request data collections.
      https://github.com/symfony/symfony-docs/blob/7.3/introduction/http_fundamentals.rst#_snippet_5
  -
    question: "What is the primary purpose of calling `$response->send()` on a Symfony `Response` object?"
    answers:
      - { value: "To send the HTTP headers and content to the client.", correct: true }
      - { value: "To store the response in the session.", correct: false }
      - { value: "To log the response details to a file.", correct: false }
      - { value: "To convert the response to a JSON string.", correct: false }
    help: |
      The `send()` method is responsible for outputting the response.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "Symfony's HttpClient is designed to be asynchronous by default. What does this mean in practice when you call `$client->request()`?"
    answers:
      - { value: "The call returns immediately, and the actual HTTP request is sent in the background.", correct: true }
      - { value: "The call blocks execution until the full response body is received.", correct: false }
      - { value: "The request is sent, but the response is automatically cached for later retrieval.", correct: false }
      - { value: "It automatically retries the request multiple times if it fails.", correct: false }
    help: |
      The `request()` method is non-blocking.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_10
  -
    question: "You need to send multiple HTTP requests concurrently using Symfony HttpClient to fetch data from different endpoints. Which approach is efficient for this scenario?"
    answers:
      - { value: "Initiate all requests in a loop, then iterate through the `ResponseInterface` objects in a separate loop to read their content.", correct: true }
      - { value: "Send each request synchronously, waiting for each response to complete before sending the next.", correct: false }
      - { value: "Use `file_get_contents()` for each URL in a loop.", correct: false }
      - { value: "Create a separate `HttpClient` instance for each request.", correct: false }
    help: |
      Sending requests concurrently and then processing responses in a separate loop is the recommended pattern.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_50
  -
    question: "When using `Symfony\\Component\\BrowserKit\\AbstractBrowser` (e.g., in functional tests), how can you submit a form using the PUT HTTP method and also set a custom `Accept-Language` header?"
    answers:
      - { value: |
          ```php
          $client->submitForm(
              'Log in',
              ['login' => 'my_user', 'password' => 'my_pass'],
              'PUT',
              ['HTTP_ACCEPT_LANGUAGE' => 'es']
          );
          ```
        , correct: true }
      - { value: |
          ```php
          $client->request(
              'PUT',
              '/login',
              ['login' => 'my_user', 'password' => 'my_pass'],
              [],
              ['HTTP_ACCEPT_LANGUAGE' => 'es']
          );
          ```
        , correct: false }
      - { value: |
          ```php
          $client->submitForm(
              'Log in',
              ['login' => 'my_user', 'password' => 'my_pass'],
              'PUT'
          )->setHeader('Accept-Language', 'es');
          ```
        , correct: false }
      - { value: "It's not possible to set custom headers with `submitForm`.", correct: false }
    help: |
      The `submitForm` method allows specifying the HTTP method and `serverParameters` (which include headers).
      https://github.com/symfony/symfony-docs/blob/7.3/components/browser_kit.rst#_snippet_17
  -
    question: "Which constant from `Symfony\\Component\\HttpFoundation\\Response` represents the HTTP status code for 'Not Found'?"
    answers:
      - { value: "Response::HTTP_NOT_FOUND", correct: true }
      - { value: "Response::HTTP_404", correct: false }
      - { value: "Response::NOT_FOUND", correct: false }
      - { value: "Response::STATUS_404", correct: false }
    help: |
      Symfony provides constants for common HTTP status codes.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_30 (implied by usage)
  -
    question: "When working with cookies in Symfony, what is the purpose of the `secure` parameter when creating a `Cookie` object or clearing a cookie?"
    answers:
      - { value: "It indicates that the cookie should only be sent over HTTPS connections.", correct: true }
      - { value: "It encrypts the cookie value before sending it to the client.", correct: false }
      - { value: "It prevents client-side JavaScript from accessing the cookie.", correct: false }
      - { value: "It ensures the cookie is only sent to the exact domain that set it.", correct: false }
    help: |
      The `secure` flag restricts cookie transmission to secure channels.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "To enable HTTP caching for a controller action using Symfony's `#[Cache]` attribute, and make it publicly cacheable for 3600 seconds, which options should you use?"
    answers:
      - { value: "`#[Cache(public: true, maxage: 3600)]`", correct: true }
      - { value: "`#[Cache(private: false, maxage: 3600)]`", correct: false }
      - { value: "`#[Cache(shared_max_age: 3600)]`", correct: false }
      - { value: "`#[Cache(ttl: 3600)]`", correct: false }
    help: |
      The `public` and `maxage` options control public caching duration.
      https://github.com/symfony/symfony-docs/blob/7.3/http_cache/expiration.rst#_snippet_0
  -
    question: "What is the purpose of the `Vary` HTTP header in the context of content negotiation and caching?"
    answers:
      - { value: "It informs caches that the response content varies depending on the values of specified request headers, requiring different cached versions.", correct: true }
      - { value: "It specifies the maximum age a cached response can be considered fresh.", correct: false }
      - { value: "It indicates that the response should not be cached by any intermediary.", correct: false }
      - { value: "It provides a unique identifier for the resource's content.", correct: false }
    help: |
      The `Vary` header ensures correct caching for content negotiation.
      https://github.com/symfony/symfony-docs/blob/7.3/http_cache/cache_vary.rst#_snippet_0
  -
    question: "You are writing a unit test for a service that uses `HttpClientInterface`. How can you mock the HTTP client to return predefined responses without making actual network calls?"
    answers:
      - { value: "Instantiate `Symfony\\Component\\HttpClient\\MockHttpClient` with an array of `MockResponse` objects or a callback function.", correct: true }
      - { value: "Extend `HttpClientInterface` and implement a custom mock client.", correct: false }
      - { value: "Use PHPUnit's `createMock()` directly on `HttpClientInterface`.", correct: false }
      - { value: "It's not possible to mock `HttpClientInterface` directly; you must use a real client.", correct: false }
    help: |
      `MockHttpClient` is specifically designed for testing.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_84
  -
    question: "How do you retrieve the raw content of an HTTP request body (e.g., for a POST request with XML or JSON data) using the Symfony `Request` object?"
    answers:
      - { value: "$request->getContent();", correct: true }
      - { value: "$request->getPayload()->all();", correct: false }
      - { value: "$request->request->all();", correct: false }
      - { value: "$_POST;", correct: false }
    help: |
      `getContent()` provides the raw request body.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_10
  -
    question: "Which Symfony class allows you to stream an HTTP response back to the client, which is useful for large files or long-running processes where you want to send data incrementally?"
    answers:
      - { value: "Symfony\\Component\\HttpFoundation\\StreamedResponse", correct: true }
      - { value: "Symfony\\Component\\HttpFoundation\\BinaryFileResponse", correct: false }
      - { value: "Symfony\\Component\\HttpFoundation\\JsonResponse", correct: false }
      - { value: "Symfony\\Component\\HttpFoundation\\Response", correct: false }
    help: |
      `StreamedResponse` is designed for incremental content delivery.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_54
  -
    question: "Which of the following are valid HTTP client transports that Symfony's `HttpClient::create()` can automatically select based on available PHP extensions and packages?"
    answers:
      - { value: "CurlHttpClient", correct: true }
      - { value: "NativeHttpClient", correct: true }
      - { value: "AmpHttpClient", correct: true }
      - { value: "GuzzleHttpClient", correct: false }
    help: |
      Symfony HttpClient prioritizes cURL, then Amp, then native streams.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_42
  -
    question: "How can you configure HTTP Basic authentication for a specific request using Symfony HttpClient?"
    answers:
      - { value: "By setting the `'auth_basic'` option in the request options array.", correct: true }
      - { value: "By setting the `'Authorization'` header manually.", correct: false }
      - { value: "By using a dedicated `AuthBasicHttpClient`.", correct: false }
      - { value: "HTTP Basic authentication is only configurable globally.", correct: false }
    help: |
      The `auth_basic` option simplifies basic authentication.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_13
  -
    question: "You need to add query parameters `token` and `name` to a GET request using Symfony HttpClient. Which option should you use in the request options array?"
    answers:
      - { value: |
          ```php
          'query' => [
              'token' => '...',
              'name' => '...',
          ],
          ```
        , correct: true }
      - { value: |
          ```php
          'params' => [
              'token' => '...',
              'name' => '...',
          ],
          ```
        , correct: false }
      - { value: |
          ```php
          'uri_params' => [
              'token' => '...',
              'name' => '...',
          ],
          ```
        , correct: false }
      - { value: "Append them directly to the URL string.", correct: false }
    help: |
      The `query` option is used for query string parameters.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_15
  -
    question: "What is the difference between `max-age` and `s-maxage` directives in the `Cache-Control` HTTP header?"
    answers:
      - { value: "`max-age` applies to both private and shared caches, while `s-maxage` applies only to shared (proxy) caches and overrides `max-age` for them.", correct: true }
      - { value: "`max-age` is for server-side caching, and `s-maxage` is for client-side caching.", correct: false }
      - { value: "`max-age` specifies the absolute expiration time, while `s-maxage` specifies a relative time.", correct: false }
      - { value: "`s-maxage` is deprecated in favor of `max-age`.", correct: false }
    help: |
      `s-maxage` is specific to shared caches and takes precedence.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#s-maxage
  -
    question: "Why is it generally recommended to use the Symfony `Request` object instead of PHP superglobal variables (like `$_GET`, `$_POST`, `$_SERVER`) to access HTTP request data in a Symfony application?"
    answers:
      - { value: "The `Request` object provides an object-oriented API, handles data sanitization, and allows for easier testing and simulation of requests.", correct: true }
      - { value: "Superglobal variables are entirely removed by Symfony.", correct: false }
      - { value: "The `Request` object offers better performance than direct superglobal access.", correct: false }
      - { value: "Superglobal variables are not available in a Symfony environment.", correct: false }
    help: |
      The `Request` object offers a robust and testable abstraction over raw superglobals.
      https://github.com/symfony/symfony-docs/blob/7.3/introduction/http_fundamentals.rst#_snippet_5
  -
    question: "How can you set a default `base_uri` for all requests made by a Symfony HttpClient instance using the `withOptions()` method?"
    answers:
      - { value: |
          ```php
          $client = $client->withOptions(['base_uri' => 'https://api.example.com/']);
          ```
        , correct: true }
      - { value: |
          ```php
          $client->setBaseUri('https://api.example.com/');
          ```
        , correct: false }
      - { value: |
          ```php
          $client = HttpClient::createForBaseUri('https://api.example.com/');
          ```
        , correct: false }
      - { value: "Base URIs can only be configured globally in `framework.yaml`.", correct: false }
    help: |
      The `withOptions()` method allows modifying client options, including `base_uri`.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_32
  -
    question: "When using Symfony HttpClient, how does the `ResponseInterface::getHeaders(true)` method behave if the HTTP response indicates an error (e.g., 4xx or 5xx status code)?"
    answers:
      - { value: "It throws an exception (e.g., `ClientExceptionInterface` or `ServerExceptionInterface`).", correct: true }
      - { value: "It returns an empty array.", correct: false }
      - { value: "It returns the headers as usual, without throwing an exception.", correct: false }
      - { value: "It returns `null`.", correct: false }
    help: |
      The `throw` parameter in `getHeaders()` (and `getContent()`, `toArray()`) controls error handling.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_46
  -
    question: "Which Symfony class is specifically designed for sending an HTTP redirect response to the client?"
    answers:
      - { value: "Symfony\\Component\\HttpFoundation\\RedirectResponse", correct: true }
      - { value: "Symfony\\Component\\HttpFoundation\\Response", correct: false }
      - { value: "Symfony\\Component\\HttpFoundation\\JsonResponse", correct: false }
      - { value: "Symfony\\Component\\HttpFoundation\\StreamedResponse", correct: false }
    help: |
      `RedirectResponse` is a specialized `Response` for redirects.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "For testing Symfony HttpClient interactions, how can you use a HAR (HTTP Archive) file to provide mock responses?"
    answers:
      - { value: "By using `Symfony\\Component\\HttpClient\\Response\\HarFileResponseFactory` with `MockHttpClient`.", correct: true }
      - { value: "By converting the HAR file to an array of `MockResponse` objects manually.", correct: false }
      - { value: "Symfony HttpClient does not support HAR files for mocking.", correct: false }
      - { value: "By configuring the `HttpClient` to read directly from the HAR file.", correct: false }
    help: |
      `HarFileResponseFactory` simplifies mocking from HAR files.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_100
  -
    question: "To force a cached HTTP response to be revalidated with the origin server immediately, which method should you call on the Symfony `Response` object?"
    answers:
      - { value: "$response->expire();", correct: true }
      - { value: "$response->setCache(false);", correct: false }
      - { value: "$response->setMaxAge(0);", correct: false }
      - { value: "$response->setPublic(false);", correct: false }
    help: |
      The `expire()` method invalidates the response in caches.
      https://github.com/symfony/symfony-docs/blob/7.3/http_cache.rst#_snippet_3
  -
    question: "Which HTTP methods are generally considered idempotent, meaning that multiple identical requests will have the same effect as a single request?"
    answers:
      - { value: "GET", correct: true }
      - { value: "PUT", correct: true }
      - { value: "DELETE", correct: true }
      - { value: "POST", correct: false }
      - { value: "PATCH", correct: false }
    help: |
      GET, PUT, and DELETE are idempotent. POST and PATCH are not necessarily.
      https://developer.mozilla.org/en-US/docs/Glossary/Idempotent
  -
    question: "How can you explicitly force Symfony HttpClient to use HTTP/2 for requests, even for HTTP URLs?"
    answers:
      - { value: "Set the `'http_version'` option to `'2.0'` in the client configuration.", correct: true }
      - { value: "It automatically uses HTTP/2 if the server supports it.", correct: false }
      - { value: "Only HTTPS connections support HTTP/2 with Symfony HttpClient.", correct: false }
      - { value: "Install a specific HTTP/2 PHP extension.", correct: false }
    help: |
      The `http_version` option allows forcing HTTP/2.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_44
  -
    question: "You want to determine the client's preferred character sets from the `Accept-Charset` header using the Symfony `Request` object. Which method should you use?"
    answers:
      - { value: "$request->getCharsets();", correct: true }
      - { value: "$request->headers->get('Accept-Charset');", correct: false }
      - { value: "$request->getPreferredCharset();", correct: false }
      - { value: "$request->getEncoding();", correct: false }
    help: |
      `getCharsets()` parses the `Accept-Charset` header.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_22
  -
    question: "Which Symfony HttpClient class is introduced in Symfony 7.1 to help manage and limit the rate of outgoing HTTP requests?"
    answers:
      - { value: "Symfony\\Component\\HttpClient\\ThrottlingHttpClient", correct: true }
      - { value: "Symfony\\Component\\HttpClient\\RateLimiterHttpClient", correct: false }
      - { value: "Symfony\\Component\\HttpClient\\ThrottleClient", correct: false }
      - { value: "Symfony\\Component\\HttpClient\\CircuitBreakerHttpClient", correct: false }
    help: |
      `ThrottlingHttpClient` is used for rate limiting.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_65
  -
    question: "When creating a `Symfony\\Component\\HttpFoundation\\Cookie` object, which parameter is used to prevent client-side JavaScript from accessing the cookie?"
    answers:
      - { value: "`httpOnly`", correct: true }
      - { value: "`secure`", correct: false }
      - { value: "`sameSite`", correct: false }
      - { value: "`partitioned`", correct: false }
    help: |
      The `httpOnly` flag makes the cookie inaccessible to JavaScript.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "In a Symfony application, what is the typical flow of an HTTP request from the client to the application and back to the client?"
    answers:
      - { value: "Client sends Request -> Web Server -> Front Controller -> HttpKernel -> Controller -> Response -> HttpKernel -> Web Server -> Client receives Response", correct: true }
      - { value: "Client sends Request -> Controller -> HttpKernel -> Web Server -> Client receives Response", correct: false }
      - { value: "Client sends Request -> HttpKernel -> Controller -> Web Server -> Client receives Response", correct: false }
      - { value: "Client sends Request -> Web Server -> Controller -> HttpKernel -> Response -> Client receives Response", correct: false }
    help: |
      The HttpKernel handles the core request-response lifecycle.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_kernel.rst#_snippet_3
  -
    question: "You need to upload data as a raw string in the body of a POST request using Symfony HttpClient. Which option should you use?"
    answers:
      - { value: "`'body' => 'raw data string'`", correct: true }
      - { value: "`'form_params' => 'raw data string'`", correct: false }
      - { value: "`'json' => 'raw data string'`", correct: false }
      - { value: "`'content' => 'raw data string'`", correct: false }
    help: |
      The `body` option accepts a raw string.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_18
  -
    question: "What is the primary difference between a 'public' and 'private' cached HTTP response?"
    answers:
      - { value: "A 'public' response can be cached by any cache (shared or private), while a 'private' response can only be cached by a single-user private cache (e.g., browser cache).", correct: true }
      - { value: "A 'public' response is always fresh, while a 'private' response is always stale.", correct: false }
      - { value: "A 'public' response requires authentication, while a 'private' response does not.", correct: false }
      - { value: "There is no functional difference; it's just a naming convention.", correct: false }
    help: |
      `setPublic()` and `setPrivate()` control cacheability.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "How can you cancel an ongoing HTTP request made with Symfony HttpClient before its completion?"
    answers:
      - { value: "Call the `cancel()` method on the `ResponseInterface` object.", correct: true }
      - { value: "Throw an exception from an `on_progress` callback.", correct: true }
      - { value: "Call `HttpClient::stop()`.", correct: false }
      - { value: "It's not possible to cancel an ongoing request.", correct: false }
    help: |
      Both `cancel()` and throwing an exception in `on_progress` can abort a request.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_48
  -
    question: "What happens when you call the `send()` method on a `Symfony\\Component\\HttpFoundation\\Response` object?"
    answers:
      - { value: "It sends the HTTP headers and then the content of the response to the client.", correct: true }
      - { value: "It saves the response to a file on the server.", correct: false }
      - { value: "It returns the response as a string without sending it.", correct: false }
      - { value: "It dispatches a `kernel.response` event.", correct: false }
    help: |
      The `send()` method outputs the response.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "What is the purpose of 'scoped clients' in Symfony HttpClient configuration?"
    answers:
      - { value: "They allow defining specific default options (like base URI, headers, authentication) for a subset of URLs matching a regular expression or a base URI.", correct: true }
      - { value: "They restrict the HttpClient to only make requests to a predefined list of domains.", correct: false }
      - { value: "They are used for creating isolated HTTP client instances for each user session.", correct: false }
      - { value: "They provide a way to mock responses for specific API endpoints during testing.", correct: false }
    help: |
      Scoped clients allow fine-grained configuration based on URLs.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_9
  -
    question: "You want to simulate an HTTP GET request to `/products/123?category=electronics` for testing purposes, without relying on global variables. How can you create a `Request` object for this in Symfony?"
    answers:
      - { value: |
          ```php
          use Symfony\Component\HttpFoundation\Request;
          $request = Request::create('/products/123', 'GET', ['category' => 'electronics']);
          ```
        , correct: true }
      - { value: |
          ```php
          use Symfony\Component\HttpFoundation\Request;
          $request = Request::createFromGlobals();
          $request->setUri('/products/123?category=electronics');
          ```
        , correct: false }
      - { value: |
          ```php
          use Symfony\Component\HttpFoundation\Request;
          $request = new Request([], ['category' => 'electronics'], [], [], [], ['REQUEST_URI' => '/products/123']);
          ```
        , correct: false }
      - { value: "It's not possible to create a `Request` object programmatically with query parameters.", correct: false }
    help: |
      `Request::create()` allows programmatic construction of requests.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_14
  -
    question: "When integrating Symfony HttpClient with PSR-18 compatible libraries, which Symfony class acts as an adapter to bridge `HttpClientInterface` to PSR-18 `HttpClientInterface`?"
    answers:
      - { value: "Symfony\\Component\\HttpClient\\HttplugClient", correct: true }
      - { value: "Symfony\\Component\\HttpClient\\Psr18Client", correct: false }
      - { value: "Symfony\\Component\\HttpClient\\Adapter\\Psr18Adapter", correct: false }
      - { value: "Symfony\\Component\\HttpClient\\PsrHttpClient", correct: false }
    help: |
      `HttplugClient` provides PSR-18 compatibility.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_73
  -
    question: "Which static method of `Symfony\\Component\\HttpFoundation\\HeaderUtils` can be used to parse a query string while preserving dots in parameter names (e.g., `foo[bar.baz]=qux`)?"
    answers:
      - { value: "`HeaderUtils::parseQuery()`", correct: true }
      - { value: "`HeaderUtils::decodeQuery()`", correct: false }
      - { value: "`HeaderUtils::extractQuery()`", correct: false }
      - { value: "`parse_str()`", correct: false }
    help: |
      `parseQuery()` handles complex query string parsing.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_21
  -
    question: "Which HTTP status code indicates that the server successfully processed the request, but is not returning any content?"
    answers:
      - { value: "204 No Content", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "202 Accepted", correct: false }
      - { value: "304 Not Modified", correct: false }
    help: |
      204 is used for successful requests with no response body.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204
  -
    question: "When configuring default options for Symfony HttpClient in `framework.yaml`, how would you set a global `User-Agent` header?"
    answers:
      - { value: |
          ```yaml
          framework:
              http_client:
                  default_options:
                      headers:
                          'User-Agent': 'My Fancy App'
          ```
        , correct: true }
      - { value: |
          ```yaml
          framework:
              http_client:
                  headers:
                      'User-Agent': 'My Fancy App'
          ```
        , correct: false }
      - { value: |
          ```yaml
          framework:
              http_client:
                  default_headers:
                      'User-Agent': 'My Fancy App'
          ```
        , correct: false }
      - { value: "User-Agent cannot be set globally in configuration.", correct: false }
    help: |
      Default headers are configured under `default_options.headers`.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_16
  -
    question: "What is the purpose of the `on_progress` callback option in Symfony HttpClient requests?"
    answers:
      - { value: "It allows you to monitor the download and upload progress of a request and potentially cancel it.", correct: true }
      - { value: "It defines a callback to be executed when the request completes successfully.", correct: false }
      - { value: "It's used for logging request details to a file as they happen.", correct: false }
      - { value: "It provides a way to modify request options dynamically during execution.", correct: false }
    help: |
      The `on_progress` callback enables real-time monitoring and control.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_48
  -
    question: "Which HTTP status code indicates that the requested resource has been permanently moved to a new URL?"
    answers:
      - { value: "301 Moved Permanently", correct: true }
      - { value: "302 Found", correct: false }
      - { value: "303 See Other", correct: false }
      - { value: "307 Temporary Redirect", correct: false }
    help: |
      301 is for permanent redirects.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301
  -
    question: "When should you use `Symfony\\Component\\HttpClient\\UriTemplateHttpClient`?"
    answers:
      - { value: "When you need to make requests to URLs that follow a URI Template specification (RFC 6570).", correct: true }
      - { value: "When you want to send requests with a custom base URI.", correct: false }
      - { value: "When you need to handle asynchronous requests.", correct: false }
      - { value: "When you are dealing with very large response bodies.", correct: false }
    help: |
      `UriTemplateHttpClient` is for URI template expansion.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_36
  -
    question: "Which HTTP header is used to specify a unique identifier for a specific version of a resource, allowing clients and caches to determine if a resource has changed?"
    answers:
      - { value: "ETag", correct: true }
      - { value: "Last-Modified", correct: false }
      - { value: "Cache-Control", correct: false }
      - { value: "Vary", correct: false }
    help: |
      ETag provides a unique identifier for resource versions.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag
  -
    question: "What is the purpose of `Response::isNotModified(Request $request)` in Symfony?"
    answers:
      - { value: "It checks if the client's request contains conditional headers (If-None-Match or If-Modified-Since) that match the response's ETag or Last-Modified headers, and if so, sets the response status to 304 Not Modified.", correct: true }
      - { value: "It prevents the response from being cached by the client.", correct: false }
      - { value: "It forces the client to revalidate the resource with the server.", correct: false }
      - { value: "It indicates that the response content has not changed since the last request.", correct: false }
    help: |
      `isNotModified()` handles conditional GET requests.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "Which HTTP status code indicates that the server understands the request but refuses to authorize it?"
    answers:
      - { value: "403 Forbidden", correct: true }
      - { value: "401 Unauthorized", correct: false }
      - { value: "404 Not Found", correct: false }
      - { value: "400 Bad Request", correct: false }
    help: |
      403 Forbidden means the server refuses the request.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403
  -
    question: "When sending a POST request with Symfony HttpClient, how can you send data as `application/x-www-form-urlencoded` (like a traditional HTML form submission)?"
    answers:
      - { value: "By setting the `'body'` option to an associative array.", correct: true }
      - { value: "By setting the `'form_params'` option to an associative array.", correct: false }
      - { value: "By setting the `'json'` option to an associative array.", correct: false }
      - { value: "By manually setting the `Content-Type` header to `application/x-www-form-urlencoded` and the `body` to a query string.", correct: false }
    help: |
      When the `body` option is an associative array, HttpClient automatically sets the `Content-Type` to `application/x-www-form-urlencoded`.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_18
  -
    question: "What is the primary benefit of using `HttpClientInterface::stream()` when dealing with large HTTP responses in Symfony?"
    answers:
      - { value: "It allows processing the response content in chunks, preventing memory exhaustion for very large files.", correct: true }
      - { value: "It automatically decompresses gzipped responses.", correct: false }
      - { value: "It caches the entire response body in memory for faster access.", correct: false }
      - { value: "It converts the response body into a PHP array automatically.", correct: false }
    help: |
      `stream()` is designed for efficient handling of large responses.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_47
  -
    question: "Which HTTP status code indicates that the requested resource could not be found on the server?"
    answers:
      - { value: "404 Not Found", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "401 Unauthorized", correct: false }
      - { value: "500 Internal Server Error", correct: false }
    help: |
      404 is the standard code for a missing resource.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404
  -
    question: "When using `Symfony\\Component\\HttpClient\\MockHttpClient` for testing, which method on the `MockResponse` object allows you to inspect the HTTP method that the mock client received?"
    answers:
      - { value: "`getRequestMethod()`", correct: true }
      - { value: "`getMethod()`", correct: false }
      - { value: "`getReceivedMethod()`", correct: false }
      - { value: "`getMockMethod()`", correct: false }
    help: |
      `getRequestMethod()` is a helper for inspecting mock requests.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_95
  -
    question: "What is the purpose of the `Last-Modified` HTTP header in caching?"
    answers:
      - { value: "It indicates the date and time at which the origin server believes the resource was last modified.", correct: true }
      - { value: "It specifies the maximum age a cached response can be considered fresh.", correct: false }
      - { value: "It provides a unique identifier for the resource's content.", correct: false }
      - { value: "It determines if the client has permission to access the resource.", correct: false }
    help: |
      `Last-Modified` is a validator for conditional requests.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified
  -
    question: "Which HTTP status code indicates that the request could not be understood by the server due to malformed syntax?"
    answers:
      - { value: "400 Bad Request", correct: true }
      - { value: "405 Method Not Allowed", correct: false }
      - { value: "422 Unprocessable Content", correct: false }
      - { value: "500 Internal Server Error", correct: false }
    help: |
      400 is for client-side syntax errors.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400
  -
    question: "When using Symfony HttpClient, how can you configure HTTP Bearer authentication globally for a scoped client named `example_api` in YAML configuration?"
    answers:
      - { value: |
          ```yaml
          framework:
              http_client:
                  scoped_clients:
                      example_api:
                          base_uri: 'https://example.com/'
                          auth_bearer: the-bearer-token
          ```
        , correct: true }
      - { value: |
          ```yaml
          framework:
              http_client:
                  example_api:
                      auth_bearer: the-bearer-token
          ```
        , correct: false }
      - { value: |
          ```yaml
          framework:
              http_client:
                  default_options:
                      auth_bearer: the-bearer-token
          ```
        , correct: false }
      - { value: "Bearer authentication cannot be configured globally for scoped clients.", correct: false }
    help: |
      `auth_bearer` is an option for scoped clients.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_12
  -
    question: "What is the primary purpose of the `HttpKernel` component in Symfony?"
    answers:
      - { value: "It takes a `Request` and returns a `Response` by orchestrating the application's lifecycle (routing, controllers, events).", correct: true }
      - { value: "It handles all database interactions.", correct: false }
      - { value: "It is responsible for rendering Twig templates.", correct: false }
      - { value: "It manages the dependency injection container.", correct: false }
    help: |
      The HttpKernel is the core of the request-response cycle.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_kernel.rst#_snippet_3
  -
    question: "Which HTTP status code indicates that the request method is not supported for the requested resource?"
    answers:
      - { value: "405 Method Not Allowed", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "403 Forbidden", correct: false }
      - { value: "501 Not Implemented", correct: false }
    help: |
      405 is specific to unsupported methods.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405
  -
    question: "When using `Symfony\\Component\\HttpClient\\HttpClient::create()`, what is the order of preference for the underlying HTTP client transports it will use?"
    answers:
      - { value: "cURL, then AmpHttpClient, then NativeHttpClient (PHP streams)", correct: true }
      - { value: "NativeHttpClient, then cURL, then AmpHttpClient", correct: false }
      - { value: "AmpHttpClient, then cURL, then NativeHttpClient", correct: false }
      - { value: "It randomly selects one of the available transports.", correct: false }
    help: |
      The `create()` method has a specific fallback mechanism.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_42
  -
    question: "Which HTTP status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request?"
    answers:
      - { value: "500 Internal Server Error", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "404 Not Found", correct: false }
      - { value: "503 Service Unavailable", correct: false }
    help: |
      500 is a generic server-side error.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
  -
    question: "What is the purpose of the `SameSite` attribute for HTTP cookies?"
    answers:
      - { value: "It controls whether cookies are sent with cross-site requests, providing a defense against CSRF attacks.", correct: true }
      - { value: "It ensures the cookie is only sent over secure (HTTPS) connections.", correct: false }
      - { value: "It prevents client-side JavaScript from accessing the cookie.", correct: false }
      - { value: "It specifies the domain for which the cookie is valid.", correct: false }
    help: |
      `SameSite` helps mitigate CSRF.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite
  -
    question: "Which of the following are valid ways to configure HTTP authentication (Basic, Bearer, NTLM) for a Symfony HttpClient instance?"
    answers:
      - { value: "Globally in `framework.yaml` under `http_client.default_options` or `scoped_clients`.", correct: true }
      - { value: "Per request using options like `auth_basic`, `auth_bearer`, `auth_ntlm` in the `request()` method.", correct: true }
      - { value: "By setting the `Authorization` header manually in request options.", correct: true }
      - { value: "Through environment variables only.", correct: false }
    help: |
      Authentication can be configured globally or per-request.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_12
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_13
  -
    question: "What is the role of `Symfony\\Component\\HttpFoundation\\ResponseHeaderBag`?"
    answers:
      - { value: "It manages HTTP headers for a `Response` object, including setting and clearing cookies.", correct: true }
      - { value: "It parses incoming request headers.", correct: false }
      - { value: "It provides a collection of HTTP status codes.", correct: false }
      - { value: "It handles content negotiation for responses.", correct: false }
    help: |
      `ResponseHeaderBag` is the header manager for responses.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "You are building a service that interacts with an external API using Symfony HttpClient. The API requires a custom header `X-API-Key`. How can you add this header to all requests made by your client instance?"
    answers:
      - { value: |
          ```php
          $client = HttpClient::create([
              'headers' => [
                  'X-API-Key' => 'your_api_key',
              ],
          ]);
          ```
        , correct: true }
      - { value: |
          ```php
          $client->setDefaultHeader('X-API-Key', 'your_api_key');
          ```
        , correct: false }
      - { value: |
          ```php
          $client->request('GET', '...', ['X-API-Key' => 'your_api_key']);
          ```
        , correct: false }
      - { value: "Headers can only be set per request, not globally for a client instance.", correct: false }
    help: |
      Default headers can be set during client creation.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_16
  -
    question: "Which HTTP status code indicates that the requested resource has been temporarily moved to a new URL, and the client should continue to use the original URL for future requests?"
    answers:
      - { value: "302 Found", correct: true }
      - { value: "301 Moved Permanently", correct: false }
      - { value: "303 See Other", correct: false }
      - { value: "307 Temporary Redirect", correct: false }
    help: |
      302 is for temporary redirects.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/302
  -
    question: "What is the purpose of the `partitioned` attribute for HTTP cookies, introduced in Symfony 7.1?"
    answers:
      - { value: "It signals that the cookie should be stored in a partitioned cookie jar, isolated by the top-level site, to prevent cross-site tracking.", correct: true }
      - { value: "It divides the cookie's value into multiple encrypted parts.", correct: false }
      - { value: "It allows the cookie to be shared across different subdomains of the same site.", correct: false }
      - { value: "It indicates that the cookie is only valid for a specific path on the server.", correct: false }
    help: |
      The `partitioned` attribute enhances privacy by isolating cookies.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "When using `HttpClientInterface::stream()`, what does `ChunkInterface::isFirst()` indicate?"
    answers:
      - { value: "It returns `true` if this is the first chunk of the response, typically meaning the headers have just arrived.", correct: true }
      - { value: "It indicates that this is the first request in a series of concurrent requests.", correct: false }
      - { value: "It means the entire response body has been received.", correct: false }
      - { value: "It signifies that the stream has encountered an error.", correct: false }
    help: |
      `isFirst()` is used to identify the initial chunk containing headers.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_54
  -
    question: "Which HTTP status code indicates that the server is currently unable to handle the request due to a temporary overload or maintenance?"
    answers:
      - { value: "503 Service Unavailable", correct: true }
      - { value: "502 Bad Gateway", correct: false }
      - { value: "504 Gateway Timeout", correct: false }
      - { value: "500 Internal Server Error", correct: false }
    help: |
      503 is for temporary server unavailability.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503
  -
    question: "What is the purpose of `Symfony\\Component\\HttpClient\\MockHttpClient::getRequestOptions()` when testing?"
    answers:
      - { value: "It returns an array containing all options (headers, query parameters, body content, etc.) that were used to make the simulated request.", correct: true }
      - { value: "It sets the options for the next mock response.", correct: false }
      - { value: "It retrieves the default options configured for the mock client.", correct: false }
      - { value: "It returns the options that were passed to the `MockHttpClient` constructor.", correct: false }
    help: |
      `getRequestOptions()` allows inspecting the received mock request details.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_95
  -
    question: "When should you use `Symfony\\Component\\HttpClient\\HttplugClient`?"
    answers:
      - { value: "When you need to integrate Symfony HttpClient with a library that expects a PSR-18 `HttpClientInterface` or PSR-7 `RequestFactoryInterface` and `StreamFactoryInterface`.", correct: true }
      - { value: "When you want to use Guzzle as the underlying HTTP client.", correct: false }
      - { value: "When you need to make asynchronous requests with promises.", correct: true }
      - { value: "When you are building a REST API client.", correct: false }
    help: |
      `HttplugClient` provides PSR-18 and PSR-7 compatibility, and supports promises for async requests.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_73
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_75
  -
    question: "Which HTTP status code indicates that the request has been accepted for processing, but the processing has not been completed?"
    answers:
      - { value: "202 Accepted", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: false }
      - { value: "203 Non-Authoritative Information", correct: false }
    help: |
      202 is used for requests that are being processed.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/202
  -
    question: "What is the purpose of the `setCache()` method on a Symfony `Response` object?"
    answers:
      - { value: "It allows setting multiple cache-related HTTP headers (like `max_age`, `public`, `etag`, `last_modified`) in a single method call.", correct: true }
      - { value: "It enables server-side caching for the response.", correct: false }
      - { value: "It clears all existing cache headers from the response.", correct: false }
      - { value: "It configures the Symfony HTTP cache reverse proxy.", correct: false }
    help: |
      `setCache()` provides a convenient way to configure caching.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "When sending a file as part of a multipart/form-data request using Symfony HttpClient, what is the recommended way to include the file content?"
    answers:
      - { value: "Use the `'body'` option with a `fopen()` resource for the file.", correct: true }
      - { value: "Use the `'files'` option with the file path.", correct: false }
      - { value: "Encode the file content as base64 and put it in the `'body'` option.", correct: false }
      - { value: "It's not possible to send files directly with `HttpClient`, only raw strings.", correct: false }
    help: |
      The `body` option can accept a resource (like a file handle).
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_18
  -
    question: "Which HTTP status code indicates that the server successfully processed the request, but the returned information was gathered from a cached copy or a third party, and not from the origin server?"
    answers:
      - { value: "203 Non-Authoritative Information", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "206 Partial Content", correct: false }
      - { value: "304 Not Modified", correct: false }
    help: |
      203 indicates non-authoritative information.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/203
  -
    question: "What is the primary function of `Symfony\\Component\\HttpFoundation\\RequestStack` in a Symfony application?"
    answers:
      - { value: "It manages a stack of `Request` objects, allowing access to the master request and sub-requests in a nested context.", correct: true }
      - { value: "It stores all incoming HTTP requests for logging purposes.", correct: false }
      - { value: "It provides a global singleton instance of the `Request` object.", correct: false }
      - { value: "It is responsible for routing incoming requests to the correct controller.", correct: false }
    help: |
      `RequestStack` is crucial for handling nested requests (e.g., ESI, internal forwarding).
      https://symfony.com/doc/current/components/http_kernel.html#the-request-stack
  -
    question: "Which HTTP status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)?"
    answers:
      - { value: "400 Bad Request", correct: true }
      - { value: "403 Forbidden", correct: false }
      - { value: "404 Not Found", correct: false }
      - { value: "408 Request Timeout", correct: false }
    help: |
      400 is a general client error.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400
  -
    question: "When making a request with Symfony HttpClient, how can you override a default header that was set globally for the client, for a specific request?"
    answers:
      - { value: "By including the header with a new value in the `'headers'` option of the request.", correct: true }
      - { value: "It's not possible to override global headers on a per-request basis.", correct: false }
      - { value: "By setting the header to `null` in the request options.", correct: false }
      - { value: "By using a special `override_headers` option.", correct: false }
    help: |
      Request-level headers take precedence over global ones.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_17
  -
    question: "Which HTTP status code indicates that the resource has been temporarily moved to another URI and the client should use the new URI for future requests, but the method used for the new request should be GET, even if the original request was POST?"
    answers:
      - { value: "303 See Other", correct: true }
      - { value: "302 Found", correct: false }
      - { value: "307 Temporary Redirect", correct: false }
      - { value: "301 Moved Permanently", correct: false }
    help: |
      303 specifically mandates a GET for the redirect.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/303
  -
    question: "What is the primary difference between `HttpClientInterface::getContent()` and `HttpClientInterface::toStream()`?"
    answers:
      - { value: "`getContent()` blocks until the entire response body is downloaded and returns it as a string, while `toStream()` returns a PHP stream resource immediately, allowing for streaming processing.", correct: true }
      - { value: "`getContent()` is for small responses, `toStream()` is for large responses.", correct: false }
      - { value: "`getContent()` returns decoded JSON, `toStream()` returns raw content.", correct: false }
      - { value: "There is no functional difference; they are aliases.", correct: false }
    help: |
      `getContent()` is blocking, `toStream()` is non-blocking and stream-based.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_11
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_46
  -
    question: "Which HTTP status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an upstream server?"
    answers:
      - { value: "502 Bad Gateway", correct: true }
      - { value: "500 Internal Server Error", correct: false }
      - { value: "504 Gateway Timeout", correct: false }
      - { value: "400 Bad Request", correct: false }
    help: |
      502 is specific to proxy/gateway errors.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502
  -
    question: "When using `Symfony\\Component\\HttpClient\\HttpClient`, what is the purpose of the `cancel()` method on the `ResponseInterface` object?"
    answers:
      - { value: "It aborts the ongoing HTTP request and prevents further data transfer for that response.", correct: true }
      - { value: "It clears the response content from memory.", correct: false }
      - { value: "It marks the response as expired in the cache.", correct: false }
      - { value: "It sends a cancellation signal to the remote server.", correct: false }
    help: |
      `cancel()` is used to explicitly stop a request.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_48
  -
    question: "Which HTTP status code indicates that the server does not support the functionality required to fulfill the request?"
    answers:
      - { value: "501 Not Implemented", correct: true }
      - { value: "405 Method Not Allowed", correct: false }
      - { value: "500 Internal Server Error", correct: false }
      - { value: "400 Bad Request", correct: false }
    help: |
      501 means the server lacks the capability.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501
  -
    question: "What is the primary difference between `Response::setMaxAge()` and `Response::setSharedMaxAge()` in Symfony?"
    answers:
      - { value: "`setMaxAge()` sets the `max-age` directive for both private and shared caches, while `setSharedMaxAge()` sets the `s-maxage` directive specifically for shared caches, overriding `max-age` for them.", correct: true }
      - { value: "`setMaxAge()` is for client-side caching, and `setSharedMaxAge()` is for server-side caching.", correct: false }
      - { value: "`setSharedMaxAge()` is deprecated in favor of `setMaxAge()`.", correct: false }
      - { value: "There is no functional difference; they are aliases.", correct: false }
    help: |
      `setSharedMaxAge()` is for proxy caches.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "Which HTTP status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from the upstream server?"
    answers:
      - { value: "504 Gateway Timeout", correct: true }
      - { value: "502 Bad Gateway", correct: false }
      - { value: "408 Request Timeout", correct: false }
      - { value: "503 Service Unavailable", correct: false }
    help: |
      504 is a gateway timeout.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504
  -
    question: "What is the purpose of the `setVary()` method on a Symfony `Response` object?"
    answers:
      - { value: "It sets the `Vary` HTTP header, indicating that the response content varies based on the specified request headers, which helps caches store different versions.", correct: true }
      - { value: "It makes the response content dynamic based on client-side JavaScript.", correct: false }
      - { value: "It changes the HTTP method of the response.", correct: false }
      - { value: "It specifies the accepted content types for the response.", correct: false }
    help: |
      `setVary()` is used for content negotiation and caching.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "Which HTTP status code indicates that the request has been successfully fulfilled and there is no additional content to send in the response payload body?"
    answers:
      - { value: "204 No Content", correct: true }
      - { value: "200 OK", correct: false }
      - { value: "201 Created", correct: false }
      - { value: "304 Not Modified", correct: false }
    help: |
      204 confirms success without a body.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204
  -
    question: "What is the primary function of the `Symfony\\Component\\HttpClient\\UriTemplateHttpClient`?"
    answers:
      - { value: "It allows making HTTP requests where the URL contains placeholders that are replaced with dynamic values from the request options.", correct: true }
      - { value: "It is used for generating URIs based on Symfony routes.", correct: false }
      - { value: "It provides a client for interacting with URI Template APIs.", correct: false }
      - { value: "It automatically encodes all URI parameters.", correct: false }
    help: |
      `UriTemplateHttpClient` expands URI templates.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_36
  -
    question: "Which HTTP status code indicates that the server cannot or will not process the request because the request's content size is larger than the server is willing or able to process?"
    answers:
      - { value: "413 Payload Too Large", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "411 Length Required", correct: false }
      - { value: "507 Insufficient Storage", correct: false }
    help: |
      413 is for oversized payloads.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/413
  -
    question: "What is the purpose of `Symfony\\Component\\HttpClient\\Chunk\\ServerSentEvent::getArrayData()`?"
    answers:
      - { value: "It decodes the content of a Server-Sent Event chunk as a JSON array, assuming the content is in JSON format.", correct: true }
      - { value: "It returns the raw string content of the SSE chunk.", correct: false }
      - { value: "It retrieves the event type of the SSE.", correct: false }
      - { value: "It is used for sending SSEs from the server.", correct: false }
    help: |
      `getArrayData()` is for JSON-formatted SSE content.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_65
  -
    question: "Which HTTP status code indicates that the client should re-send the request with the `If-Match` or `If-Unmodified-Since` header, as the resource has changed since the last request?"
    answers:
      - { value: "412 Precondition Failed", correct: true }
      - { value: "409 Conflict", correct: false }
      - { value: "428 Precondition Required", correct: false }
      - { value: "304 Not Modified", correct: false }
    help: |
      412 is for failed preconditions.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/412
  -
    question: "How can you set the `Expires` HTTP header on a Symfony `Response` object to a specific `DateTimeInterface`?"
    answers:
      - { value: "$response->setExpires($dateTimeObject);", correct: true }
      - { value: "$response->headers->set('Expires', $dateTimeObject->format(DATE_RFC7231));", correct: false }
      - { value: "$response->setCache(['expires' => $dateTimeObject]);", correct: false }
      - { value: "$response->expireAt($dateTimeObject);", correct: false }
    help: |
      The `setExpires()` method directly sets the `Expires` header.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "What is the primary purpose of `Symfony\\Contracts\\HttpClient\\HttpClientInterface`?"
    answers:
      - { value: "It defines the standard contract for making HTTP requests, allowing for dependency injection and easy swapping of underlying HTTP client implementations.", correct: true }
      - { value: "It is the concrete implementation of Symfony's default HTTP client.", correct: false }
      - { value: "It provides a set of utility methods for handling HTTP headers.", correct: false }
      - { value: "It is used exclusively for testing HTTP interactions.", correct: false }
    help: |
      The interface provides a common abstraction.
      https://github.com/symfony/symfony-docs/blob/7.3/http_client.rst#_snippet_66
  -
    question: "Which HTTP status code indicates that the server requires the request to be conditional, typically by including a `If-Match` or `If-Unmodified-Since` header?"
    answers:
      - { value: "428 Precondition Required", correct: true }
      - { value: "412 Precondition Failed", correct: false }
      - { value: "400 Bad Request", correct: false }
      - { value: "401 Unauthorized", correct: false }
    help: |
      428 explicitly states that a precondition is needed.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/428
  -
    question: "What is the purpose of `Symfony\\Component\\HttpFoundation\\Cookie::withPartitioned()` introduced in Symfony 7.1?"
    answers:
      - { value: "It returns a new `Cookie` object with the `Partitioned` attribute set to `true`, indicating it should be stored in a partitioned cookie jar.", correct: true }
      - { value: "It splits a large cookie into multiple smaller cookies.", correct: false }
      - { value: "It encrypts the cookie value for security partitioning.", correct: false }
      - { value: "It sets the domain for the cookie to be partitioned across subdomains.", correct: false }
    help: |
      `withPartitioned()` enables the `Partitioned` cookie attribute.
      https://github.com/symfony/symfony-docs/blob/7.3/components/http_foundation.rst#_snippet_44
  -
    question: "Which HTTP status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions?"
    answers:
      - { value: "422 Unprocessable Content", correct: true }
      - { value: "400 Bad Request", correct: false }
      - { value: "409 Conflict", correct: false }
      - { value: "500 Internal Server Error", correct: false }
    help: |
      422 is for semantic errors in the request body.
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422