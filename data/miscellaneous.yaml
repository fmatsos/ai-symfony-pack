category: Miscellaneous
questions:
  - question: In Symfony, how can you configure a service method call to be ignored
      if its required service dependency is not found in the container?
    answers:
      - value: By prefixing the service ID with `@?` in YAML configuration.
        correct: true
      - value: By using `on-invalid="ignore"` for the argument in XML configuration.
        correct: true
      - value: By using `->ignoreOnInvalid()` on the service definition in PHP
          configuration.
        correct: true
      - value: By using `#[Optional]` attribute on the method parameter.
        correct: false
      - value: "By setting `required: false` for the argument."
        correct: false
    help: To ignore a method call if a dependency is missing, use `@?logger` in
      YAML, `on-invalid="ignore"` in XML, or `->ignoreOnInvalid()` in PHP. This
      removes the method call entirely if the service is not found.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/service_container/optional_dependencies.rst#_snippet_1
  - question: Which of the following correctly configures a service argument to be
      `null` if the referenced service does not exist in the Symfony container?
    answers:
      - value: 'In XML: `<argument type="service" id="logger" on-invalid="null"/>`'
        correct: true
      - value: "In PHP: `service('logger')->nullOnInvalid()`"
        correct: true
      - value: "In YAML: `arguments: ['@?logger']`"
        correct: false
      - value: "In YAML: `arguments: ['@~logger']`"
        correct: false
      - value: 'In XML: `<argument type="service" id="logger" optional="true"/>`'
        correct: false
    help: The `on-invalid="null"` in XML and `nullOnInvalid()` in PHP configuration
      explicitly set the argument to `null` if the service is not found. Using
      `@?` in YAML ignores the method call, it doesn't set to null.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/service_container/optional_dependencies.rst#_snippet_0
  - question: How can you debug and inspect the priorities of registered normalizers
      within the Symfony serializer service using the console?
    answers:
      - value: "`php bin/console debug:container --tag serializer.normalizer`"
        correct: true
      - value: "`php bin/console serializer:debug normalizers`"
        correct: false
      - value: "`php bin/console debug:serializer --type normalizer`"
        correct: false
      - value: "`php bin/console container:debug --tag serializer.normalizer`"
        correct: false
    help: The `debug:container` command with the `--tag` option is used to list
      services associated with a specific tag, including `serializer.normalizer`
      to inspect their priorities.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/dic_tags.rst#_snippet_27
  - question: When defining a configuration tree, how do you handle irregular plural
      forms for XML keys, such as transforming `<child>` elements into a
      `children` array, using `fixXmlConfig()`?
    answers:
      - value: "Pass both the singular and irregular plural form as arguments:
          `$rootNode->fixXmlConfig('child', 'children')`"
        correct: true
      - value: Symfony automatically handles irregular plurals, no special configuration
          is needed.
        correct: false
      - value: Define a custom pluralization rule in `config/packages/config.yaml`.
        correct: false
      - value: Use `->setXmlConfig('child', 'children')` instead.
        correct: false
    help: The `fixXmlConfig()` method can take a second argument to specify the
      correct irregular plural form for XML keys, ensuring proper array
      conversion.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/config/definition.rst#_snippet_25
  - question: When documenting a deprecation in `UPGRADE.md` for a minor Symfony
      version, what is the correct Markdown format for the entry?
    answers:
      - value: |-
          ```markdown
          DependencyInjection
          -------------------

           * Deprecate the `Deprecated` class, use `Replacement` instead
          ```
        correct: true
      - value: |-
          ```markdown
          DependencyInjection
          -------------------

           - `Deprecated` class is now deprecated, use `Replacement`.
          ```
        correct: false
      - value: >-
          ```markdown

          [DEPRECATED] DependencyInjection: `Deprecated` class, use
          `Replacement`.

          ```
        correct: false
      - value: >-
          ```markdown

          Deprecations

          ------------

           * DependencyInjection: Deprecated `Deprecated` class, use `Replacement` instead.
          ```
        correct: false
    help: The specified format for `UPGRADE.md` for minor version deprecations
      includes the component name as a header, followed by a bullet point
      describing the deprecation.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/contributing/code/conventions.rst#_snippet_8
  - question: According to Symfony's code conventions for object relation methods,
      what is the functional distinction between `setXXX()` and `replaceXXX()`
      methods?
    answers:
      - value: "`setXXX()` may add new elements or replace existing ones, while
          `replaceXXX()` only replaces existing elements and throws an exception
          if an unrecognized key is passed."
        correct: true
      - value: "`setXXX()` is for single elements, `replaceXXX()` is for collections."
        correct: false
      - value: "`setXXX()` is for internal use, `replaceXXX()` is for public API."
        correct: false
      - value: "`setXXX()` is deprecated in favor of `replaceXXX()`."
        correct: false
    help: The convention states that `setXXX()` methods are flexible and can add or
      replace, whereas `replaceXXX()` methods are strict, only replacing
      existing items and throwing an exception for unknown keys.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/contributing/code/conventions.rst#_snippet_0
  - question: When implementing `getSubscribedServices()` in a service subscriber,
      how do you mark a service as optional so that its absence does not cause
      an error?
    answers:
      - value: "Prefix the service type with a `?`: `return
          ['?'.LoggerInterface::class];`"
        correct: true
      - value: Use the `#[Optional]` attribute on the service definition.
        correct: false
      - value: Return `null` for the service if it's not available.
        correct: false
      - value: Wrap the service in a `try-catch` block within `getSubscribedServices()`.
        correct: false
    help: By prepending the service type with a `?` in the `getSubscribedServices()`
      array, you declare it as optional. It's crucial to then check for its
      existence using `has()` on the service locator before attempting to
      retrieve it.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/service_container/service_subscribers_locators.rst#_snippet_6
  - question: Which event is dispatched when an exception is thrown at any point
      inside `HttpKernel::handle()` and allows listeners to create an
      appropriate `Response` for the exception?
    answers:
      - value: "`kernel.exception`"
        correct: true
      - value: "`kernel.error`"
        correct: false
      - value: "`kernel.terminate`"
        correct: false
      - value: "`kernel.response`"
        correct: false
    help: The `kernel.exception` event is specifically designed for handling
      exceptions thrown during the request handling process, allowing listeners
      to transform them into HTTP responses.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/http_kernel.rst#_snippet_11
  - question: When injecting services tagged with `app.handler` into
      `HandlerCollection`, how can you specify that the priority of each handler
      should be determined by a `getPriority()` method on the service itself,
      instead of `getDefaultPriority()`?
    answers:
      - value: "Using PHP attributes: `#[TaggedIterator('app.handler',
          defaultPriorityMethod: 'getPriority')]`"
        correct: true
      - value: "Using YAML: `!tagged_iterator { tag: app.handler,
          default_priority_method: getPriority }`"
        correct: true
      - value: 'Using XML: `<argument type="tagged_iterator" tag="app.handler"
          default-priority-method="getPriority"/>`'
        correct: true
      - value: By implementing `PrioritizedHandlerInterface` in the handler services.
        correct: false
      - value: By defining `priority` directly in the tag definition for each service.
        correct: false
    help: The `defaultPriorityMethod` option in `TaggedIterator` attribute,
      `!tagged_iterator` in YAML, and `default-priority-method` in XML allow
      specifying a custom method on the tagged service to determine its
      priority.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/service_container/tags.rst#_snippet_28
  - question: Which Twig filter transforms a string like `dateOfBirth` into `Date of
      birth`?
    answers:
      - value: "`humanize`"
        correct: true
      - value: "`capitalize`"
        correct: false
      - value: "`title`"
        correct: false
      - value: "`format_label`"
        correct: false
    help: The `humanize` filter is designed to convert strings (e.g., PHP
      properties/variables) into a more human-readable format by replacing
      underscores with spaces and capitalizing.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/twig_reference.rst#_snippet_18
  - question: What is the purpose of the `abbr_class` Twig filter?
    answers:
      - value: To generate an `<abbr>` HTML element for a PHP class name, showing the
          FQCN in a tooltip.
        correct: true
      - value: To shorten a PHP class name by removing its namespace.
        correct: false
      - value: To convert a class name to its snake_case equivalent.
        correct: false
      - value: To check if a class exists and is loadable.
        correct: false
    help: The `abbr_class` filter creates an HTML `<abbr>` tag for a PHP class,
      making the fully qualified class name (FQCN) visible on hover.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/twig_reference.rst#_snippet_18
  - question: Which option controls how a Symfony service decorator behaves if the
      decorated service does not exist?
    answers:
      - value: "`decoration_on_invalid`"
        correct: true
      - value: "`on_missing_decorated`"
        correct: false
      - value: "`allow_null_decoration`"
        correct: false
      - value: "`optional_decoration`"
        correct: false
    help: The `decoration_on_invalid` option for service decorators allows
      specifying behavior (`exception`, `ignore`, `null`) when the decorated
      service is missing.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/service_container/service_decoration.rst#_snippet_10
  - question: Which Symfony Workflow event is triggered *after* the subject has
      entered new places and its marking has been updated?
    answers:
      - value: "`workflow.entered`"
        correct: true
      - value: "`workflow.enter`"
        correct: false
      - value: "`workflow.transition`"
        correct: false
      - value: "`workflow.completed`"
        correct: false
    help: The `workflow.entered` event occurs after the subject's marking is updated
      to reflect its new places, indicating it has fully entered them.
      `workflow.enter` is triggered *before* the marking update.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/workflow.rst#_snippet_13
  - question: How can you perform a case-insensitive search for a substring 'B'
      within the string 'abc' using Symfony's String component?
    answers:
      - value: "`u('abc')->ignoreCase()->indexOf('B');`"
        correct: true
      - value: "`u('abc')->indexOf('B', caseSensitive: false);`"
        correct: false
      - value: "`u('abc')->lower()->indexOf('B');`"
        correct: false
      - value: "`u('abc')->contains('B', ignoreCase: true);`"
        correct: false
    help: The `ignoreCase()` method can be chained before other string methods like
      `indexOf()` to perform case-insensitive operations.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_11
  - question: In Symfony's `TranslationDebugCommand`, how can you check if there are
      both missing AND unused translations using its exit codes?
    answers:
      - value: "`if (TranslationDebugCommand::EXIT_CODE_MISSING &
          TranslationDebugCommand::EXIT_CODE_UNUSED)`"
        correct: false
      - value: "`if (TranslationDebugCommand::EXIT_CODE_MISSING |
          TranslationDebugCommand::EXIT_CODE_UNUSED)`"
        correct: true
      - value: "`if (TranslationDebugCommand::EXIT_CODE_MISSING &&
          TranslationDebugCommand::EXIT_CODE_UNUSED)`"
        correct: false
      - value: "`if (TranslationDebugCommand::EXIT_CODE_MISSING +
          TranslationDebugCommand::EXIT_CODE_UNUSED)`"
        correct: false
    help: The bitwise OR operator (`|`) is used to combine the bit masks of the exit
      codes, allowing a single conditional check for multiple conditions.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/translation.rst#_snippet_45
  - question: >-
      Consider the following ICU MessageFormat string:


      ```text

      {gender_of_host, select,
          female {{num_guests, plural, offset:1
              =0    {{host} does not give a party.}
              =1    {{host} invites {guest} to her party.}
              =2    {{host} invites {guest} and one other person to her party.}
              other {{host} invites {guest} and # other people to her party.}
          }}
          male {{num_guests, plural, offset:1
              =0    {{host} does not give a party.}
              =1    {{host} invites {guest} to his party.}
              =2    {{host} invites {guest} and one other person to his party.}
              other {{host} invites {guest} and # other people to his party.}
          }}
          other {{num_guests, plural, offset:1
              =0    {{host} does not give a party.}
              =1    {{host} invites {guest} to their party.}
              =2    {{host} invites {guest} and one other person to their party.}
              other {{host} invites {guest} and # other people to their party.}
          }}
      }

      ```


      Which of the following statements is true about this message format?
    answers:
      - value: It combines the `select` function for gender-based variations and the
          `plural` function for guest count.
        correct: true
      - value: The `offset:1` in the `plural` function means the guest count will be
          displayed as `num_guests - 1`.
        correct: true
      - value: The `other` key is optional within the `select` function.
        correct: false
      - value: The `#` symbol in the `plural` function represents the raw `num_guests`
          value.
        correct: false
    help: This example demonstrates the nesting of `select` and `plural` functions.
      The `offset` in `plural` adjusts the number used for pluralization rules,
      and the `other` key is mandatory in `select` functions. The `#` represents
      the adjusted number.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/formats/message_format.rst#_snippet_8
  - question: Which command is used to run Psalm static analysis on a specific
      Symfony component, such as `Workflow`, locally?
    answers:
      - value: "`$ psalm.phar src/Symfony/Component/Workflow`"
        correct: true
      - value: "`$ php bin/console psalm:run Workflow`"
        correct: false
      - value: "`$ composer psalm src/Symfony/Component/Workflow`"
        correct: false
      - value: "`$ vendor/bin/psalm src/Symfony/Component/Workflow`"
        correct: false
    help: The command `psalm.phar` followed by the path to the component directory
      is used to run Psalm analysis locally.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/contributing/code/pull_requests.rst#_snippet_15
  - question: Given a `HandlerCollection` that injects services tagged with
      `app.handler`, how can you exclude a specific service,
      `App\Handler\Three`, from being injected using PHP attributes?
    answers:
      - value: |-
          ```php
          #[TaggedIterator('app.handler', exclude: ['App\\Handler\\Three'])]
          iterable $handlers
          ```
        correct: true
      - value: |-
          ```php
          #[TaggedIterator('app.handler', except: ['App\\Handler\\Three'])]
          iterable $handlers
          ```
        correct: false
      - value: |-
          ```php
          #[TaggedIterator('app.handler')]
          #[ExcludeService('App\\Handler\\Three')]
          iterable $handlers
          ```
        correct: false
      - value: |-
          ```php
          #[TaggedIterator('app.handler')]
          iterable $handlers exclude 'App\\Handler\\Three'
          ```
        correct: false
    help: The `exclude` option within the `#[TaggedIterator]` attribute allows
      specifying an array of service IDs or class names to be excluded from the
      injected collection.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/service_container/tags.rst#_snippet_23
  - question: When dispatching a `GenericEvent` in Symfony, how do you access the
      original subject associated with the event within a listener?
    answers:
      - value: Using `$event->getSubject()`
        correct: true
      - value: Using `$event->getData()`
        correct: false
      - value: Using `$event->getPayload()`
        correct: false
      - value: Using `$event->getOriginal()`
        correct: false
    help: The `getSubject()` method of the
      `Symfony\Component\EventDispatcher\GenericEvent` class is used to retrieve
      the subject that was passed during the event's construction.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/event_dispatcher/generic_event.rst#_snippet_0
  - question: Which `AbstractController` helper method is used to retrieve the value
      of a configuration parameter?
    answers:
      - value: "`getParameter(string $name)`"
        correct: true
      - value: "`getConfig(string $name)`"
        correct: false
      - value: "`getParam(string $name)`"
        correct: false
      - value: "`fetchParameter(string $name)`"
        correct: false
    help: The `getParameter()` method in `AbstractController` provides access to
      application configuration parameters.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller.rst#_snippet_34
  - question: Which `AbstractController` helper method is used to create and return
      a `JsonResponse` object from given data, allowing specification of status,
      headers, and serialization context?
    answers:
      - value: "`json(mixed $data, int $status = 200, array $headers = [], array
          $context = [])`"
        correct: true
      - value: "`jsonResponse(mixed $data, int $status = 200, array $headers = [])`"
        correct: false
      - value: "`serialize(mixed $data, string $format = 'json', array $context = [])`"
        correct: false
      - value: "`createJsonResponse(mixed $data, int $status = 200)`"
        correct: false
    help: The `json()` method is a convenient helper in `AbstractController` for
      returning JSON responses, automatically handling serialization and
      response creation.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller.rst#_snippet_34
  - question: When using the Symfony Serializer, how can you collect multiple type
      mismatch exceptions during denormalization instead of throwing the first
      one encountered?
    answers:
      - value: Set the context option
          `DenormalizerInterface::COLLECT_DENORMALIZATION_ERRORS` to `true`.
        correct: true
      - value: Catch `ValidationException` and iterate through its violations.
        correct: false
      - value: Configure the serializer with an `ErrorCollectingNormalizer`.
        correct: false
      - value: Enable the `partial_denormalization` flag in `serializer.yaml`.
        correct: false
    help: The `COLLECT_DENORMALIZATION_ERRORS` context option, when set to `true`,
      makes the serializer collect all denormalization errors into a
      `PartialDenormalizationException`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/serializer.rst#_snippet_49
  - question: How can you configure the `ObjectNormalizer` to skip properties with
      `null` values during the normalization process using the Symfony
      Serializer?
    answers:
      - value: Set `AbstractObjectNormalizer::SKIP_NULL_VALUES` to `true` in the
          normalization context.
        correct: true
      - value: Use the `#[IgnoreNull]` attribute on properties.
        correct: false
      - value: "Set `skip_null_values: true` in the serializer configuration."
        correct: false
      - value: Implement `DenormalizableInterface` and handle nulls manually.
        correct: false
    help: The `AbstractObjectNormalizer::SKIP_NULL_VALUES` context option is used to
      instruct the `ObjectNormalizer` to exclude properties that have `null`
      values from the normalized output.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/serializer.rst#_snippet_46
  - question: Which console command allows you to list all registered cache warmers
      in your Symfony application?
    answers:
      - value: "`php bin/console debug:container --tag=kernel.cache_warmer`"
        correct: true
      - value: "`php bin/console cache:warmers:list`"
        correct: false
      - value: "`php bin/console debug:cache --warmers`"
        correct: false
      - value: "`php bin/console container:debug --tag=cache_warmer`"
        correct: false
    help: The `debug:container` command with the `--tag` option is used to list all
      services tagged with `kernel.cache_warmer`, which are the registered cache
      warmers.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/dic_tags.rst#_snippet_12
  - question: When documenting the *consequences* of a deprecation (i.e., its
      removal) in `UPGRADE.md` for the *next major version*, what is the correct
      Markdown format?
    answers:
      - value: |-
          ```markdown
          DependencyInjection
          -------------------

           * Remove the `Deprecated` class, use `Replacement` instead
          ```
        correct: true
      - value: |-
          ```markdown
          Deprecations Removed
          --------------------

           * DependencyInjection: `Deprecated` class removed.
          ```
        correct: false
      - value: |-
          ```markdown
          [REMOVED] DependencyInjection: `Deprecated` class.
          ```
        correct: false
      - value: |-
          ```markdown
          Breaking Changes
          ----------------

           * The `Deprecated` class has been removed. Use `Replacement`.
          ```
        correct: false
    help: The format for documenting removals in `UPGRADE.md` for the next major
      version is similar to deprecations, but explicitly states 'Remove' or
      'Removed'.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/contributing/code/conventions.rst#_snippet_9
  - question: What is the primary purpose of the `kernel.cache_warmer` service tag
      in Symfony?
    answers:
      - value: To initialize any cache that will be needed by the application and
          prevent the first user from a significant 'cache hit'.
        correct: true
      - value: To clear the application's cache during deployment.
        correct: false
      - value: To define services that automatically refresh cached data at runtime.
        correct: false
      - value: To mark services that can be optionally cached by the container.
        correct: false
    help: The `kernel.cache_warmer` tag is used for services that pre-populate or
      warm up the cache, improving the performance for the first request.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/dic_tags.rst#_snippet_13
  - question: Which of the following statements accurately describes the recommended
      way to create an event listener in Symfony 7?
    answers:
      - value: Implement `Symfony\Component\EventDispatcher\EventSubscriberInterface`
          and tag the service with `kernel.event_subscriber`.
        correct: true
      - value: Implement `Symfony\Component\EventDispatcher\EventListenerInterface` and
          tag the service with `kernel.event_listener`.
        correct: false
      - value: Create a service and define its event methods in `services.yaml` with the
          `event` key.
        correct: false
      - value: Extend `AbstractEventListener` and override the `onEvent` method.
        correct: false
    help: While `kernel.event_listener` exists, `kernel.event_subscriber`
      (implementing `EventSubscriberInterface`) is the recommended approach as
      it allows a single class to subscribe to multiple events.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/dic_tags.rst#_snippet_13
  - question: Which HTTP method is primarily used by APIs for modifying existing
      resources on the server?
    answers:
      - value: PUT/PATCH
        correct: true
      - value: POST
        correct: false
      - value: GET
        correct: false
      - value: DELETE
        correct: false
    help: PUT and PATCH methods are standard HTTP verbs used for updating resources,
      with PATCH typically for partial updates and PUT for complete replacement.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/introduction/http_fundamentals.rst#_snippet_1
  - question: How does `fixXmlConfig()` normalize XML configuration where a singular
      element name like `<extension>` should be treated as an array named
      `extensions`?
    answers:
      - value: It automatically pluralizes the singular key to create the array key.
        correct: true
      - value: It requires a manual mapping from singular to plural in the
          configuration.
        correct: false
      - value: It only works for predefined XML element names.
        correct: false
      - value: It converts all singular XML elements into arrays by default.
        correct: false
    help: The `fixXmlConfig()` method automatically handles the pluralization of the
      given singular key to correctly map XML elements to an array in the
      configuration tree.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/config/definition.rst#_snippet_24
  - question: How can you customize the visual separator used between preferred
      choices and normal choices when rendering a Symfony form field in Twig?
    answers:
      - value: Pass the `separator` option directly to the `form_widget` function.
        correct: true
      - value: Define the separator in the form type's `configureOptions()` method.
        correct: false
      - value: Override the `choice_widget_separator` block in a custom Twig template.
        correct: false
      - value: Set a global Twig variable `form_choice_separator`.
        correct: false
    help: The `separator` option can be passed as part of the options array to
      `form_widget()` to customize the divider between preferred and normal
      choices.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/forms/types/entity.rst#_snippet_9
  - question: In a Symfony event listener, how do you check if the current request
      being handled is the main request (not a sub-request)?
    answers:
      - value: "`if ($event->isMainRequest()) { ... }`"
        correct: true
      - value: "`if ($event->getRequestType() === HttpKernelInterface::MAIN_REQUEST) {
          ... }`"
        correct: true
      - value: "`if (!$event->isSubRequest()) { ... }`"
        correct: false
      - value: "`if ($event->getRequest()->isMain()) { ... }`"
        correct: false
    help: The `isMainRequest()` method on `RequestEvent` (which extends
      `KernelEvent`) is the direct way to check if the event pertains to the
      main request. Alternatively, comparing `getRequestType()` to
      `HttpKernelInterface::MAIN_REQUEST` achieves the same.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/http_kernel.rst#_snippet_16
      and
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/events.rst#_snippet_0
  - question: Given the string `abcdeabcde`, what will
      `u('abcdeabcde')->indexOf('c', -4)` return?
    answers:
      - value: "7"
        correct: true
      - value: "2"
        correct: false
      - value: "null"
        correct: false
      - value: "6"
        correct: false
    help: The `indexOf()` method supports a negative offset, which means the search
      starts from that many characters from the end of the string. In this case,
      -4 means starting 4 characters from the end, which is at index 6 ('a').
      The first 'c' found from that point is at index 7.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_19
  - question: Given the string `abcdeabcde`, what will
      `u('abcdeabcde')->indexOfLast('c')` return?
    answers:
      - value: "7"
        correct: true
      - value: "2"
        correct: false
      - value: "null"
        correct: false
      - value: "8"
        correct: false
    help: The `indexOfLast()` method returns the position of the last occurrence of
      the substring. In 'abcdeabcde', the last 'c' is at index 7.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_19
  - question: In Symfony documentation, how are PHP code examples differentiated
      between those using full Symfony framework features and those using
      standalone Symfony components?
    answers:
      - value: "Using `.. code-block:: php-symfony` and `.. code-block:: php-standalone`
          within a `configuration-block`."
        correct: true
      - value: Using separate `php-framework` and `php-component` directives.
        correct: false
      - value: By adding comments at the top of the code snippet indicating the context.
        correct: false
      - value: There is no specific differentiation; context is inferred.
        correct: false
    help: The `php-symfony` and `php-standalone` code block types within a
      `configuration-block` are used to provide context-specific PHP examples.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/contributing/documentation/format.rst#_snippet_2
  - question: Which argument resolver automatically queries for a Doctrine entity
      based on route parameters and injects it into a controller method?
    answers:
      - value: "`Symfony\\Bridge\\Doctrine\\ArgumentResolver\\EntityValueResolver`"
        correct: true
      - value: "`Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\Doctrine\
          EntityResolver`"
        correct: false
      - value: "`Symfony\\Component\\Routing\\ArgumentResolver\\EntityResolver`"
        correct: false
      - value: "`Symfony\\Bundle\\FrameworkBundle\\Controller\\ArgumentResolver\\Doctri\
          neResolver`"
        correct: false
    help: The `EntityValueResolver` from `Symfony\Bridge\Doctrine` is responsible
      for automatically fetching Doctrine entities based on route parameters.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller/value_resolver.rst#_snippet_5
  - question: Which method of the `SessionMetadataBag` object returns the Unix
      timestamp when the session was last accessed?
    answers:
      - value: "`getLastUsed()`"
        correct: true
      - value: "`getAccessedTime()`"
        correct: false
      - value: "`getLastActivity()`"
        correct: false
      - value: "`getUpdateTime()`"
        correct: false
    help: The `getLastUsed()` method provides the timestamp of the last session
      access.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/session.rst#_snippet_18
  - question: Which method of the `SessionMetadataBag` object returns the Unix
      timestamp when the session was created?
    answers:
      - value: "`getCreated()`"
        correct: true
      - value: "`getCreationTime()`"
        correct: false
      - value: "`getStartTime()`"
        correct: false
      - value: "`getInitTime()`"
        correct: false
    help: The `getCreated()` method provides the timestamp of the session's
      creation.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/session.rst#_snippet_18
  - question: What is the purpose of the `isMainRequest()` method available on
      `Symfony\Component\HttpKernel\Event\KernelEvent`?
    answers:
      - value: To determine if the current request is the primary request being handled
          by the kernel, as opposed to a sub-request.
        correct: true
      - value: To check if the request originated from the main application entry point
          (`index.php`).
        correct: false
      - value: To verify if the request has a valid session and is authenticated.
        correct: false
      - value: To identify if the request is an AJAX request.
        correct: false
    help: The `isMainRequest()` method is crucial for event listeners to apply logic
      selectively, ensuring certain operations only occur for the primary
      request, not for embedded requests (e.g., ESI, HZ).
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/events.rst#_snippet_0
  - question: How do you dispatch a custom event, such as `OrderPlacedEvent`, in Symfony?
    answers:
      - value: Create an instance of the custom event class and pass it to
          `$dispatcher->dispatch($event);`
        correct: true
      - value: Call `$dispatcher->dispatch('order.placed', $order);`
        correct: false
      - value: Use `$dispatcher->trigger(new OrderPlacedEvent($order));`
        correct: false
      - value: Define the event in `services.yaml` and inject it.
        correct: false
    help: To dispatch a custom event, instantiate your custom event class (e.g.,
      `OrderPlacedEvent`) with any necessary data, and then pass that event
      object to the `dispatch()` method of the event dispatcher.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/event_dispatcher.rst#_snippet_8
  - question: Which of the following is a valid cron-like alias for recurring
      messages in the Symfony Scheduler?
    answers:
      - value: "`#midnight`"
        correct: true
      - value: "`#daily`"
        correct: false
      - value: "`#hourly`"
        correct: false
      - value: "`#weekly`"
        correct: false
    help: The Symfony Scheduler supports several cron-like aliases, including
      `#midnight`, `#annually@midnight`, `#yearly`, and `#yearly@midnight`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/scheduler.rst#_snippet_8
  - question: In ICU MessageFormat, what is the purpose of the `select` function?
    answers:
      - value: To choose different message strings based on a variable's value, similar
          to a switch statement.
        correct: true
      - value: To select a random message from a predefined list.
        correct: false
      - value: To concatenate multiple message parts into a single string.
        correct: false
      - value: To filter out unwanted characters from a message.
        correct: false
    help: The `select` function in ICU MessageFormat allows conditional message
      selection based on a given variable's value, enabling gender-specific or
      other context-dependent translations. The `other` key is required as a
      fallback.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/formats/message_format.rst#_snippet_2
  - question: Which PHP one-liner can be used to generate a 40-character hexadecimal
      string suitable for the `ref` field in Symfony Flex recipes?
    answers:
      - value: "`echo bin2hex(random_bytes(20));`"
        correct: true
      - value: "`echo uniqid('', true);`"
        correct: false
      - value: "`echo md5(random_bytes(20));`"
        correct: false
      - value: "`echo sha1(time());`"
        correct: false
    help: The `bin2hex(random_bytes(20))` generates a 40-character hexadecimal
      string (20 bytes * 2 hex chars/byte), which is suitable for the `ref`
      field.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/setup/flex_private_recipes.rst#_snippet_2
  - question: How can you prevent the Symfony Serializer from normalizing specific
      attributes (e.g., 'age') of an object by passing options in the
      serialization context?
    answers:
      - value: Pass `[AbstractNormalizer::IGNORED_ATTRIBUTES => ['age']]` in the context
          array.
        correct: true
      - value: Pass `['skip_attributes' => ['age']]` in the context array.
        correct: false
      - value: Use `#[Ignore]` attribute on the 'age' property.
        correct: false
      - value: Configure a custom normalizer to exclude 'age'.
        correct: false
    help: The `AbstractNormalizer::IGNORED_ATTRIBUTES` context option allows
      specifying an array of attribute names to be excluded during
      normalization.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/serializer.rst#_snippet_18
  - question: Which method of the Symfony Finder component allows you to exclude
      files that contain a specific string pattern?
    answers:
      - value: "`notContains()`"
        correct: true
      - value: "`withoutContent()`"
        correct: false
      - value: "`excludeContent()`"
        correct: false
      - value: "`filterContent()`"
        correct: false
    help: The `notContains()` method is used to filter out files whose content
      matches the given string or regular expression.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/finder.rst#_snippet_11
  - question: When registering a custom Twig extension as a service in Symfony, what
      tag must be applied to the service definition?
    answers:
      - value: "`twig.extension`"
        correct: true
      - value: "`twig.loader`"
        correct: false
      - value: "`twig.runtime`"
        correct: false
      - value: "`app.twig_extension`"
        correct: false
    help: Services that implement `Twig\Extension\ExtensionInterface` (or extend
      `AbstractExtension`) must be tagged with `twig.extension` to be registered
      with Twig.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/dic_tags.rst#_snippet_36
  - question: How do you register a custom cache warmer service in Symfony using PHP
      configuration?
    answers:
      - value: |-
          ```php
          $container
              ->register(MyCustomWarmer::class)
              ->addTag('kernel.cache_warmer', ['priority' => 0])
          ;
          ```
        correct: true
      - value: |-
          ```php
          $container->services()
              ->set(MyCustomWarmer::class)
              ->tag('cache_warmer')
          ;
          ```
        correct: false
      - value: |-
          ```php
          $container->addCacheWarmer(MyCustomWarmer::class);
          ```
        correct: false
      - value: |-
          ```php
          #[AsCacheWarmer(priority: 0)]
          class MyCustomWarmer implements CacheWarmerInterface
          {
              // ...
          }
          ```
        correct: false
    help: To register a cache warmer, the service must be registered and then tagged
      with `kernel.cache_warmer` using `addTag()`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/dic_tags.rst#_snippet_11
  - question: How can you define the priority of a service programmatically when
      autoconfiguring tags, by implementing a static method within the service
      class?
    answers:
      - value: "By implementing a static `getDefaultPriority(): int` method."
        correct: true
      - value: "By implementing `getPriority(): int` method."
        correct: false
      - value: By defining a `PRIORITY` constant in the class.
        correct: false
      - value: "By using the `#[Priority(value: 0)]` attribute."
        correct: false
    help: The `getDefaultPriority()` static method allows a service to define its
      default priority when autoconfigured with tags.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/service_container/tags.rst#_snippet_27
  - question: When registering a custom translation loader service in Symfony, what
      is the purpose of the `alias` option within the `translation.loader` tag?
    answers:
      - value: It defines a custom file format suffix that the loader will handle (e.g.,
          `.bin`).
        correct: true
      - value: It provides a unique identifier for the translation loader service.
        correct: false
      - value: It specifies the locale that the loader is responsible for.
        correct: false
      - value: It sets the priority for the translation loader.
        correct: false
    help: The `alias` option for the `translation.loader` tag is crucial as it tells
      Symfony which file extension (e.g., `.bin` for an alias 'bin') your custom
      loader is responsible for.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/dic_tags.rst#_snippet_28
  - question: Which of the following methods can be used to sort results obtained
      from the Symfony Finder component?
    answers:
      - value: "`sortByName()`"
        correct: true
      - value: "`sortByExtension()`"
        correct: true
      - value: "`sortBySize()`"
        correct: true
      - value: "`sortByCreationTime()`"
        correct: false
      - value: "`sortByPath()`"
        correct: false
    help: The Finder component provides several sorting methods, including
      `sortByName()`, `sortByExtension()`, `sortBySize()`, `sortByType()`,
      `sortByAccessedTime()`, `sortByChangedTime()`, and `sortByModifiedTime()`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/finder.rst#_snippet_19
  - question: How can you sort Symfony Finder results by modified time in descending
      order (newest first)?
    answers:
      - value: "`$finder->sortByModifiedTime()->reverseSorting();`"
        correct: true
      - value: "`$finder->sortByModifiedTime('desc');`"
        correct: false
      - value: "`$finder->sort(function (SplFileInfo $a, SplFileInfo $b) { return
          $b->getMTime() <=> $a->getMTime(); });`"
        correct: true
      - value: "`$finder->sortByModifiedTime()->desc();`"
        correct: false
    help: You can chain `reverseSorting()` after a sorting method to reverse the
      order. Alternatively, a custom `sort()` closure can be used for more
      complex sorting logic, including descending order.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/finder.rst#_snippet_19
  - question: Which of the following `FormEvents` constants is associated with
      'Model data'?
    answers:
      - value: "`FormEvents::PRE_SET_DATA`"
        correct: true
      - value: "`FormEvents::POST_SET_DATA`"
        correct: true
      - value: "`FormEvents::PRE_SUBMIT`"
        correct: false
      - value: "`FormEvents::SUBMIT`"
        correct: false
    help: Both `PRE_SET_DATA` and `POST_SET_DATA` events provide access to the
      form's model data. `PRE_SUBMIT` provides request data, `SUBMIT` provides
      normalized data, and `POST_SUBMIT` provides view data.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/form/events.rst#_snippet_6
  - question: "When using the Symfony String component, what is the result of
      `u('hello world')->before('o', includeNeedle: true)`?"
    answers:
      - value: "`'hello'`"
        correct: true
      - value: "`'hell'`"
        correct: false
      - value: "`'hello '`"
        correct: false
      - value: "`'o world'`"
        correct: false
    help: The `before()` method returns the part of the string before the first
      occurrence of the needle. When `includeNeedle` is `true`, the needle
      itself is included in the returned substring. The first 'o' is at index 4,
      so 'hello' is returned.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_14
  - question: "When using the Symfony String component, what is the result of
      `u('hello world')->after('o', includeNeedle: true)`?"
    answers:
      - value: "`'o world'`"
        correct: true
      - value: "`' world'`"
        correct: false
      - value: "`'world'`"
        correct: false
      - value: "`'hello'`"
        correct: false
    help: The `after()` method returns the part of the string after the first
      occurrence of the needle. When `includeNeedle` is `true`, the needle
      itself is included in the returned substring. The first 'o' is at index 4,
      so 'o world' is returned.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_14
  - question: Which `AbstractController` helper method is used to send HTTP 103
      Early Hints to the client for preloading resources, requiring SAPI support
      like FrankenPHP?
    answers:
      - value: "`sendEarlyHints(array $links)`"
        correct: true
      - value: "`preload(array $links)`"
        correct: false
      - value: "`earlyHints(array $links)`"
        correct: false
      - value: "`sendPreloadHeaders(array $links)`"
        correct: false
    help: The `sendEarlyHints()` method allows sending HTTP 103 Early Hints, which
      can improve perceived performance by allowing the client to start
      preloading resources. It requires specific SAPI support.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller.rst#_snippet_34
  - question: Which `AbstractController` helper method is used to create and return
      a `BinaryFileResponse` for serving files?
    answers:
      - value: "`file(string|Symfony\\Component\\HttpFoundation\\File\\File $file,
          string $fileName = null, string $disposition = 'attachment')`"
        correct: true
      - value: "`download(string $path, string $fileName = null)`"
        correct: false
      - value: "`streamFile(string $path, string $disposition = 'attachment')`"
        correct: false
      - value: "`binaryResponse(string $path, string $fileName = null)`"
        correct: false
    help: The `file()` method is a convenient way to create `BinaryFileResponse`
      objects for serving files, with options for filename and disposition.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller.rst#_snippet_34
  - question: Which argument resolver is responsible for injecting the object
      representing the current logged-in security token, and what type-hint does
      it require?
    answers:
      - value: "`Symfony\\Component\\Security\\Http\\Controller\\SecurityTokenValueReso\
          lver`, requiring `TokenInterface`."
        correct: true
      - value: "`Symfony\\Component\\Security\\Http\\Controller\\UserValueResolver`,
          requiring `TokenInterface`."
        correct: false
      - value: "`Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\To\
          kenStorageInterface`, requiring `TokenInterface`."
        correct: false
      - value: "`Symfony\\Component\\Security\\Core\\Security`, requiring
          `TokenInterface`."
        correct: false
    help: The `SecurityTokenValueResolver` injects the security token, and it
      requires type-hinting with `TokenInterface` or a class extending it.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller/value_resolver.rst#_snippet_5
  - question: Which argument resolver verifies if request data is an array and adds
      all elements to the argument list, making them available to the last
      (variadic) argument of the action?
    answers:
      - value: "`Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\Variadic\
          ValueResolver`"
        correct: true
      - value: "`Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\ArrayVal\
          ueResolver`"
        correct: false
      - value: "`Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\Collecti\
          onValueResolver`"
        correct: false
      - value: "`Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestD\
          ataResolver`"
        correct: false
    help: The `VariadicValueResolver` is specifically designed to handle variadic
      arguments in controller actions by injecting all elements from an array in
      the request data.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller/value_resolver.rst#_snippet_5
  - question: To inject the current logged-in user object into a controller method,
      which type-hint is required, and what attribute might be needed for a
      custom User class?
    answers:
      - value: "`UserInterface` or custom `User` class; `#[CurrentUser]` attribute for
          custom `User` class."
        correct: true
      - value: "`UserInterface` or custom `User` class; `#[InjectUser]` attribute for
          custom `User` class."
        correct: false
      - value: "`SecurityUserInterface` or custom `User` class; `#[AsUser]` attribute
          for custom `User` class."
        correct: false
      - value: Only `UserInterface` is supported for direct injection.
        correct: false
    help: The `UserValueResolver` injects the current user. It requires type-hinting
      `UserInterface` or your custom `User` class, and if it's a custom class,
      the `#[CurrentUser]` attribute is necessary.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller/value_resolver.rst#_snippet_5
  - question: What is the purpose of the `folded()` method in Symfony's String component?
    answers:
      - value: It returns a string that can be used for case-insensitive comparisons,
          handling various language complexities.
        correct: true
      - value: It converts a string to its lowercase equivalent.
        correct: false
      - value: It removes all non-alphanumeric characters from a string.
        correct: false
      - value: It shortens a string by folding long lines.
        correct: false
    help: The `folded()` method provides a 'folded' version of the string, which is
      suitable for robust case-insensitive comparisons across different
      languages and character sets.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_10
  - question: "How can you convert a string like `Foo: Bar-baz.` to `fooBarBaz`
      using Symfony's String component?"
    answers:
      - value: "`u('Foo: Bar-baz.')->camel()`"
        correct: true
      - value: "`u('Foo: Bar-baz.')->lower()->camel()`"
        correct: false
      - value: "`u('Foo: Bar-baz.')->pascal()->lowerFirst()`"
        correct: false
      - value: "`u('Foo: Bar-baz.')->toCamelCase()`"
        correct: false
    help: The `camel()` method directly converts a string to camelCase, handling
      various separators.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_10
  - question: "How can you convert a string like `Foo: Bar-baz.` to `foo_bar_baz`
      using Symfony's String component?"
    answers:
      - value: "`u('Foo: Bar-baz.')->snake()`"
        correct: true
      - value: "`u('Foo: Bar-baz.')->lower()->replace(' ', '_')`"
        correct: false
      - value: "`u('Foo: Bar-baz.')->toSnakeCase()`"
        correct: false
      - value: "`u('Foo: Bar-baz.')->underscore()`"
        correct: false
    help: The `snake()` method converts a string to snake_case, handling various
      separators and casing.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_10
  - question: What is the correct way to register a custom Twig filter named `price`
      that uses the `formatPrice` method of `App\Twig\AppExtension`?
    answers:
      - value: |-
          ```php
          // src/Twig/AppExtension.php
          use Twig\\TwigFilter;

          class AppExtension extends AbstractExtension
          {
              public function getFilters(): array
              {
                  return [
                      new TwigFilter('price', [$this, 'formatPrice']),
                  ];
              }
              // ...
          }
          ```
        correct: true
      - value: |-
          ```php
          // src/Twig/AppExtension.php
          class AppExtension extends AbstractExtension
          {
              protected function registerFilters(): array
              {
                  return ['price' => 'formatPrice'];
              }
              // ...
          }
          ```
        correct: false
      - value: |-
          ```php
          // src/Twig/AppExtension.php
          #[TwigFilter('price')]
          public function formatPrice(float $number): string
          {
              // ...
          }
          ```
        correct: false
      - value: >-
          ```php

          // config/services.yaml

          services:
              App\\Twig\\AppExtension:
                  calls:
                      - [addFilter, ['price', '@App\\Twig\\AppExtension::formatPrice']]
          ```
        correct: false
    help: Custom Twig filters are registered by overriding the `getFilters()` method
      in a Twig extension class and returning an array of `TwigFilter`
      instances.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/templates.rst#_snippet_54
  - question: Which event's data is 'Request data' in the Symfony Form component
      lifecycle?
    answers:
      - value: "`FormEvents::PRE_SUBMIT`"
        correct: true
      - value: "`FormEvents::SUBMIT`"
        correct: false
      - value: "`FormEvents::POST_SUBMIT`"
        correct: false
      - value: "`FormEvents::PRE_SET_DATA`"
        correct: false
    help: The `PRE_SUBMIT` event is triggered before any data is bound to the form,
      providing access to the raw request data.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/form/events.rst#_snippet_6
  - question: Which event's data is 'Normalized data' in the Symfony Form component
      lifecycle?
    answers:
      - value: "`FormEvents::SUBMIT`"
        correct: true
      - value: "`FormEvents::PRE_SUBMIT`"
        correct: false
      - value: "`FormEvents::POST_SUBMIT`"
        correct: false
      - value: "`FormEvents::POST_SET_DATA`"
        correct: false
    help: The `SUBMIT` event provides access to the data after it has been
      normalized by the form's data transformers.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/form/events.rst#_snippet_6
  - question: Which event's data is 'View data' in the Symfony Form component lifecycle?
    answers:
      - value: "`FormEvents::POST_SUBMIT`"
        correct: true
      - value: "`FormEvents::SUBMIT`"
        correct: false
      - value: "`FormEvents::PRE_SUBMIT`"
        correct: false
      - value: "`FormEvents::PRE_SET_DATA`"
        correct: false
    help: The `POST_SUBMIT` event provides access to the data in its 'view' format,
      which is the format used for rendering the form.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/form/events.rst#_snippet_6
  - question: What is the purpose of the
      `Symfony\Component\HttpKernel\Event\ExceptionEvent::getThrowable()`
      method?
    answers:
      - value: To access the original exception that was thrown during the request
          handling.
        correct: true
      - value: To retrieve the HTTP status code associated with the exception.
        correct: false
      - value: To get the response object generated from the exception.
        correct: false
      - value: To check if the exception has been handled.
        correct: false
    help: Listeners for the `kernel.exception` event use `getThrowable()` to obtain
      the actual `Throwable` object that caused the event.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/http_kernel.rst#_snippet_11
  - question: Which listener is responsible for injecting JavaScript into the page
      to display the web debug toolbar in the `dev` environment?
    answers:
      - value: "`Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarList\
          ener`"
        correct: true
      - value: "`Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener`"
        correct: false
      - value: "`Symfony\\Bundle\\FrameworkBundle\\EventListener\\DebugToolbarListener`"
        correct: false
      - value: "`Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener`"
        correct: false
    help: The `WebDebugToolbarListener` is specifically designed to inject the
      necessary JavaScript for the Web Debug Toolbar into the response.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/http_kernel.rst#_snippet_11
  - question: Which listener serializes the current user's information into the
      session for persistence across requests?
    answers:
      - value: "`Symfony\\Component\\Security\\Http\\Firewall\\ContextListener`"
        correct: true
      - value: "`Symfony\\Component\\Security\\Http\\Firewall\\SessionListener`"
        correct: false
      - value: "`Symfony\\Component\\Security\\Http\\Firewall\\UserPersistenceListener`"
        correct: false
      - value: "`Symfony\\Bundle\\SecurityBundle\\EventListener\\AuthenticationListener\
          `"
        correct: false
    help: The `ContextListener` plays a crucial role in maintaining user
      authentication by serializing user data into the session.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/http_kernel.rst#_snippet_11
  - question: Which core listener on `kernel.exception` converts thrown exceptions
      into appropriate HTTP responses, such as a 404 page for a
      `NotFoundHttpException`?
    answers:
      - value: "`Symfony\\Component\\HttpKernel\\EventListener\\ErrorListener`"
        correct: true
      - value: "`Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener`"
        correct: false
      - value: "`Symfony\\Bundle\\FrameworkBundle\\EventListener\\HttpExceptionListener\
          `"
        correct: false
      - value: "`Symfony\\Component\\HttpKernel\\EventListener\\ResponseExceptionListen\
          er`"
        correct: false
    help: The `ErrorListener` is a fundamental component of Symfony's error
      handling, transforming exceptions into user-friendly HTTP responses.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/http_kernel.rst#_snippet_11
  - question: What is the purpose of the
      `Symfony\Component\HttpKernel\Event\KernelEvent::getRequestType()` method?
    answers:
      - value: It returns the type of the request, either
          `HttpKernelInterface::MAIN_REQUEST` or
          `HttpKernelInterface::SUB_REQUEST`.
        correct: true
      - value: It returns the HTTP method of the request (e.g., GET, POST).
        correct: false
      - value: It returns the content type of the request.
        correct: false
      - value: It returns the format of the request (e.g., html, json).
        correct: false
    help: The `getRequestType()` method allows listeners to differentiate between
      main requests and sub-requests, which is important for conditional logic
      in event handling.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/events.rst#_snippet_0
  - question: What is the purpose of the
      `Symfony\Component\HttpKernel\Event\KernelEvent::getKernel()` method?
    answers:
      - value: It returns the Kernel instance handling the request.
        correct: true
      - value: It returns the application's service container.
        correct: false
      - value: It returns the current environment of the application (e.g., 'dev',
          'prod').
        correct: false
      - value: It returns the root directory of the application.
        correct: false
    help: The `getKernel()` method provides access to the `HttpKernelInterface`
      instance that is currently processing the request.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/events.rst#_snippet_0
  - question: What is the purpose of the
      `Symfony\Component\HttpKernel\Event\KernelEvent::getRequest()` method?
    answers:
      - value: It returns the current `Request` object being handled.
        correct: true
      - value: It returns the `Response` object generated for the current request.
        correct: false
      - value: It returns the `RequestStack` service.
        correct: false
      - value: It returns the URL of the current request.
        correct: false
    help: The `getRequest()` method provides direct access to the
      `Symfony\Component\HttpFoundation\Request` object associated with the
      current event.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/reference/events.rst#_snippet_0
  - question: Which of the following methods can be used to change the case of a
      string using Symfony's String component?
    answers:
      - value: "`lower()`"
        correct: true
      - value: "`upper()`"
        correct: true
      - value: "`title()`"
        correct: true
      - value: "`camel()`"
        correct: true
      - value: "`snake()`"
        correct: true
      - value: "`capitalize()`"
        correct: false
      - value: "`pascal()`"
        correct: false
    help: The Symfony String component offers `lower()`, `upper()`, `title()`,
      `camel()`, and `snake()` for various case transformations. PascalCase can
      be achieved by chaining `camel()->title()`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_10
  - question: "How can you achieve 'PascalCase' (e.g., `FooBarBaz`) from a string
      like `Foo: Bar-baz.` using Symfony's String component?"
    answers:
      - value: "`u('Foo: Bar-baz.')->camel()->title()`"
        correct: true
      - value: "`u('Foo: Bar-baz.')->pascal()`"
        correct: false
      - value: "`u('Foo: Bar-baz.')->upperCamel()`"
        correct: false
      - value: "`u('Foo: Bar-baz.')->title(allWords: true)`"
        correct: false
    help: PascalCase can be achieved by first converting to camelCase using
      `camel()` and then applying title case to the first letter using
      `title()`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/string.rst#_snippet_10
  - question: Which of the following
      `Symfony\Component\EventDispatcher\GenericEvent` methods allows you to
      check if an argument with a specified key exists?
    answers:
      - value: "`hasArgument(key: string)`"
        correct: true
      - value: "`argumentExists(key: string)`"
        correct: false
      - value: "`issetArgument(key: string)`"
        correct: false
      - value: "`getArgument(key: string, default: null) !== null`"
        correct: false
    help: The `hasArgument()` method is specifically designed to check for the
      existence of an argument by its key within the `GenericEvent`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/event_dispatcher/generic_event.rst#_snippet_0
  - question: Which of the following
      `Symfony\Component\EventDispatcher\GenericEvent` methods allows you to
      retrieve all arguments as an associative array?
    answers:
      - value: "`getArguments()`"
        correct: true
      - value: "`allArguments()`"
        correct: false
      - value: "`getPayload()`"
        correct: false
      - value: "`toArray()`"
        correct: false
    help: The `getArguments()` method returns the entire associative array of
      arguments stored within the `GenericEvent`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/event_dispatcher/generic_event.rst#_snippet_0
  - question: When contributing to Symfony, what is the recommended way to tag
      modified components in a pull request message?
    answers:
      - value: Prefix the commit message with `[Component]` or `[Component1]
          [Component2]`.
        correct: true
      - value: Use a dedicated 'Components' section in the PR description.
        correct: false
      - value: Add labels to the GitHub pull request for each component.
        correct: false
      - value: Mention the components in the first sentence of the PR description.
        correct: false
    help: The convention is to use square brackets around the component names at the
      beginning of the pull request message, e.g., `[Yaml] fixed something` or
      `[Form] [Validator] added something`.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/contributing/code/pull_requests.rst#_snippet_12
  - question: What is the purpose of the
      `Symfony\Component\HttpKernel\Controller\ArgumentResolver\SecurityTokenValueResolver`?
    answers:
      - value: To inject the object representing the current logged-in security token
          into controller arguments.
        correct: true
      - value: To resolve security credentials from the request.
        correct: false
      - value: To validate the security token against the firewall.
        correct: false
      - value: To retrieve the security context for the current request.
        correct: false
    help: The `SecurityTokenValueResolver` is specifically designed to inject the
      `TokenInterface` object representing the current security token into
      controller method arguments.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller/value_resolver.rst#_snippet_5
  - question: Which argument resolver injects a Symfony HttpFoundation `Request`
      object created from a PSR-7 object, requiring the installation of the
      PSR-7 Bridge component?
    answers:
      - value: PSR-7 Objects Resolver
        correct: true
      - value: PsrRequestValueResolver
        correct: false
      - value: HttpFoundationPsrBridgeResolver
        correct: false
      - value: RequestPsrConverter
        correct: false
    help: The PSR-7 Objects Resolver (part of the PSR-7 Bridge component) handles
      the conversion and injection of PSR-7 request objects into Symfony's
      HttpFoundation `Request` object.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/controller/value_resolver.rst#_snippet_5
  - question: Which of the following
      `Symfony\Component\EventDispatcher\GenericEvent` methods allows you to set
      a single argument by its key?
    answers:
      - value: "`setArgument(key: string, value: mixed)`"
        correct: true
      - value: "`addArgument(key: string, value: mixed)`"
        correct: false
      - value: "`set(key: string, value: mixed)`"
        correct: false
      - value: "`putArgument(key: string, value: mixed)`"
        correct: false
    help: The `setArgument()` method is used to add or update a single argument
      within the `GenericEvent` by its key.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/event_dispatcher/generic_event.rst#_snippet_0
  - question: Which of the following
      `Symfony\Component\EventDispatcher\GenericEvent` methods allows you to set
      multiple arguments from an associative array?
    answers:
      - value: "`setArguments(arguments: array)`"
        correct: true
      - value: "`addArguments(arguments: array)`"
        correct: false
      - value: "`mergeArguments(arguments: array)`"
        correct: false
      - value: "`setAll(arguments: array)`"
        correct: false
    help: The `setArguments()` method allows replacing all existing arguments with a
      new set provided as an associative array.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/event_dispatcher/generic_event.rst#_snippet_0
  - question: Which of the following
      `Symfony\Component\EventDispatcher\GenericEvent` methods allows you to
      retrieve an argument by its key, with an optional default value?
    answers:
      - value: "`getArgument(key: string, default: mixed = null)`"
        correct: true
      - value: "`fetchArgument(key: string, default: mixed = null)`"
        correct: false
      - value: "`retrieveArgument(key: string, default: mixed = null)`"
        correct: false
      - value: "`get(key: string, default: mixed = null)`"
        correct: false
    help: The `getArgument()` method provides a way to retrieve a specific argument
      by its key, returning a default value if the argument does not exist.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/components/event_dispatcher/generic_event.rst#_snippet_0
  - question: Which Symfony Workflow event is triggered when the subject is about to
      leave a place?
    answers:
      - value: "`workflow.leave`"
        correct: true
      - value: "`workflow.exit`"
        correct: false
      - value: "`workflow.before_transition`"
        correct: false
      - value: "`workflow.place_exit`"
        correct: false
    help: The `workflow.leave` event is dispatched just before the subject's marking
      is updated to reflect its departure from a place.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/workflow.rst#_snippet_13
  - question: Which Symfony Workflow event is triggered when the subject is going
      through a transition?
    answers:
      - value: "`workflow.transition`"
        correct: true
      - value: "`workflow.on_transition`"
        correct: false
      - value: "`workflow.apply`"
        correct: false
      - value: "`workflow.process`"
        correct: false
    help: The `workflow.transition` event is dispatched as the subject moves from
      one place to another via a defined transition.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/workflow.rst#_snippet_13
  - question: Which Symfony Workflow event is triggered right before the subject's
      marking is updated to reflect new places?
    answers:
      - value: "`workflow.enter`"
        correct: true
      - value: "`workflow.entering`"
        correct: false
      - value: "`workflow.before_enter`"
        correct: false
      - value: "`workflow.place_enter`"
        correct: false
    help: The `workflow.enter` event is dispatched just before the subject's marking
      is updated, indicating it is about to enter new places.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/workflow.rst#_snippet_13
  - question: Which Symfony Workflow event is triggered when the object has
      completed a transition?
    answers:
      - value: "`workflow.completed`"
        correct: true
      - value: "`workflow.after_transition`"
        correct: false
      - value: "`workflow.finished`"
        correct: false
      - value: "`workflow.transition_end`"
        correct: false
    help: The `workflow.completed` event is dispatched after a transition has
      successfully finished and the object's state has been updated.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/workflow.rst#_snippet_13
  - question: Which Symfony Workflow event is triggered for each transition that is
      now accessible for the subject?
    answers:
      - value: "`workflow.announce`"
        correct: true
      - value: "`workflow.available_transitions`"
        correct: false
      - value: "`workflow.can_apply`"
        correct: false
      - value: "`workflow.possible_transitions`"
        correct: false
    help: The `workflow.announce` event is dispatched for each transition that the
      subject can currently take, allowing listeners to react to available
      transitions.
      https://github.com/fmatsos/symfony-docs/blob/v7.0/workflow.rst#_snippet_13
