category: Miscellaneous

questions:
  -
    question: >
      Which Symfony component is primarily responsible for parsing and validating configuration files against a defined schema?
    answers:
      - { value: "Symfony\\Component\\Config", correct: true }
      - { value: "Symfony\\Component\\DependencyInjection", correct: false }
      - { value: "Symfony\\Component\\Yaml", correct: false }
      - { value: "Symfony\\Component\\HttpKernel", correct: false }
    help: |
      The Symfony Config component provides tools to define and process configuration trees, ensuring validation and merging of configuration files.
      https://symfony.com/doc/current/components/config.html

  -
    question: |
      Given the following `config/packages/framework.yaml` entry, what is the purpose of `default_locale`?

      ```yaml
      # config/packages/framework.yaml
      framework:
          default_locale: 'en'
      ```
    answers:
      - { value: "It sets the default language for all translations in the application.", correct: false }
      - { value: "It defines the locale to be used if no `_locale` routing parameter is present.", correct: true }
      - { value: "It automatically sets the `Accept-Language` header for outgoing requests.", correct: false }
      - { value: "It is used as a fallback for missing translation messages.", correct: false }
    help: |
      The `default_locale` option in the framework configuration specifies the locale to be used when no `_locale` routing parameter is set.
      https://symfony.com/doc/current/reference/configuration/framework.html#default-locale

  -
    question: >
      Which of the following console commands can be used to inspect all currently configured environment variables in a Symfony application?
    answers:
      - { value: "php bin/console debug:container --env-vars", correct: false }
      - { value: "php bin/console debug:dotenv", correct: true }
      - { value: "php bin/console debug:config dotenv", correct: false }
      - { value: "php bin/console list:env", correct: false }
    help: |
      The `debug:dotenv` command provides a detailed overview of how Symfony processes and resolves environment variables, listing all scanned `.env` files and their final values.
      https://symfony.com/doc/current/configuration.html#debug-dotenv-variables-and-files

  -
    question: |
      Which of the following `env()` processors would you use to convert a JSON-encoded environment variable string into a PHP array?
    answers:
      - { value: "env(array:MY_JSON_VAR)", correct: false }
      - { value: "env(json:MY_JSON_VAR)", correct: true }
      - { value: "env(decode:json:MY_JSON_VAR)", correct: false }
      - { value: "env(parse:json:MY_JSON_VAR)", correct: false }
    help: |
      The `env(json:FOO)` processor is used to decode JSON-encoded environment variables into a PHP array.
      https://symfony.com/doc/current/configuration/env_var_processors.html#json-encoded-environment-variables

  -
    question: >
      What is the primary benefit of using `#[AsMessageHandler]` attribute on a Symfony Messenger handler class?
    answers:
      - { value: "It automatically registers the class as a service and tags it as a message handler.", correct: true }
      - { value: "It ensures the message is always dispatched asynchronously.", correct: false }
      - { value: "It defines the message's priority when dispatched to a transport.", correct: false }
      - { value: "It enables automatic retry logic for failed messages.", correct: false }
    help: |
      The `#[AsMessageHandler]` attribute automatically registers the class as a service and tags it with `messenger.message_handler`, making it discoverable by the Messenger component.
      https://symfony.com/doc/current/messenger.html#message-handlers

  -
    question: >
      Which of the following commands would you use to view all messages currently in the `failure_transport` in Symfony Messenger?
    answers:
      - { value: "php bin/console messenger:failed:list --transport=failure_transport", correct: false }
      - { value: "php bin/console messenger:failed:show --transport=failure_transport", correct: true }
      - { value: "php bin/console messenger:queue:failed --transport=failure_transport", correct: false }
      - { value: "php bin/console messenger:debug:failed --transport=failure_transport", correct: false }
    help: |
      The `messenger:failed:show` command is used to display messages in a specified failure transport.
      https://symfony.com/doc/current/messenger.html#managing-failed-messages

  -
    question: >
      Which of the following `Symfony\\Component\\Messenger\\Stamp` classes is used to delay the handling of an asynchronous message?
    answers:
      - { value: "DelayStamp", correct: true }
      - { value: "ScheduleStamp", correct: false }
      - { value: "TimeDelayStamp", correct: false }
      - { value: "PostponeStamp", correct: false }
    help: |
      The `DelayStamp` is used to specify a delay before a message is handled by an asynchronous transport.
      https://symfony.com/doc/current/components/messenger.html#built-in-stamps

  -
    question: >
      What is the primary purpose of the `Symfony\\Component\\Mime\\Email` class?
    answers:
      - { value: "To send emails directly without a Mailer transport.", correct: false }
      - { value: "To define the structure and content of an email message using a high-level API.", correct: true }
      - { value: "To guess the MIME type of a file based on its content.", correct: false }
      - { value: "To serialize email objects for storage or transport.", correct: false }
    help: |
      The `Symfony\\Component\\Mime\\Email` class provides a high-level, fluent API for composing email messages.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: >
      Which of the following methods of `Symfony\\Component\\Mime\\MimeTypes` would you use to get all possible file extensions for a given MIME type like `image/jpeg`?
    answers:
      - { value: "getMimeTypeExtensions('image/jpeg')", correct: false }
      - { value: "getExtensions('image/jpeg')", correct: true }
      - { value: "findExtensions('image/jpeg')", correct: false }
      - { value: "guessExtensions('image/jpeg')", correct: false }
    help: |
      The `getExtensions()` method of `MimeTypes` returns an array of possible file extensions for a given MIME type.
      https://symfony.com/doc/current/components/mime.html#get-file-extensions-and-mime-types

  -
    question: >
      Which of the following DSN protocols is used by Symfony Mailer to send emails via a local sendmail binary?
    answers:
      - { value: "smtp", correct: false }
      - { value: "native", correct: true }
      - { value: "sendmail", correct: true }
      - { value: "local", correct: false }
    help: |
      Both `sendmail://default` and `native://default` DSN protocols use the local sendmail binary. `native` uses the `sendmail_path` setting from `php.ini`.
      https://symfony.com/doc/current/mailer.html#built-in-dsn-transports

  -
    question: >
      What is the purpose of `Symfony\\Component\\Filesystem\\Filesystem::dumpFile()`?
    answers:
      - { value: "To read the content of a file into a string.", correct: false }
      - { value: "To append content to an existing file.", correct: false }
      - { value: "To atomically save content to a file, creating it and its directory if they don't exist.", correct: true }
      - { value: "To create a temporary file with a unique filename.", correct: false }
    help: |
      `dumpFile()` saves the given contents into a file in an atomic manner, ensuring data integrity.
      https://symfony.com/doc/current/components/filesystem.html#dumping-file-contents

  -
    question: >
      Which method of `Symfony\\Component\\Filesystem\\Filesystem` would you use to recursively change the owner of a directory and its contents?
    answers:
      - { value: "changeOwner('/path/to/dir', 'www-data', true)", correct: false }
      - { value: "setOwner('/path/to/dir', 'www-data', true)", correct: false }
      - { value: "chown('/path/to/dir', 'www-data', true)", correct: true }
      - { value: "setPermissions('/path/to/dir', 'www-data', true)", correct: false }
    help: |
      The `chown()` method allows changing the owner of files and directories, with a third argument for recursive application.
      https://symfony.com/doc/current/components/filesystem.html#changing-file-owner

  -
    question: >
      Which method of `Symfony\\Component\\Finder\\Finder` should you use to search for files only, excluding directories from the results?
    answers:
      - { value: "onlyFiles()", correct: false }
      - { value: "findFiles()", correct: false }
      - { value: "files()", correct: true }
      - { value: "excludeDirectories()", correct: false }
    help: |
      The `files()` method restricts the search to only include files.
      https://symfony.com/doc/current/components/finder.html#finding-files-or-directories

  -
    question: >
      What is the primary purpose of the Symfony Lock component?
    answers:
      - { value: "To manage database transactions.", correct: false }
      - { value: "To prevent concurrent execution of critical code sections.", correct: true }
      - { value: "To encrypt sensitive data at rest.", correct: false }
      - { value: "To manage application-level caching.", correct: false }
    help: |
      The Lock component provides a mechanism to create and manage application-level locks to prevent race conditions and ensure exclusive access to resources.
      https://symfony.com/doc/current/components/lock.html

  -
    question: >
      Which of the following `Lock` methods would you use to check if the current lock instance still holds the acquired lock, especially important for expiring locks?
    answers:
      - { value: "isHeld()", correct: false }
      - { value: "isActive()", correct: false }
      - { value: "isAcquired()", correct: true }
      - { value: "hasLock()", correct: false }
    help: |
      The `isAcquired()` method checks if the current `Lock` instance still owns the acquired lock.
      https://symfony.com/doc/current/components/lock.html#checking-the-lock-ownership

  -
    question: >
      Which of the following Lock stores supports blocking operations, meaning it will wait until the lock can be acquired?
    answers:
      - { value: "MemcachedStore", correct: false }
      - { value: "RedisStore", correct: false }
      - { value: "FlockStore", correct: true }
      - { value: "PdoStore", correct: false }
    help: |
      `FlockStore` is a local store that supports blocking operations.
      https://symfony.com/doc/current/components/lock.html#available-stores

  -
    question: >
      Which console command can you use to list all currently enabled data collectors in your Symfony application?
    answers:
      - { value: "php bin/console debug:profiler:collectors", correct: false }
      - { value: "php bin/console debug:data-collectors", correct: false }
      - { value: "php bin/console debug:container --tag=data_collector", correct: true }
      - { value: "php bin/console profiler:list:collectors", correct: false }
    help: |
      The `debug:container --tag=data_collector` command lists all services tagged as data collectors.
      https://symfony.com/doc/current/profiler.html#listing-enabled-data-collectors

  -
    question: >
      What is the purpose of setting the `toolbar.ajax_replace` option to `true` in the `web_profiler` configuration?
    answers:
      - { value: "To prevent the web debug toolbar from loading on AJAX requests.", correct: false }
      - { value: "To force the web debug toolbar to refresh and display new data after an AJAX request.", correct: true }
      - { value: "To disable AJAX logging in the profiler.", correct: false }
      - { value: "To automatically intercept redirects caused by AJAX requests.", correct: false }
    help: |
      The `toolbar.ajax_replace` option, when enabled, ensures the web debug toolbar refreshes its content after AJAX requests.
      https://symfony.com/doc/current/reference/configuration/web_profiler.html#toolbar-ajax-replace

  -
    question: >
      Which Twig function or tag is used to dump variables to the Web Debug Toolbar without rendering them directly into the page content?
    answers:
      - { value: "{{ dump(variable) }}", correct: false }
      - { value: "{% dump variable %}", correct: true }
      - { value: "{{ debug(variable) }}", correct: false }
      - { value: "{% debug variable %}", correct: false }
    help: |
      The `{% dump %}` Twig tag sends the variable's content to the Web Debug Toolbar.
      https://symfony.com/doc/current/templates.html#the-dump-function

  -
    question: >
      Which of the following is the correct way to set the default locale for a Symfony application in `config/packages/framework.yaml`?
    answers:
      - { value: "locale: 'en'", correct: false }
      - { value: "default_language: 'en'", correct: false }
      - { value: "framework: { default_locale: 'en' }", correct: true }
      - { value: "translator: { default_locale: 'en' }", correct: false }
    help: |
      The `default_locale` option is configured directly under the `framework` key.
      https://symfony.com/doc/current/translation.html#configuring-the-default-locale

  -
    question: >
      Which Symfony component provides utility classes for retrieving localized names of languages, countries, and currencies?
    answers:
      - { value: "Symfony\\Component\\Translation", correct: false }
      - { value: "Symfony\\Component\\Intl", correct: true }
      - { value: "Symfony\\Component\\Locale", correct: false }
      - { value: "Symfony\\Component\\I18n", correct: false }
    help: |
      The Symfony Intl component provides classes like `Languages`, `Countries`, and `Currencies` for internationalization data.
      https://symfony.com/doc/current/components/intl.html

  -
    question: |
      You want to translate the message "There are %count% apples" and need to handle pluralization correctly based on the `%count%` variable. Which ICU MessageFormat function should you use?
    answers:
      - { value: "select", correct: false }
      - { value: "gender", correct: false }
      - { value: "plural", correct: true }
      - { value: "number", correct: false }
    help: |
      The `plural` function in ICU MessageFormat is specifically designed for handling plural forms based on a numeric value.
      https://symfony.com/doc/current/reference/formats/message_format.html#plural-format

  -
    question: >
      What is the purpose of the `Symfony\\Component\\Runtime\\Runtime` component?
    answers:
      - { value: "To provide a high-performance HTTP server for Symfony applications.", correct: false }
      - { value: "To decouple the application from global state and allow different execution environments.", correct: true }
      - { value: "To manage long-running background processes and workers.", correct: false }
      - { value: "To automatically configure environment variables based on the current environment.", correct: false }
    help: |
      The Runtime component aims to decouple the application from global state, making it easier to run Symfony applications in various environments (web, console, serverless, ReactPHP, etc.).
      https://symfony.com/doc/current/components/runtime.html

  -
    question: >
      Which of the following is the correct file to modify in `composer.json` to specify a custom path for the `.env` file when using the Symfony Runtime component?
    answers:
      - { value: "extra.symfony.dotenv_path", correct: false }
      - { value: "config.dotenv_path", correct: false }
      - { value: "extra.runtime.dotenv_path", correct: true }
      - { value: "runtime.dotenv_path", correct: false }
    help: |
      The `dotenv_path` option for the Runtime component is configured under `extra.runtime` in `composer.json`.
      https://symfony.com/doc/current/components/runtime.html#configuring-the-runtime

  -
    question: >
      What is the primary purpose of `Symfony\\Component\\Clock\\ClockInterface`?
    answers:
      - { value: "To provide a global timestamp for logging.", correct: false }
      - { value: "To allow mocking of time-dependent logic in tests.", correct: true }
      - { value: "To manage cron jobs and scheduled tasks.", correct: false }
      - { value: "To convert timezones for DateTime objects.", correct: false }
    help: |
      The Clock component provides a testable abstraction for time, allowing you to mock the current time in your tests.
      https://symfony.com/doc/current/components/clock.html

  -
    question: >
      Which of the following `Clock` methods would you use to instantly advance or rewind the current time in a mocked clock instance?
    answers:
      - { value: "advance()", correct: false }
      - { value: "setTime()", correct: false }
      - { value: "modify()", correct: true }
      - { value: "jump()", correct: false }
    help: |
      The `modify()` method of `MockClock` allows you to instantly change the mocked time using any string format supported by `DateTimeImmutable::modify()`.
      https://symfony.com/doc/current/components/clock.html#testing-time-sensitive-logic

  -
    question: |
      You are defining a custom configuration for your bundle. Which method of `AbstractBundle` should you implement to define the configuration schema (e.g., using `DefinitionConfigurator`)?
    answers:
      - { value: "build()", correct: false }
      - { value: "loadExtension()", correct: false }
      - { value: "configure()", correct: true }
      - { value: "getExtension()", correct: false }
    help: |
      The `configure(DefinitionConfigurator $definition)` method in `AbstractBundle` is used to define the configuration tree.
      https://symfony.com/doc/current/bundles/configuration.html#define-and-load-custom-bundle-configuration

  -
    question: >
      Which of the following console commands would you use to display the *actual* configuration values used by your Symfony application for the `framework` bundle?
    answers:
      - { value: "php bin/console config:dump-reference framework", correct: false }
      - { value: "php bin/console debug:config framework", correct: true }
      - { value: "php bin/console show:config framework", correct: false }
      - { value: "php bin/console get:config framework", correct: false }
    help: |
      The `debug:config` command displays the actual configuration values used by your application.
      https://symfony.com/doc/current/reference/configuration/framework.html#displaying-the-frameworkbundle-configuration

  -
    question: >
      What is the purpose of the `#[WithHttpStatus]` attribute in Symfony?
    answers:
      - { value: "To automatically log exceptions with a specific HTTP status code.", correct: false }
      - { value: "To define a custom error page template for an exception.", correct: false }
      - { value: "To map an HTTP status code and optional headers to a custom exception class or interface.", correct: true }
      - { value: "To redirect to a specific URL when an exception occurs.", correct: false }
    help: |
      The `#[WithHttpStatus]` attribute allows you to automatically map an HTTP status code and response headers to a custom exception.
      https://symfony.com/doc/current/controller/error_pages.html#mapping-http-status-and-headers-with-the-withhttpstatus-attribute

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods executes a command synchronously and throws a `ProcessFailedException` if the command exits with a non-zero status code?
    answers:
      - { value: "runOrFail()", correct: false }
      - { value: "executeStrict()", correct: false }
      - { value: "mustRun()", correct: true }
      - { value: "runAndThrow()", correct: false }
    help: |
      The `mustRun()` method is identical to `run()` but automatically throws a `ProcessFailedException` if the command fails.
      https://symfony.com/doc/current/components/process.html#executing-commands

  -
    question: >
      Which of the following `Symfony\\Component\\Process\\Process` methods should you use to start a process asynchronously without blocking the main thread?
    answers:
      - { value: "runInBackground()", correct: false }
      - { value: "start()", correct: true }
      - { value: "executeAsync()", correct: false }
      - { value: "detach()", correct: false }
    help: |
      The `start()` method starts the process asynchronously.
      https://symfony.com/doc/current/components/process.html#running-processes-asynchronously

  -
    question: >
      What is the primary role of "Normalizers" in the Symfony Serializer component?
    answers:
      - { value: "To convert data between different formats (e.g., JSON to XML).", correct: false }
      - { value: "To convert PHP objects into arrays and vice versa.", correct: true }
      - { value: "To validate the structure of serialized data.", correct: false }
      - { value: "To handle circular references during serialization.", correct: false }
    help: |
      Normalizers are responsible for converting objects into arrays and arrays back into objects.
      https://symfony.com/doc/current/serializer.html#normalizers-and-encoders

  -
    question: |
      You want to serialize an object to JSON, but you need to ensure that properties with `null` values are excluded from the output. Which context option should you use with the Serializer?
    answers:
      - { value: "AbstractObjectNormalizer::IGNORE_NULL_VALUES", correct: false }
      - { value: "AbstractNormalizer::SKIP_NULL_VALUES", correct: true }
      - { value: "ObjectNormalizer::EXCLUDE_NULL", correct: false }
      - { value: "Serializer::CONTEXT_SKIP_NULLS", correct: false }
    help: |
      The `AbstractNormalizer::SKIP_NULL_VALUES` context option can be set to `true` to skip properties with null values during serialization.
      https://symfony.com/doc/current/serializer.html#skipping-null-values

  -
    question: >
      Which of the following console commands can be used to display the detailed serialization metadata for a specific class, including its groups and serialized names?
    answers:
      - { value: "php bin/console debug:serializer App\\Entity\\Book", correct: true }
      - { value: "php bin/console serializer:debug App\\Entity\\Book", correct: false }
      - { value: "php bin/console debug:metadata App\\Entity\\Book", correct: false }
      - { value: "php bin/console serializer:info App\\Entity\\Book", correct: false }
    help: |
      The `debug:serializer` command dumps the detailed serialization metadata for a given class.
      https://symfony.com/doc/current/serializer.html#debugging-the-serializer

  -
    question: >
      Which of the following is a core concept in Symfony Messenger that wraps messages and allows adding metadata through "stamps"?
    answers:
      - { value: "Packet", correct: false }
      - { value: "Envelope", correct: true }
      - { value: "Payload", correct: false }
      - { value: "Container", correct: false }
    help: |
      An `Envelope` is a Messenger-specific concept that wraps messages, allowing the addition of useful information through *envelope stamps*.
      https://symfony.com/doc/current/components/messenger.html#core-concepts

  -
    question: >
      Which of the following commands would you use to start a Symfony Messenger consumer that processes messages from multiple transports with a specific priority (e.g., high before low)?
    answers:
      - { value: "php bin/console messenger:start async_priority_high async_priority_low", correct: false }
      - { value: "php bin/console messenger:listen async_priority_high async_priority_low", correct: false }
      - { value: "php bin/console messenger:consume async_priority_high async_priority_low", correct: true }
      - { value: "php bin/console messenger:process async_priority_high async_priority_low", correct: false }
    help: |
      The `messenger:consume` command can take multiple transport names as arguments to consume messages from them in the specified order.
      https://symfony.com/doc/current/messenger.html#consuming-messages

  -
    question: >
      To configure global sender and recipient addresses for all emails sent via Symfony Mailer, which configuration section would you modify?
    answers:
      - { value: "framework.mailer.defaults", correct: false }
      - { value: "framework.mailer.global", correct: false }
      - { value: "framework.mailer.envelope", correct: true }
      - { value: "framework.mailer.settings", correct: false }
    help: |
      The `framework.mailer.envelope` section is used to configure global sender and recipient addresses for all outgoing emails.
      https://symfony.com/doc/current/mailer.html#configuring-global-email-settings

  -
    question: >
      Which of the following is the correct DSN format for configuring a failover transport in Symfony Mailer?
    answers:
      - { value: "failover(transport1://dsn1, transport2://dsn2)", correct: false }
      - { value: "failover://transport1_dsn,transport2_dsn", correct: false }
      - { value: "failover(transport1_dsn transport2_dsn)", correct: true }
      - { value: "failover://(transport1_dsn, transport2_dsn)", correct: false }
    help: |
      The `failover()` DSN function takes a space-separated list of DSNs as arguments.
      https://symfony.com/doc/current/mailer.html#failover-transport

  -
    question: >
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to copy all contents from a source directory to a target directory?
    answers:
      - { value: "copyDirectory()", correct: false }
      - { value: "replicate()", correct: false }
      - { value: "mirror()", correct: true }
      - { value: "duplicateDirectory()", correct: false }
    help: |
      The `mirror()` method copies all the contents of a source directory into a target directory.
      https://symfony.com/doc/current/components/filesystem.html#mirroring-directories

  -
    question: >
      Which of the following `Symfony\\Component\\Finder\\Finder` methods should you use to exclude specific directories from the search results?
    answers:
      - { value: "ignore()", correct: false }
      - { value: "exclude()", correct: true }
      - { value: "skip()", correct: false }
      - { value: "filterOut()", correct: false }
    help: |
      The `exclude()` method is used to exclude specific directories from the search.
      https://symfony.com/doc/current/components/finder.html#excluding-directories

  -
    question: >
      What is the default behavior of `Symfony\\Component\\Finder\\Finder` regarding version control system (VCS) files (e.g., .git, .svn)?
    answers:
      - { value: "They are included by default.", correct: false }
      - { value: "They are ignored by default.", correct: true }
      - { value: "They trigger an error if found.", correct: false }
      - { value: "They are only included if explicitly requested.", correct: false }
    help: |
      By default, `Finder` ignores VCS files. You can change this behavior with `ignoreVCS(false)`.
      https://symfony.com/doc/current/components/finder.html#ignoring-vcs-files

  -
    question: >
      Which of the following `Lock` methods should you use to extend the lifetime of an expiring lock during a long-running task?
    answers:
      - { value: "extend()", correct: false }
      - { value: "renew()", correct: false }
      - { value: "refresh()", correct: true }
      - { value: "keepAlive()", correct: false }
    help: |
      The `refresh()` method resets the lock's Time To Live (TTL) to its original value or a custom value.
      https://symfony.com/doc/current/components/lock.html#refreshing-an-expiring-lock

  -
    question: >
      Which of the following Lock stores is suitable for distributed locks across multiple application instances but does NOT support blocking operations?
    answers:
      - { value: "FlockStore", correct: false }
      - { value: "SemaphoreStore", correct: false }
      - { value: "RedisStore", correct: true }
      - { value: "PostgreSqlStore", correct: false }
    help: |
      `RedisStore` is a remote store that supports expiring and sharing, but not blocking operations.
      https://symfony.com/doc/current/components/lock.html#available-stores

  -
    question: >
      What is the purpose of the `kernel.container_build_time` parameter in Symfony?
    answers:
      - { value: "To define the maximum time allowed for container compilation.", correct: false }
      - { value: "To store the timestamp of the last cache clear operation.", correct: false }
      - { value: "To ensure reproducible builds by allowing a fixed timestamp for the compiled service container.", correct: true }
      - { value: "To track the total time spent building the container during development.", correct: false }
    help: |
      The `kernel.container_build_time` parameter allows for reproducible builds by setting a fixed timestamp for the compiled service container.
      https://symfony.com/doc/current/reference/configuration/kernel.html#kernel-container-build-time

  -
    question: >
      Which of the following commands would you use to start the Symfony local web server in the background?
    answers:
      - { value: "symfony server:run --daemon", correct: false }
      - { value: "symfony server:start -d", correct: true }
      - { value: "symfony server:background", correct: false }
      - { value: "symfony server:daemonize", correct: false }
    help: |
      The `-d` option with `symfony server:start` runs the server in the background.
      https://symfony.com/doc/current/setup/symfony_cli.html#starting-the-local-web-server

  -
    question: >
      Which of the following commands would you use to enable profiling for a specific Symfony console command execution?
    answers:
      - { value: "php bin/console app:my-command --debug-profile", correct: false }
      - { value: "php bin/console app:my-command --profile", correct: true }
      - { value: "php bin/console app:my-command --enable-profiler", correct: false }
      - { value: "php bin/console app:my-command --trace", correct: false }
    help: |
      The `--profile` option enables profiling for a console command.
      https://symfony.com/doc/current/console.html#profiling-a-command

  -
    question: >
      Which of the following `Stopwatch` methods allows you to measure partial durations within a single ongoing event, similar to a physical stopwatch's 'lap' button?
    answers:
      - { value: "split()", correct: false }
      - { value: "segment()", correct: false }
      - { value: "lap()", correct: true }
      - { value: "checkpoint()", correct: false }
    help: |
      The `lap()` method measures partial durations within an event, and this information is stored as "periods" within the event.
      https://symfony.com/doc/current/performance.html#measuring-code-periods

  -
    question: >
      What is the purpose of the `Symfony\\Component\\Translation\\LocaleSwitcher` service?
    answers:
      - { value: "To automatically detect the user's browser language.", correct: false }
      - { value: "To manage and switch the application's locale programmatically.", correct: true }
      - { value: "To store user preferences for language settings in the database.", correct: false }
      - { value: "To provide a list of all available locales in the application.", correct: false }
    help: |
      The `LocaleSwitcher` service allows you to programmatically set, retrieve, and reset the application's locale.
      https://symfony.com/doc/current/translation.html#managing-the-application-locale

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Countries` methods would you use to get the numeric ISO 3166-1 code for a given alpha-2 country code (e.g., 'FR')?
    answers:
      - { value: "getNumericCode('FR')", correct: true }
      - { value: "getCountryNumber('FR')", correct: false }
      - { value: "getIsoCode('FR')", correct: false }
      - { value: "getNumeric('FR')", correct: false }
    help: |
      The `getNumericCode()` method returns the numeric code for a given alpha-2 country code.
      https://symfony.com/doc/current/components/intl.html#retrieving-numeric-country-codes

  -
    question: >
      What is the primary function of the `Symfony\\Component\\Clock\\DatePoint` class?
    answers:
      - { value: "To represent a date without time information.", correct: false }
      - { value: "To provide a mutable date and time object.", correct: false }
      - { value: "To act as a wrapper around `DateTimeImmutable` that fetches time from the `Clock` class.", correct: true }
      - { value: "To calculate the difference between two dates.", correct: false }
    help: |
      `DatePoint` is a wrapper around `DateTimeImmutable` that fetches the current time from the `Clock` class, making it time-testable.
      https://symfony.com/doc/current/components/clock.html#using-datepoint

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for string concatenation?
    answers:
      - { value: "+", correct: false }
      - { value: ".", correct: false }
      - { value: "~", correct: true }
      - { value: "&", correct: false }
    help: |
      The `~` operator is used for string concatenation in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#string-operators

  -
    question: |
      Which `ExpressionLanguage` function would you use to retrieve the value of a PHP global constant or a class constant?
    answers:
      - { value: "const()", correct: false }
      - { value: "constant()", correct: true }
      - { value: "php_const()", correct: false }
      - { value: "get_constant()", correct: false }
    help: |
      The `constant()` function allows you to retrieve the value of a PHP constant.
      https://symfony.com/doc/current/reference/formats/expression_language.html#built-in-functions

  -
    question: |
      When handling exceptions in a Symfony console command, which event should you listen to for custom error handling or exception modification?
    answers:
      - { value: "ConsoleEvents::EXCEPTION", correct: false }
      - { value: "ConsoleEvents::ERROR", correct: true }
      - { value: "ConsoleEvents::FAULT", correct: false }
      - { value: "ConsoleEvents::FAILURE", correct: false }
    help: |
      The `ConsoleEvents::ERROR` event is dispatched whenever an exception occurs during command execution.
      https://symfony.com/doc/current/components/console/events.html#console-events-error

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to check if a file or directory exists?
    answers:
      - { value: "fileExists()", correct: false }
      - { value: "isDirectory()", correct: false }
      - { value: "exists()", correct: true }
      - { value: "pathExists()", correct: false }
    help: |
      The `exists()` method checks for the presence of one or more files or directories.
      https://symfony.com/doc/current/components/filesystem.html#checking-file-or-directory-existence

  -
    question: |
      What is the purpose of the `Symfony\\Component\\Lock\\LockableTrait` in a Symfony Console Command?
    answers:
      - { value: "To enable asynchronous execution of the command.", correct: false }
      - { value: "To prevent multiple instances of the command from running concurrently.", correct: true }
      - { value: "To add a progress bar to the command's output.", correct: false }
      - { value: "To automatically log command execution times to the profiler.", correct: false }
    help: |
      The `LockableTrait` provides methods to prevent multiple instances of a console command from running simultaneously.
      https://symfony.com/doc/current/console/lockable_trait.html

  -
    question: |
      Which of the following commands would you use to clear all cache items from a specific cache pool named `my_cache_pool`?
    answers:
      - { value: "php bin/console cache:clear my_cache_pool", correct: false }
      - { value: "php bin/console cache:pool:clear my_cache_pool", correct: true }
      - { value: "php bin/console cache:remove my_cache_pool", correct: false }
      - { value: "php bin/console cache:flush my_cache_pool", correct: false }
    help: |
      The `cache:pool:clear` command is used to clear all entries from a designated cache pool.
      https://symfony.com/doc/current/cache.html#clearing-a-specific-cache-pool

  -
    question: |
      What is the primary benefit of using `Symfony\\Component\\Cache\\Marshaller\\SodiumMarshaller` with a cache adapter?
    answers:
      - { value: "It improves cache hit ratio by optimizing key hashing.", correct: false }
      - { value: "It enables tag-based cache invalidation.", correct: false }
      - { value: "It encrypts cache item values for enhanced security.", correct: true }
      - { value: "It automatically compresses cached data to save space.", correct: false }
    help: |
      `SodiumMarshaller` encrypts and decrypts cache item values using Sodium for secure storage.
      https://symfony.com/doc/current/cache.html#encrypting-cache-values

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods is used to retrieve the standard output of a completed process?
    answers:
      - { value: "getStdout()", correct: false }
      - { value: "getOutput()", correct: true }
      - { value: "readOutput()", correct: false }
      - { value: "fetchOutput()", correct: false }
    help: |
      The `getOutput()` method returns the whole content of the standard output.
      https://symfony.com/doc/current/components/process.html#getting-the-output

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is specifically designed to normalize `DateTimeInterface` objects (e.g., `DateTime`, `DateTimeImmutable`) into strings, integers, or floats?
    answers:
      - { value: "DateNormalizer", correct: false }
      - { value: "TimeNormalizer", correct: false }
      - { value: "DateTimeNormalizer", correct: true }
      - { value: "ObjectNormalizer", correct: false }
    help: |
      `DateTimeNormalizer` is dedicated to converting `DateTimeInterface` objects.
      https://symfony.com/doc/current/serializer.html#datetime-objects

  -
    question: |
      When using Symfony Mailer, what is the purpose of adding an `X-Transport` header to an `Email` object?
    answers:
      - { value: "To specify a custom SMTP server for that email.", correct: false }
      - { value: "To force the email to be sent via a specific named mailer transport.", correct: true }
      - { value: "To add a custom tag for email tracking.", correct: false }
      - { value: "To encrypt the email content before sending.", correct: false }
    help: |
      Adding an `X-Transport` header with the name of a configured transport will force the email to be sent via that specific transport.
      https://symfony.com/doc/current/mailer.html#sending-emails-with-different-transports

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Path` methods should you use to convert a relative path into an absolute path based on a given base path?
    answers:
      - { value: "toAbsolute()", correct: false }
      - { value: "resolve()", correct: false }
      - { value: "makeAbsolute()", correct: true }
      - { value: "getAbsolutePath()", correct: false }
    help: |
      The `makeAbsolute()` method converts a relative path to an absolute path.
      https://symfony.com/doc/current/components/filesystem.html#converting-relative-paths-to-absolute-paths

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to include symbolic links in the search results?
    answers:
      - { value: "includeLinks()", correct: false }
      - { value: "followLinks()", correct: true }
      - { value: "resolveLinks()", correct: false }
      - { value: "scanLinks()", correct: false }
    help: |
      The `followLinks()` method instructs the Finder to follow symbolic links.
      https://symfony.com/doc/current/components/finder.html#following-symbolic-links

  -
    question: |
      Which of the following `Lock` methods should you call to acquire a shared (read) lock, allowing multiple processes to read concurrently while preventing write operations?
    answers:
      - { value: "acquireShared()", correct: false }
      - { value: "acquireRead()", correct: true }
      - { value: "getSharedLock()", correct: false }
      - { value: "readLock()", correct: false }
    help: |
      The `acquireRead()` method attempts to acquire a shared (read) lock.
      https://symfony.com/doc/current/components/lock.html#shared-locks

  -
    question: |
      When configuring the Symfony Profiler, what is the effect of setting `intercept_redirects` to `true` in `web_profiler` configuration?
    answers:
      - { value: "It prevents the profiler from collecting data on redirect responses.", correct: false }
      - { value: "It forces the browser to stop before following a redirect, allowing inspection of the original URL's profiler data.", correct: true }
      - { value: "It automatically redirects all profiler URLs to a secure endpoint.", correct: false }
      - { value: "It enables profiling for all redirect chains in the application.", correct: false }
    help: |
      `intercept_redirects` causes the browser to stop before following a redirect, allowing you to inspect the profiler data for the original URL.
      https://symfony.com/doc/current/reference/configuration/web_profiler.html#intercept-redirects

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a list of all timezone IDs associated with a specific country code (e.g., 'CL' for Chile)?
    answers:
      - { value: "getTimezonesForCountry('CL')", correct: false }
      - { value: "getCountryTimezones('CL')", correct: false }
      - { value: "forCountryCode('CL')", correct: true }
      - { value: "findTimezonesByCountry('CL')", correct: false }
    help: |
      The `forCountryCode()` method returns an array of timezone IDs for a given country code.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezones-for-a-country

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\ClockInterface` methods is used to set a specific timezone for the clock instance?
    answers:
      - { value: "setTimezone()", correct: false }
      - { value: "inTimezone()", correct: false }
      - { value: "withTimeZone()", correct: true }
      - { value: "setZone()", correct: false }
    help: |
      The `withTimeZone()` method returns a new clock instance with the specified timezone.
      https://symfony.com/doc/current/components/clock.html#setting-a-timezone

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for the null-coalescing operation (e.g., `foo ?? 'default'`)?
    answers:
      - { value: "??", correct: true }
      - { value: "?:", correct: false }
      - { value: "||", correct: false }
      - { value: "??=", correct: false }
    help: |
      The `??` operator is the null-coalescing operator in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#null-safe-and-null-coalescing-operators

  -
    question: |
      When defining a custom configuration for a Symfony bundle, which method of `ArrayNodeDefinition` allows you to specify that extra, undefined configuration keys should be ignored without throwing an exception?
    answers:
      - { value: "allowExtraKeys()", correct: false }
      - { value: "ignoreExtraKeys()", correct: true }
      - { value: "setAllowExtraKeys(true)", correct: false }
      - { value: "permitExtraKeys()", correct: false }
    help: |
      The `ignoreExtraKeys()` method allows extra config keys to be specified under an array without throwing an exception.
      https://symfony.com/doc/current/components/config/definition.html#arraynode-configuration-options-reference

  -
    question: |
      Which of the following `env()` processors would you use to explicitly cast an environment variable's value to a boolean?
    answers:
      - { value: "env(boolean:MY_VAR)", correct: false }
      - { value: "env(bool:MY_VAR)", correct: true }
      - { value: "env(as_bool:MY_VAR)", correct: false }
      - { value: "env(to_bool:MY_VAR)", correct: false }
    help: |
      The `bool:` processor converts string values to booleans.
      https://symfony.com/doc/current/configuration/env_var_processors.html#casting-environment-variables-to-boolean

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods allows you to set a maximum execution time for a process, after which a `ProcessTimedOutException` will be thrown?
    answers:
      - { value: "setMaxTime()", correct: false }
      - { value: "setExecutionTimeout()", correct: false }
      - { value: "setTimeout()", correct: true }
      - { value: "setDurationLimit()", correct: false }
    help: |
      The `setTimeout()` method sets the maximum execution time for a process.
      https://symfony.com/doc/current/components/process.html#process-timeout

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is typically used as the most powerful default normalizer for objects, leveraging the PropertyAccess Component?
    answers:
      - { value: "ArrayNormalizer", correct: false }
      - { value: "GetSetMethodNormalizer", correct: false }
      - { value: "ObjectNormalizer", correct: true }
      - { value: "PropertyNormalizer", correct: false }
    help: |
      `ObjectNormalizer` is the most powerful default normalizer, using PropertyAccess to read and write properties.
      https://symfony.com/doc/current/serializer.html#objectnormalizer

  -
    question: |
      To configure a custom message bus for asynchronous email delivery in Symfony Mailer, which configuration option should you use?
    answers:
      - { value: "framework.mailer.async_bus", correct: false }
      - { value: "framework.mailer.message_queue", correct: false }
      - { value: "framework.mailer.message_bus", correct: true }
      - { value: "framework.mailer.transport_bus", correct: false }
    help: |
      The `message_bus` option specifies a custom message bus for dispatching mailer messages asynchronously.
      https://symfony.com/doc/current/mailer.html#asynchronous-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Path` methods returns the shortest path name equivalent to the given path, resolving `.` and `..` segments and normalizing separators?
    answers:
      - { value: "normalize()", correct: false }
      - { value: "clean()", correct: false }
      - { value: "canonicalize()", correct: true }
      - { value: "simplify()", correct: false }
    help: |
      The `canonicalize()` method returns the shortest path name equivalent to the given path.
      https://symfony.com/doc/current/components/filesystem.html#canonicalizing-paths

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their content (e.g., containing a specific string or matching a regex)?
    answers:
      - { value: "matchContent()", correct: false }
      - { value: "hasContent()", correct: false }
      - { value: "contains()", correct: true }
      - { value: "filterContent()", correct: false }
    help: |
      The `contains()` method filters files by their content.
      https://symfony.com/doc/current/components/finder.html#filtering-by-content

  -
    question: |
      What is the purpose of `Symfony\\Component\\Cache\\TagAwareCacheInterface`?
    answers:
      - { value: "To allow caching of objects that implement a specific tag interface.", correct: false }
      - { value: "To enable invalidation of multiple cache items by associating them with tags.", correct: true }
      - { value: "To automatically tag cache items based on their content.", correct: false }
      - { value: "To ensure cache items are always stored with a unique tag.", correct: false }
    help: |
      `TagAwareCacheInterface` provides methods for associating tags with cache items and invalidating items by tags.
      https://symfony.com/doc/current/cache.html#cache-invalidation

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods allows you to provide input to the process's standard input stream dynamically after the process has started?
    answers:
      - { value: "writeInput()", correct: false }
      - { value: "feedInput()", correct: false }
      - { value: "setInput() with an InputStream", correct: true }
      - { value: "pipeInput()", correct: false }
    help: |
      You can use `setInput()` with an `InputStream` object to dynamically write data to the process's standard input.
      https://symfony.com/doc/current/components/process.html#streaming-input

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert objects that implement `JsonSerializable` into a normalized array?
    answers:
      - { value: "ObjectNormalizer", correct: false }
      - { value: "JsonSerializableNormalizer", correct: true }
      - { value: "ArrayNormalizer", correct: false }
      - { value: "CallbackNormalizer", correct: false }
    help: |
      `JsonSerializableNormalizer` works with classes that implement `JsonSerializable`.
      https://symfony.com/doc/current/serializer.html#json-serializable-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\MimeTypes` methods would you use to guess the MIME type of a file based on its content, not just its extension?
    answers:
      - { value: "detectMimeType()", correct: false }
      - { value: "getMimeType()", correct: false }
      - { value: "guessMimeType()", correct: true }
      - { value: "determineMimeType()", correct: false }
    help: |
      The `guessMimeType()` method inspects the file content to determine its MIME type.
      https://symfony.com/doc/current/components/mime.html#guessing-file-mime-types

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a temporary file with a unique filename?
    answers:
      - { value: "createTempFile()", correct: false }
      - { value: "generateTempFile()", correct: false }
      - { value: "tempnam()", correct: true }
      - { value: "makeTempFile()", correct: false }
    help: |
      The `tempnam()` method creates a temporary file with a unique filename.
      https://symfony.com/doc/current/components/filesystem.html#creating-temporary-files

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Lock` methods is used to explicitly release an acquired lock?
    answers:
      - { value: "unlock()", correct: false }
      - { value: "release()", correct: true }
      - { value: "free()", correct: false }
      - { value: "dispose()", correct: false }
    help: |
      The `release()` method explicitly releases the lock.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to list all currently configured cache pools in a Symfony application?
    answers:
      - { value: "php bin/console cache:list", correct: false }
      - { value: "php bin/console cache:pools", correct: false }
      - { value: "php bin/console cache:pool:list", correct: true }
      - { value: "php bin/console debug:cache", correct: false }
    help: |
      The `cache:pool:list` command displays all configured cache pools.
      https://symfony.com/doc/current/cache.html#listing-available-cache-pools

  -
    question: |
      What is the purpose of `Symfony\\Component\\Cache\\Messenger\\EarlyExpirationMessage` in Symfony's cache component?
    answers:
      - { value: "To signal that a cache item has expired and should be removed.", correct: false }
      - { value: "To trigger asynchronous re-computation of a cache item's value before its full expiration.", correct: true }
      - { value: "To send a notification when a cache pool is full.", correct: false }
      - { value: "To log cache misses to a message queue.", correct: false }
    help: |
      `EarlyExpirationMessage` is dispatched when a cache item is elected for early expiration, triggering asynchronous re-computation of its value via a Messenger bus.
      https://symfony.com/doc/current/cache.html#asynchronous-cache

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods should you use to check if an asynchronously started process is still running?
    answers:
      - { value: "isAlive()", correct: false }
      - { value: "isRunning()", correct: true }
      - { value: "isExecuting()", correct: false }
      - { value: "getStatus()", correct: false }
    help: |
      The `isRunning()` method returns `true` if the process is still running, `false` otherwise.
      https://symfony.com/doc/current/components/process.html#running-processes-asynchronously

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is an alternative to `ObjectNormalizer` that directly reads and writes properties using PHP reflection, supporting public, private, and protected properties?
    answers:
      - { value: "GetSetMethodNormalizer", correct: false }
      - { value: "PropertyNormalizer", correct: true }
      - { value: "ReflectionNormalizer", correct: false }
      - { value: "ArrayNormalizer", correct: false }
    help: |
      `PropertyNormalizer` uses PHP reflection to directly access properties, including private and protected ones.
      https://symfony.com/doc/current/serializer.html#propertynormalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to attach a file from the filesystem to an email?
    answers:
      - { value: "attachFile()", correct: false }
      - { value: "addAttachment()", correct: false }
      - { value: "addPart(new DataPart(new File(...)))", correct: true }
      - { value: "attachFromPath()", correct: false }
    help: |
      Files can be attached using `addPart(new DataPart(new File('/path/to/file')))` or by passing a stream resource.
      https://symfony.com/doc/current/mailer.html#attaching-files

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to change the permissions (mode) of a file or directory?
    answers:
      - { value: "setPermissions()", correct: false }
      - { value: "changeMode()", correct: false }
      - { value: "chmod()", correct: true }
      - { value: "setMode()", correct: false }
    help: |
      The `chmod()` method changes the mode (permissions) of a file or directory.
      https://symfony.com/doc/current/components/filesystem.html#changing-file-permissions

  -
    question: |
      When using `Symfony\\Component\\Finder\\Finder`, which method allows you to limit the directory traversal depth (e.g., only direct children, or a specific range of depths)?
    answers:
      - { value: "maxDepth()", correct: false }
      - { value: "level()", correct: false }
      - { value: "depth()", correct: true }
      - { value: "limitDepth()", correct: false }
    help: |
      The `depth()` method restricts the directory traversal depth.
      https://symfony.com/doc/current/components/finder.html#limiting-the-traversal-depth

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Store` implementations saves locks on a Memcached server and does NOT support blocking operations?
    answers:
      - { value: "FlockStore", correct: false }
      - { value: "PdoStore", correct: false }
      - { value: "MemcachedStore", correct: true }
      - { value: "SemaphoreStore", correct: false }
    help: |
      `MemcachedStore` is a remote store that does not support blocking operations.
      https://symfony.com/doc/current/components/lock.html#available-stores

  -
    question: |
      What is the purpose of the `Symfony-Debug-Toolbar-Replace` HTTP header in Symfony?
    answers:
      - { value: "To disable the Web Debug Toolbar for a specific response.", correct: false }
      - { value: "To force the Web Debug Toolbar to refresh its content, especially during AJAX requests.", correct: true }
      - { value: "To indicate that the response contains debug information.", correct: false }
      - { value: "To specify a custom URL for the Web Debug Toolbar assets.", correct: false }
    help: |
      This header forces the Web Debug Toolbar to refresh, offering an alternative to the `ajax_replace` configuration.
      https://symfony.com/doc/current/profiler.html#manually-setting-the-replace-header

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Currencies` methods would you use to get the symbol for a specific currency (e.g., 'INR')?
    answers:
      - { value: "getCurrencySymbol('INR')", correct: false }
      - { value: "getSymbol('INR')", correct: true }
      - { value: "findSymbol('INR')", correct: false }
      - { value: "getCurrencySign('INR')", correct: false }
    help: |
      The `getSymbol()` method returns the symbol for a given currency code.
      https://symfony.com/doc/current/components/intl.html#retrieving-currency-names-and-symbols

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\ClockInterface` methods is used to get the current time as a `DatePoint` instance?
    answers:
      - { value: "getTime()", correct: false }
      - { value: "current()", correct: false }
      - { value: "now()", correct: true }
      - { value: "getTimestamp()", correct: false }
    help: |
      The `now()` method returns the current time as a `DatePoint` instance.
      https://symfony.com/doc/current/components/clock.html#getting-the-current-time

  -
    question: |
      When defining a custom `ExpressionLanguage` function, which callable argument of the `register()` method is executed when the expression is evaluated at runtime?
    answers:
      - { value: "compiler", correct: false }
      - { value: "evaluator", correct: true }
      - { value: "executor", correct: false }
      - { value: "runtime", correct: false }
    help: |
      The `evaluator` callable is executed when the expression is evaluated.
      https://symfony.com/doc/current/components/expression_language.html#registering-a-custom-function

  -
    question: |
      What is the purpose of the `Symfony\\Component\\ErrorHandler\\Exception\\FlattenException` class in Symfony's error handling?
    answers:
      - { value: "It is the base class for all HTTP-related exceptions.", correct: false }
      - { value: "It provides a simplified, serializable representation of any `Throwable` for error rendering.", correct: true }
      - { value: "It is used to log exceptions to various channels.", correct: false }
      - { value: "It allows re-throwing exceptions with a different message.", correct: false }
    help: |
      The `ErrorListener` converts thrown exceptions into a `FlattenException` object, which is a simplified representation suitable for rendering error pages.
      https://symfony.com/doc/current/components/http_kernel.html#the-errorlistener

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods should you use to execute a command and capture its output in real-time using a callback function?
    answers:
      - { value: "stream()", correct: false }
      - { value: "run() with a callback", correct: true }
      - { value: "listenOutput()", correct: false }
      - { value: "monitor()", correct: false }
    help: |
      The `run()` method accepts an optional callback function to receive real-time output.
      https://symfony.com/doc/current/components/process.html#capturing-real-time-output

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is specifically designed to work with classes that implement `Symfony\\Component\\Form\\FormInterface` and extracts/normalizes form errors according to the API Problem spec (RFC 7807)?
    answers:
      - { value: "FormNormalizer", correct: false }
      - { value: "ErrorNormalizer", correct: false }
      - { value: "FormErrorNormalizer", correct: true }
      - { value: "ConstraintViolationNormalizer", correct: false }
    help: |
      `FormErrorNormalizer` extracts and normalizes form errors according to RFC 7807.
      https://symfony.com/doc/current/serializer.html#form-errors

  -
    question: |
      When configuring Symfony Mailer, what is the purpose of the `framework.mailer.envelope.allowed_recipients` option?
    answers:
      - { value: "To define a list of recipients that will always receive emails, overriding others.", correct: false }
      - { value: "To specify a list of recipients (exact addresses or regex) that should bypass global email redirection rules.", correct: true }
      - { value: "To automatically add these recipients to every outgoing email.", correct: false }
      - { value: "To define a whitelist of domains for email addresses.", correct: false }
    help: |
      `allowed_recipients` specifies exceptions to the email redirection rule, allowing emails addressed to them to be sent to their original destination.
      https://symfony.com/doc/current/mailer.html#redirecting-all-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Path` methods is used to find the longest common base path among multiple given paths?
    answers:
      - { value: "getCommonPath()", correct: false }
      - { value: "findCommonRoot()", correct: false }
      - { value: "getLongestCommonBasePath()", correct: true }
      - { value: "getSharedRoot()", correct: false }
    help: |
      The `getLongestCommonBasePath()` method finds the longest common base path among multiple paths.
      https://symfony.com/doc/current/components/filesystem.html#finding-the-longest-common-base-path

  -
    question: |
      Which of the following `Symfony\\Component\\Cache\\Adapter` classes is optimized for tag-based cache invalidation by leveraging filesystem links?
    answers:
      - { value: "FilesystemAdapter", correct: false }
      - { value: "TagAwareFilesystemAdapter", correct: false }
      - { value: "FilesystemTagAwareAdapter", correct: true }
      - { value: "LinkedFilesystemAdapter", correct: false }
    help: |
      `FilesystemTagAwareAdapter` is a specialized adapter for tag-based cache invalidation using filesystem links.
      https://symfony.com/doc/current/components/cache/adapters/filesystem_adapter.html#filesystemtagawareadapter

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Store` implementations saves locks in an SQL database and requires a Doctrine DBAL Connection instance?
    answers:
      - { value: "PdoStore", correct: false }
      - { value: "DoctrineDbalStore", correct: true }
      - { value: "SqlStore", correct: false }
      - { value: "DatabaseStore", correct: false }
    help: |
      `DoctrineDbalStore` uses a Doctrine DBAL Connection instance for database-backed locks.
      https://symfony.com/doc/current/components/lock.html#doctrinedbalstore

  -
    question: |
      What is the default value for the `toolbar.enabled` option in `WebProfilerBundle` configuration?
    answers:
      - { value: "true", correct: false }
      - { value: "false", correct: true }
      - { value: "null", correct: false }
      - { value: "Depends on APP_DEBUG", correct: false }
    help: |
      The `toolbar.enabled` option defaults to `false`. It is typically enabled in `dev` and `test` environments.
      https://symfony.com/doc/current/reference/configuration/web_profiler.html#toolbar-enabled

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Languages` methods would you use to check if a given language code (e.g., 'en', 'fr') exists and is valid?
    answers:
      - { value: "isValid('en')", correct: false }
      - { value: "exists('en')", correct: true }
      - { value: "hasLanguage('en')", correct: false }
      - { value: "check('en')", correct: false }
    help: |
      The `exists()` method checks if a given language code is valid.
      https://symfony.com/doc/current/components/intl.html#validating-language-codes

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` application types is typically returned from `public/index.php` for a standard Symfony web application?
    answers:
      - { value: "Symfony\\Component\\HttpFoundation\\Response", correct: false }
      - { value: "Symfony\\Component\\Console\\Application", correct: false }
      - { value: "Symfony\\Component\\HttpKernel\\Kernel", correct: true }
      - { value: "callable", correct: false }
    help: |
      For a standard Symfony web application, the `public/index.php` front-controller returns a `Kernel` instance.
      https://symfony.com/doc/current/components/runtime.html#http-front-controller

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\MockClock` methods allows you to freeze the global clock at a specific `DateTimeImmutable` instance for testing purposes?
    answers:
      - { value: "freezeTime(new DateTimeImmutable())", correct: false }
      - { value: "setNow(new DateTimeImmutable())", correct: false }
      - { value: "mockTime(new DateTimeImmutable())", correct: true }
      - { value: "fixTime(new DateTimeImmutable())", correct: false }
    help: |
      The `mockTime()` method of `ClockSensitiveTrait` (used with `MockClock`) allows setting the clock to a specific `DateTimeImmutable` instance.
      https://symfony.com/doc/current/components/clock.html#testing-time-sensitive-logic

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for the null-safe property or method access (e.g., `object?.property`)?
    answers:
      - { value: "?.", correct: true }
      - { value: "->", correct: false }
      - { value: "??", correct: false }
      - { value: "!:.", correct: false }
    help: |
      The `?.` operator is the null-safe operator in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#null-safe-and-null-coalescing-operators

  -
    question: |
      When defining a configuration for a Symfony bundle, which method of `NodeDefinition` allows you to add descriptive information that will be printed as a comment when dumping the configuration tree with `config:dump-reference`?
    answers:
      - { value: "comment()", correct: false }
      - { value: "description()", correct: false }
      - { value: "info()", correct: true }
      - { value: "help()", correct: false }
    help: |
      The `info()` method adds descriptive information to configuration options.
      https://symfony.com/doc/current/components/config/definition.html#adding-inline-documentation

  -
    question: |
      Which of the following `env()` processors would you use to parse the query string part of a URL from an environment variable and extract a specific parameter (e.g., `timeout`)?
    answers:
      - { value: "env(query:timeout:MY_URL_VAR)", correct: false }
      - { value: "env(url_param:timeout:MY_URL_VAR)", correct: false }
      - { value: "env(key:timeout:query_string:MY_URL_VAR)", correct: true }
      - { value: "env(param:timeout:url:MY_URL_VAR)", correct: false }
    help: |
      The `env(key:KEY:query_string:VAR)` processor extracts a specific key from the query string of a URL.
      https://symfony.com/doc/current/configuration/env_var_processors.html#extracting-query-string-parameters

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods allows you to prevent specific POSIX signals from being propagated to the child process?
    answers:
      - { value: "blockSignals()", correct: false }
      - { value: "ignoreSignals()", correct: false }
      - { value: "setIgnoredSignals()", correct: true }
      - { value: "disableSignalHandling()", correct: false }
    help: |
      The `setIgnoredSignals()` method prevents specific POSIX signals from being propagated to the child process.
      https://symfony.com/doc/current/components/process.html#ignoring-signals

  -
    question: |
      What is the purpose of "Serialization Groups" in the Symfony Serializer component?
    answers:
      - { value: "To define the order in which properties are serialized.", correct: false }
      - { value: "To include or exclude properties based on the serialization context, allowing different views of an object.", correct: true }
      - { value: "To group related objects together during serialization.", correct: false }
      - { value: "To specify the format (e.g., JSON, XML) for different parts of an object.", correct: false }
    help: |
      Serialization groups allow you to conditionally include or exclude properties based on the serialization context.
      https://symfony.com/doc/current/serializer.html#using-serialization-groups

  -
    question: |
      Which of the following `Symfony\\Component\\Messenger\\Stamp` classes is used to configure the serialization groups that should be applied by the transport?
    answers:
      - { value: "SerializationGroupStamp", correct: false }
      - { value: "ContextStamp", correct: false }
      - { value: "SerializerStamp", correct: true }
      - { value: "MessageContextStamp", correct: false }
    help: |
      The `SerializerStamp` is used to configure the serialization groups for the transport.
      https://symfony.com/doc/current/components/messenger.html#built-in-stamps

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Header` classes is used to add custom metadata (key-value pairs) to an email, which can be used by supported third-party transports for tracking or workflows?
    answers:
      - { value: "CustomHeader", correct: false }
      - { value: "TrackingHeader", correct: false }
      - { value: "MetadataHeader", correct: true }
      - { value: "X-Data-Header", correct: false }
    help: |
      `MetadataHeader` is used to add custom key-value metadata to an email.
      https://symfony.com/doc/current/mailer.html#adding-tags-and-metadata-to-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Path` methods is used to concatenate multiple path segments into a single, normalized path, correctly handling separators?
    answers:
      - { value: "concat()", correct: false }
      - { value: "merge()", correct: false }
      - { value: "join()", correct: true }
      - { value: "combine()", correct: false }
    help: |
      The `join()` method concatenates path segments into a single, normalized path.
      https://symfony.com/doc/current/components/filesystem.html#joining-paths

  -
    question: |
      What is the purpose of `Symfony\\Component\\Lock\\Store\\FlockStore`?
    answers:
      - { value: "It uses a Redis server to store locks.", correct: false }
      - { value: "It uses the local file system to create locks and supports blocking operations.", correct: true }
      - { value: "It stores locks in memory and is useful for testing.", correct: false }
      - { value: "It uses a database table to manage locks.", correct: false }
    help: |
      `FlockStore` uses the local file system for locks and supports blocking.
      https://symfony.com/doc/current/components/lock.html#flockstore

  -
    question: |
      Which of the following commands would you use to view the latest log messages from a Symfony local web server running in the background?
    answers:
      - { value: "symfony server:logs", correct: false }
      - { value: "symfony server:read-log", correct: false }
      - { value: "symfony server:log", correct: true }
      - { value: "symfony server:tail", correct: false }
    help: |
      The `symfony server:log` command displays the latest log messages from the background server.
      https://symfony.com/doc/current/setup/symfony_cli.html#managing-the-background-server

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get the raw UTC offset in seconds for a given timezone ID (e.g., 'America/Buenos_Aires')?
    answers:
      - { value: "getUtcOffset('America/Buenos_Aires')", correct: false }
      - { value: "getRawOffset('America/Buenos_Aires')", correct: true }
      - { value: "getOffsetSeconds('America/Buenos_Aires')", correct: false }
      - { value: "getRawUtcOffset('America/Buenos_Aires')", correct: false }
    help: |
      The `getRawOffset()` method returns the raw UTC offset in seconds.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\ClockInterface` methods allows you to simulate time progression (e.g., instantly advance time by a certain duration)?
    answers:
      - { value: "advance()", correct: false }
      - { value: "sleep()", correct: true }
      - { value: "fastForward()", correct: false }
      - { value: "passTime()", correct: false }
    help: |
      The `sleep()` method instantly changes time as if the specified duration has passed.
      https://symfony.com/doc/current/components/clock.html#sleeping

  -
    question: |
      What is the purpose of `Symfony\\Component\\ExpressionLanguage\\Parser::IGNORE_UNKNOWN_VARIABLES` flag when linting an expression?
    answers:
      - { value: "It converts unknown variables to null instead of throwing an error.", correct: false }
      - { value: "It allows expressions to contain undefined variables without throwing a `SyntaxError` exception.", correct: true }
      - { value: "It automatically defines any unknown variables found in the expression.", correct: false }
      - { value: "It only lints expressions that contain known variables.", correct: false }
    help: |
      `IGNORE_UNKNOWN_VARIABLES` prevents a `SyntaxError` exception when an expression contains undefined variables.
      https://symfony.com/doc/current/components/expression_language.html#linting-expressions

  -
    question: |
      Which of the following console commands would you use to force the resolution of environment variables when linting the Symfony service container, causing the command to fail if any are missing?
    answers:
      - { value: "php bin/console lint:container --strict-env", correct: false }
      - { value: "php bin/console lint:container --resolve-env-vars", correct: true }
      - { value: "php bin/console lint:container --check-env", correct: false }
      - { value: "php bin/console lint:container --validate-env", correct: false }
    help: |
      The `--resolve-env-vars` option forces resolution of environment variables, failing if any are missing.
      https://symfony.com/doc/current/service_container.html#linting-the-container

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods is used to disable the fetching of standard output and error output, which can save memory for processes with large outputs?
    answers:
      - { value: "suppressOutput()", correct: false }
      - { value: "muteOutput()", correct: false }
      - { value: "disableOutput()", correct: true }
      - { value: "ignoreOutput()", correct: false }
    help: |
      The `disableOutput()` method prevents fetching of standard output and error output.
      https://symfony.com/doc/current/components/process.html#disabling-output

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is specifically designed to normalize `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Header` classes is used to add a custom tag to an email, often used by supported third-party transports for grouping or tracking?
    answers:
      - { value: "CategoryHeader", correct: false }
      - { value: "LabelHeader", correct: false }
      - { value: "TagHeader", correct: true }
      - { value: "X-Tag-Header", correct: false }
    help: |
      `TagHeader` is used to attach a custom tag to an email.
      https://symfony.com/doc/current/mailer.html#adding-tags-and-metadata-to-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to append content to an existing file, creating the file and its containing directory if they don't exist?
    answers:
      - { value: "addToFile()", correct: false }
      - { value: "appendToFile()", correct: true }
      - { value: "writeAppend()", correct: false }
      - { value: "putContentsAppend()", correct: false }
    help: |
      The `appendToFile()` method adds new contents at the end of a file.
      https://symfony.com/doc/current/components/filesystem.html#appending-content-to-a-file

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to search for files and directories whose paths match specific strings or regular expressions?
    answers:
      - { value: "matchPath()", correct: false }
      - { value: "path()", correct: true }
      - { value: "filterPath()", correct: false }
      - { value: "wherePath()", correct: false }
    help: |
      The `path()` method filters files and directories by their path.
      https://symfony.com/doc/current/components/finder.html#filtering-by-path

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Store` implementations saves locks on a Redis server but does NOT support blocking operations?
    answers:
      - { value: "FlockStore", correct: false }
      - { value: "RedisStore", correct: true }
      - { value: "SemaphoreStore", correct: false }
      - { value: "ZookeeperStore", correct: false }
    help: |
      `RedisStore` saves locks on a Redis server and does not support blocking.
      https://symfony.com/doc/current/components/lock.html#available-stores

  -
    question: |
      What is the purpose of the `profiler.collect_parameter` option in Symfony's `framework` configuration?
    answers:
      - { value: "To define a query parameter that, when present, enables the profiler's data collection.", correct: true }
      - { value: "To specify a parameter that the profiler should collect from every request.", correct: false }
      - { value: "To limit the number of parameters displayed in the profiler's request panel.", correct: false }
      - { value: "To enable the profiler only for requests containing this parameter in the URL.", correct: false }
    help: |
      `collect_parameter` allows you to enable profiler collection only when a specific query parameter is present.
      https://symfony.com/doc/current/profiler.html#conditionally-enabling-the-profiler

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Locales` methods would you use to get the name of a specific locale (e.g., 'zh_Hans_MO') translated into a different locale (e.g., 'de')?
    answers:
      - { value: "getName('zh_Hans_MO', 'de')", correct: true }
      - { value: "getLocalizedName('zh_Hans_MO', 'de')", correct: false }
      - { value: "translateName('zh_Hans_MO', 'de')", correct: false }
      - { value: "getLocaleName('zh_Hans_MO', 'de')", correct: false }
    help: |
      The `getName()` method can take an optional second argument for the translation locale.
      https://symfony.com/doc/current/components/intl.html#accessing-locale-names

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` application types is typically returned from `bin/console` for a Symfony console application with multiple commands?
    answers:
      - { value: "Symfony\\Component\\Console\\Command\\Command", correct: false }
      - { value: "Symfony\\Component\\Console\\Application", correct: true }
      - { value: "callable", correct: false }
      - { value: "Symfony\\Component\\HttpKernel\\Kernel", correct: false }
    help: |
      For console applications with multiple commands, `bin/console` returns a `Symfony\\Component\\Console\\Application` instance.
      https://symfony.com/doc/current/components/runtime.html#console-application

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a Unix timestamp, supporting both positive and negative timestamps?
    answers:
      - { value: "fromTimestamp()", correct: false }
      - { value: "createFromTimestamp()", correct: true }
      - { value: "fromUnixTimestamp()", correct: false }
      - { value: "createFromUnixTimestamp()", correct: false }
    help: |
      The static `createFromTimestamp()` method creates `DatePoint` instances from Unix timestamps.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-from-a-timestamp

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for checking array containment (strict comparison)?
    answers:
      - { value: "has", correct: false }
      - { value: "in", correct: true }
      - { value: "contains", correct: false }
      - { value: "includes", correct: false }
    help: |
      The `in` operator checks for array containment using strict comparison.
      https://symfony.com/doc/current/reference/formats/expression_language.html#array-operators

  -
    question: |
      Which of the following `env()` processors would you use to URL-encode the content of an environment variable?
    answers:
      - { value: "env(encode_url:MY_VAR)", correct: false }
      - { value: "env(urlencode:MY_VAR)", correct: true }
      - { value: "env(uri_encode:MY_VAR)", correct: false }
      - { value: "env(escape_url:MY_VAR)", correct: false }
    help: |
      The `urlencode:` processor URL-encodes the content of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#url-encode-environment-variables

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods allows you to send a POSIX signal (e.g., `SIGKILL`) to a running process?
    answers:
      - { value: "sendSignal()", correct: false }
      - { value: "kill()", correct: false }
      - { value: "signal()", correct: true }
      - { value: "terminate()", correct: false }
    help: |
      The `signal()` method sends a POSIX signal to the process.
      https://symfony.com/doc/current/components/process.html#sending-posix-signals-to-the-process

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is an alternative to `ObjectNormalizer` that reads and writes object content using public getter, setter, hasser, isser, and canner methods?
    answers:
      - { value: "PropertyNormalizer", correct: false }
      - { value: "MethodNormalizer", correct: false }
      - { value: "GetSetMethodNormalizer", correct: true }
      - { value: "AccessorNormalizer", correct: false }
    help: |
      `GetSetMethodNormalizer` uses public getter and setter methods.
      https://symfony.com/doc/current/serializer.html#getsetmethodnormalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to encrypt an entire email message, including attachments, using S/MIME?
    answers:
      - { value: "SMimeSigner", correct: false }
      - { value: "SMimeEncrypter", correct: true }
      - { value: "EmailEncrypter", correct: false }
      - { value: "MimeEncrypter", correct: false }
    help: |
      `SMimeEncrypter` is used for encrypting email messages with S/MIME.
      https://symfony.com/doc/current/mailer.html#encrypting-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to change the group of a file or directory?
    answers:
      - { value: "setGroup()", correct: false }
      - { value: "changeGroup()", correct: false }
      - { value: "chgrp()", correct: true }
      - { value: "setFileGroup()", correct: false }
    help: |
      The `chgrp()` method changes the group of a file or directory.
      https://symfony.com/doc/current/components/filesystem.html#changing-file-group

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by their last modified date?
    answers:
      - { value: "sortByDate()", correct: false }
      - { value: "sortByModifiedTime()", correct: true }
      - { value: "sortByTimestamp()", correct: false }
      - { value: "orderByDate()", correct: false }
    help: |
      The `sortByModifiedTime()` method sorts the results by their last modified date.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Store` implementations uses PostgreSQL's Advisory Locks and automatically releases locks at the end of a session if the client fails to unlock?
    answers:
      - { value: "PdoStore", correct: false }
      - { value: "DoctrineDbalStore", correct: false }
      - { value: "PostgreSqlStore", correct: true }
      - { value: "RedisStore", correct: false }
    help: |
      `PostgreSqlStore` relies on PostgreSQL Advisory Locks and releases them at the end of the session.
      https://symfony.com/doc/current/components/lock.html#postgresqlstore

  -
    question: |
      Which of the following `Symfony\\Component\\HttpKernel\\Profiler\\Profiler` methods allows you to programmatically disable the Symfony Profiler for a specific request?
    answers:
      - { value: "deactivate()", correct: false }
      - { value: "disable()", correct: true }
      - { value: "stop()", correct: false }
      - { value: "turnOff()", correct: false }
    help: |
      The `disable()` method disables the Symfony Profiler programmatically.
      https://symfony.com/doc/current/profiler.html#disabling-the-profiler

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Countries` methods would you use to get a list of all country names translated into a specific locale (e.g., 'de' for German)?
    answers:
      - { value: "getNames('de')", correct: true }
      - { value: "getLocalizedNames('de')", correct: false }
      - { value: "getTranslatedNames('de')", correct: false }
      - { value: "getAllNames('de')", correct: false }
    help: |
      The `getNames()` method can take an optional locale argument to translate country names.
      https://symfony.com/doc/current/components/intl.html#retrieving-country-names

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      What is the purpose of `Symfony\\Component\\Clock\\ClockAwareTrait`?
    answers:
      - { value: "To automatically inject the `ClockInterface` into a service.", correct: false }
      - { value: "To make a service aware of the current time, allowing for easier testing with `MockClock`.", correct: true }
      - { value: "To provide a default implementation of `ClockInterface`.", correct: false }
      - { value: "To enable time-based caching for a service.", correct: false }
    help: |
      `ClockAwareTrait` makes a service aware of the current time, enabling testability with `MockClock`.
      https://symfony.com/doc/current/components/clock.html#making-your-services-time-aware

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for checking if a value is within a numeric range?
    answers:
      - { value: "in range", correct: false }
      - { value: "between", correct: false }
      - { value: "..", correct: true }
      - { value: "range()", correct: false }
    help: |
      The `..` operator is used for defining numeric ranges.
      https://symfony.com/doc/current/reference/formats/expression_language.html#numeric-operators

  -
    question: |
      Which of the following `env()` processors would you use to extract a specific key's value from an environment variable that contains structured data (like JSON)?
    answers:
      - { value: "env(get:KEY:VAR)", correct: false }
      - { value: "env(extract:KEY:VAR)", correct: false }
      - { value: "env(key:KEY:VAR)", correct: true }
      - { value: "env(value:KEY:VAR)", correct: false }
    help: |
      The `env(key:KEY:VAR)` processor retrieves a specific key's value from structured data in an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#extracting-a-key-from-an-environment-variable

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods allows you to set an idle timeout, which considers the time since the last output was produced by the process?
    answers:
      - { value: "setNoOutputTimeout()", correct: false }
      - { value: "setIdleTimeout()", correct: true }
      - { value: "setQuietTimeout()", correct: false }
      - { value: "setActivityTimeout()", correct: false }
    help: |
      The `setIdleTimeout()` method sets an idle timeout for the process.
      https://symfony.com/doc/current/components/process.html#process-idle-timeout

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert objects implementing `Symfony\\Contracts\\Translation\\TranslatableInterface` into a translated string?
    answers:
      - { value: "TranslationNormalizer", correct: false }
      - { value: "LocaleNormalizer", correct: false }
      - { value: "TranslatableNormalizer", correct: true }
      - { value: "MessageNormalizer", correct: false }
    help: |
      `TranslatableNormalizer` converts `TranslatableInterface` objects to translated strings.
      https://symfony.com/doc/current/serializer.html#translatable-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using S/MIME?
    answers:
      - { value: "SMimeSigner", correct: true }
      - { value: "SMimeHasher", correct: false }
      - { value: "EmailSigner", correct: false }
      - { value: "MimeSigner", correct: false }
    help: |
      `SMimeSigner` is used to sign email messages with S/MIME.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to specify multiple directories as search locations?
    answers:
      - { value: "in(['dir1', 'dir2'])", correct: true }
      - { value: "addDirs(['dir1', 'dir2'])", correct: false }
      - { value: "from(['dir1', 'dir2'])", correct: false }
      - { value: "searchIn(['dir1', 'dir2'])", correct: false }
    help: |
      The `in()` method accepts an array of directories or can be chained for multiple locations.
      https://symfony.com/doc/current/components/finder.html#specifying-search-locations

  -
    question: |
      What is the purpose of the `Symfony\\Component\\Cache\\Adapter\\ChainAdapter`?
    answers:
      - { value: "To automatically select the best cache adapter based on environment.", correct: false }
      - { value: "To combine multiple cache adapters into a single pool, leveraging their strengths (e.g., fast in-memory and persistent storage).", correct: true }
      - { value: "To create a distributed cache system across multiple servers.", correct: false }
      - { value: "To provide a fallback mechanism when a primary cache adapter fails.", correct: false }
    help: |
      `ChainAdapter` combines multiple cache adapters into a single pool.
      https://symfony.com/doc/current/components/cache/adapters/chain_adapter.html

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Lock` methods is used to check the remaining lifetime of an expiring lock in seconds?
    answers:
      - { value: "getTtl()", correct: false }
      - { value: "getRemainingLifetime()", correct: true }
      - { value: "getExpiry()", correct: false }
      - { value: "getLifetimeRemaining()", correct: false }
    help: |
      The `getRemainingLifetime()` method returns the remaining lifetime of the lock in seconds.
      https://symfony.com/doc/current/components/lock.html#checking-the-remaining-lifetime

  -
    question: |
      Which of the following commands would you use to list all available types that can be utilized for autowiring within the Symfony application's service definitions?
    answers:
      - { value: "php bin/console debug:autowiring", correct: true }
      - { value: "php bin/console debug:services --autowire", correct: false }
      - { value: "php bin/console autowiring:list", correct: false }
      - { value: "php bin/console container:autowiring", correct: false }
    help: |
      The `debug:autowiring` command displays a comprehensive list of all available types for autowiring.
      https://symfony.com/doc/current/service_container/debug.html#listing-autowirable-types

  -
    question: |
      What is the purpose of `Symfony\\Component\\Translation\\LocaleAwareInterface`?
    answers:
      - { value: "To allow a service to automatically translate its internal messages.", correct: false }
      - { value: "To define a contract for services that need to be informed about and manage the current application locale.", correct: true }
      - { value: "To provide a mechanism for storing user-specific locale preferences.", correct: false }
      - { value: "To enable locale-specific routing for a service.", correct: false }
    help: |
      `LocaleAwareInterface` defines a contract for services that need to be informed about the current application locale.
      https://symfony.com/doc/current/reference/dic_tags.html#locale-aware-services

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance relative to a reference `DateTimeImmutable` object?
    answers:
      - { value: "fromReference()", correct: false }
      - { value: "createRelative()", correct: false }
      - { value: "new DatePoint('+1month', reference: $referenceDate)", correct: true }
      - { value: "relativeTo()", correct: false }
    help: |
      The `DatePoint` constructor allows specifying a `reference` `DateTimeImmutable` object.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` functions is used to check if a value is between a minimum and maximum (inclusive) in a numeric range?
    answers:
      - { value: "range(min, max)", correct: false }
      - { value: "between(value, min, max)", correct: false }
      - { value: "value in min..max", correct: true }
      - { value: "is_in_range(value, min, max)", correct: false }
    help: |
      The `..` operator is used to define a range, and the `in` operator checks if a value is within that range.
      https://symfony.com/doc/current/reference/formats/expression_language.html#numeric-operators

  -
    question: |
      What is the purpose of the `framework.profiler.collect_parameter` option in Symfony's `framework` configuration?
    answers:
      - { value: "To define a query parameter that, when present, enables the profiler's data collection.", correct: true }
      - { value: "To specify a parameter that the profiler should collect from every request.", correct: false }
      - { value: "To limit the number of parameters displayed in the profiler's request panel.", correct: false }
      - { value: "To enable the profiler only for requests containing this parameter in the URL.", correct: false }
    help: |
      `collect_parameter` allows you to enable profiler collection only when a specific query parameter is present.
      https://symfony.com/doc/current/profiler.html#conditionally-enabling-the-profiler

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Currencies` methods would you use to check if a given currency code (e.g., 'USD', 'EUR') exists and is valid?
    answers:
      - { value: "isValidCurrency('USD')", correct: false }
      - { value: "exists('USD')", correct: true }
      - { value: "hasCurrency('USD')", correct: false }
      - { value: "checkCurrency('USD')", correct: false }
    help: |
      The `exists()` method checks if a given currency code is valid.
      https://symfony.com/doc/current/components/intl.html#validating-currency-codes

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines whether the application is running in a web environment?
    answers:
      - { value: "kernel.runtime_mode.web", correct: true }
      - { value: "runtime.web_mode", correct: false }
      - { value: "app.is_web", correct: false }
      - { value: "env.web", correct: false }
    help: |
      The `kernel.runtime_mode.web` parameter indicates whether the application is running in a web environment.
      https://symfony.com/doc/current/reference/configuration/kernel.html#kernel-runtime-mode-web

  -
    question: |
      What is the purpose of the `Symfony\\Component\\Clock\\Test\\ClockSensitiveTrait` in PHPUnit tests?
    answers:
      - { value: "To automatically measure the execution time of time-sensitive tests.", correct: false }
      - { value: "To provide methods for mocking PHP's built-in time functions and the global clock.", correct: true }
      - { value: "To ensure that all time-related assertions are accurate.", correct: false }
      - { value: "To generate random timestamps for testing purposes.", correct: false }
    help: |
      `ClockSensitiveTrait` provides methods like `mockTime()` to control time in tests.
      https://symfony.com/doc/current/components/clock.html#testing-time-sensitive-logic

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical XOR?
    answers:
      - { value: "^", correct: true }
      - { value: "xor", correct: true }
      - { value: "&&", correct: false }
      - { value: "||", correct: false }
    help: |
      Both `^` and `xor` are used for logical XOR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to cast an environment variable's value to an integer?
    answers:
      - { value: "env(integer:MY_VAR)", correct: false }
      - { value: "env(int:MY_VAR)", correct: true }
      - { value: "env(as_int:MY_VAR)", correct: false }
      - { value: "env(to_int:MY_VAR)", correct: false }
    help: |
      The `int:` processor casts an environment variable's value to an integer.
      https://symfony.com/doc/current/configuration/env_var_processors.html#casting-environment-variables-to-integer

  -
    question: |
      What is the purpose of the `Symfony\\Component\\Process\\ExecutableFinder` class?
    answers:
      - { value: "To execute system commands.", correct: false }
      - { value: "To find the absolute path of an executable on the system.", correct: true }
      - { value: "To manage background processes.", correct: false }
      - { value: "To check if a command is available in the system's PATH.", correct: false }
    help: |
      `ExecutableFinder` is used to locate the absolute path of an executable.
      https://symfony.com/doc/current/components/process.html#finding-executables

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to normalize `DateTimeInterface` objects to strings, integers, or floats, with options for format and timezone?
    answers:
      - { value: "DateNormalizer", correct: false }
      - { value: "DateTimeNormalizer", correct: true }
      - { value: "TimeNormalizer", correct: false }
      - { value: "ObjectNormalizer", correct: false }
    help: |
      `DateTimeNormalizer` handles the normalization of `DateTimeInterface` objects.
      https://symfony.com/doc/current/serializer.html#datetime-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the subject of an email?
    answers:
      - { value: "setSubject()", correct: false }
      - { value: "subject()", correct: true }
      - { value: "withSubject()", correct: false }
      - { value: "addSubject()", correct: false }
    help: |
      The `subject()` method sets the email's subject.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to rename a single file or directory?
    answers:
      - { value: "move()", correct: false }
      - { value: "changeName()", correct: false }
      - { value: "rename()", correct: true }
      - { value: "alterName()", correct: false }
    help: |
      The `rename()` method changes the name of a single file or directory.
      https://symfony.com/doc/current/components/filesystem.html#renaming-files-and-directories

  -
    question: |
      What is the purpose of the `framework.lock.resources` configuration option in Symfony?
    answers:
      - { value: "To define a list of files that should be locked during deployment.", correct: false }
      - { value: "To specify a map of named lock stores with their DSNs or service IDs.", correct: true }
      - { value: "To configure the default lock strategy for the application.", correct: false }
      - { value: "To enable or disable the Lock component globally.", correct: false }
    help: |
      `resources` defines a map of lock stores to be created by the framework extension, with the name as key and DSN or service id as value.
      https://symfony.com/doc/current/reference/configuration/framework.html#resources

  -
    question: |
      Which of the following commands would you use to display the *default* configuration values defined by Symfony for the `web_profiler` bundle?
    answers:
      - { value: "php bin/console config:dump-reference web_profiler", correct: true }
      - { value: "php bin/console debug:config web_profiler --default", correct: false }
      - { value: "php bin/console web_profiler:config:default", correct: false }
      - { value: "php bin/console show:default-config web_profiler", correct: false }
    help: |
      The `config:dump-reference` command displays the default configuration values.
      https://symfony.com/doc/current/reference/configuration/web_profiler.html#displaying-the-webprofilerbundle-configuration

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Scripts` methods would you use to check if a given script code (e.g., 'Latn', 'Hans') exists and is valid?
    answers:
      - { value: "isValidScript('Latn')", correct: false }
      - { value: "exists('Latn')", correct: true }
      - { value: "hasScript('Latn')", correct: false }
      - { value: "checkScript('Latn')", correct: false }
    help: |
      The `exists()` method checks if a given script code is valid.
      https://symfony.com/doc/current/components/intl.html#validating-script-codes

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the path of `.env` files?
    answers:
      - { value: "env_path", correct: false }
      - { value: "dotenv_dir", correct: false }
      - { value: "dotenv_path", correct: true }
      - { value: "env_file_path", correct: false }
    help: |
      The `dotenv_path` option defines the path of dot-env files.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to set the microsecond part of the date?
    answers:
      - { value: "setMicroseconds()", correct: false }
      - { value: "setMicrosecond()", correct: true }
      - { value: "withMicroseconds()", correct: false }
      - { value: "addMicroseconds()", correct: false }
    help: |
      The `setMicrosecond()` method sets the microsecond part of a `DatePoint` object.
      https://symfony.com/doc/current/components/clock.html#setting-and-getting-microseconds

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical AND?
    answers:
      - { value: "and", correct: true }
      - { value: "&&", correct: true }
      - { value: "&", correct: false }
      - { value: "xor", correct: false }
    help: |
      Both `and` and `&&` are used for logical AND in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `DateTimeInterface` objects to strings, integers, or floats?
    answers:
      - { value: "DateNormalizer", correct: false }
      - { value: "DateTimeNormalizer", correct: true }
      - { value: "TimeNormalizer", correct: false }
      - { value: "ObjectNormalizer", correct: false }
    help: |
      `DateTimeNormalizer` is specifically for `DateTimeInterface` objects.
      https://symfony.com/doc/current/serializer.html#datetime-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the HTML content of an email?
    answers:
      - { value: "setHtmlBody()", correct: false }
      - { value: "html()", correct: true }
      - { value: "addHtml()", correct: false }
      - { value: "withHtml()", correct: false }
    help: |
      The `html()` method sets the HTML content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to copy a single file from a source to a destination, with an option to force overwrite?
    answers:
      - { value: "copyFile()", correct: false }
      - { value: "duplicate()", correct: false }
      - { value: "copy()", correct: true }
      - { value: "cloneFile()", correct: false }
    help: |
      The `copy()` method copies a single file and has an optional `overwrite` argument.
      https://symfony.com/doc/current/components/filesystem.html#copying-files

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines whether looking for `.env` files should be disabled?
    answers:
      - { value: "disable_env", correct: false }
      - { value: "no_dotenv", correct: false }
      - { value: "disable_dotenv", correct: true }
      - { value: "ignore_env_files", correct: false }
    help: |
      The `disable_dotenv` option disables looking for `.env` files.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to cast an environment variable's value to a string?
    answers:
      - { value: "env(text:MY_VAR)", correct: false }
      - { value: "env(str:MY_VAR)", correct: false }
      - { value: "env(string:MY_VAR)", correct: true }
      - { value: "env(as_string:MY_VAR)", correct: false }
    help: |
      The `string:` processor explicitly casts an environment variable's value to a string.
      https://symfony.com/doc/current/configuration/env_var_processors.html#casting-environment-variables-to-string

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods allows you to run a command synchronously and wait for its termination, optionally with a callback for real-time output?
    answers:
      - { value: "execute()", correct: false }
      - { value: "run()", correct: true }
      - { value: "waitAndRun()", correct: false }
      - { value: "syncRun()", correct: false }
    help: |
      The `run()` method executes the process synchronously and waits for its termination.
      https://symfony.com/doc/current/components/process.html#running-processes-synchronously

  -
    question: |
      What is the purpose of "Discriminator Maps" in the Symfony Serializer component?
    answers:
      - { value: "To define which properties should be ignored during serialization.", correct: false }
      - { value: "To map an interface or abstract class to concrete classes based on a 'type' property during deserialization of polymorphic objects.", correct: true }
      - { value: "To specify different serialization groups for different object types.", correct: false }
      - { value: "To automatically convert property names between different casing styles.", correct: false }
    help: |
      Discriminator maps are used to handle polymorphic objects during deserialization by mapping a type property to concrete classes.
      https://symfony.com/doc/current/serializer.html#discriminator-map

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to read the entire content of a file into a string, throwing an exception if the path is not readable or points to a directory?
    answers:
      - { value: "getFileContents()", correct: false }
      - { value: "read()", correct: false }
      - { value: "readFile()", correct: true }
      - { value: "loadContents()", correct: false }
    help: |
      The `readFile()` method reads the entire content of a file into a string with robust error handling.
      https://symfony.com/doc/current/components/filesystem.html#reading-file-contents

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their last modified date (e.g., 'since yesterday', '>= 2018-01-01')?
    answers:
      - { value: "modified()", correct: false }
      - { value: "date()", correct: true }
      - { value: "lastModified()", correct: false }
      - { value: "filterDate()", correct: false }
    help: |
      The `date()` method filters files by their last modified date.
      https://symfony.com/doc/current/components/finder.html#filtering-by-date

  -
    question: |
      What is the purpose of `Symfony\\Component\\Cache\\ConfigCache`?
    answers:
      - { value: "To cache database query results.", correct: false }
      - { value: "To manage cached files based on resource freshness, regenerating them only when source resources are modified.", correct: true }
      - { value: "To store application configuration in a high-performance cache.", correct: false }
      - { value: "To provide a simple key-value store for application data.", correct: false }
    help: |
      `ConfigCache` manages caching of configuration resources, regenerating cached files only when source resources are modified.
      https://symfony.com/doc/current/components/config/caching.html

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Lock` methods is used to prevent the lock from being automatically released when its object is destroyed, requiring manual release?
    answers:
      - { value: "disableAutoRelease()", correct: false }
      - { value: "setAutoRelease(false)", correct: true }
      - { value: "keepLock()", correct: false }
      - { value: "persist()", correct: false }
    help: |
      Setting `autoRelease` to `false` in `createLock()` or using `setAutoRelease(false)` prevents automatic release.
      https://symfony.com/doc/current/components/lock.html#disabling-automatic-release

  -
    question: |
      Which of the following commands would you use to start the Symfony local web server on a specific port (e.g., 4321) and route all requests through a designated front controller file (e.g., `front.php`)?
    answers:
      - { value: "symfony server:run --port=4321 --entrypoint=front.php", correct: false }
      - { value: "symfony server:start --port=4321 --passthru=front.php", correct: true }
      - { value: "symfony server:serve --port=4321 --router=front.php", correct: false }
      - { value: "symfony server:listen --port=4321 --front=front.php", correct: false }
    help: |
      The `--port` and `--passthru` options are used to specify the port and front controller.
      https://symfony.com/doc/current/create_framework/front_controller.html#starting-the-local-web-server

  -
    question: |
      What is the purpose of `Symfony\\Component\\Intl\\Languages::getAlpha3Code()`?
    answers:
      - { value: "To get the alpha-3 code from a language name.", correct: false }
      - { value: "To convert an ISO 639-1 alpha-2 language code to its ISO 639-2 alpha-3 equivalent.", correct: true }
      - { value: "To retrieve all alpha-3 language codes.", correct: false }
      - { value: "To validate if a given string is an alpha-3 language code.", correct: false }
    help: |
      `getAlpha3Code()` converts an alpha-2 language code to its alpha-3 equivalent.
      https://symfony.com/doc/current/components/intl.html#validating-and-converting-language-codes

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment variable that stores the value of the debug mode flag (e.g., `APP_DEBUG`)?
    answers:
      - { value: "debug_env_var", correct: false }
      - { value: "debug_flag_name", correct: false }
      - { value: "debug_var_name", correct: true }
      - { value: "app_debug_var", correct: false }
    help: |
      The `debug_var_name` option defines the name of the environment variable that stores the debug mode flag.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical NOT?
    answers:
      - { value: "!", correct: true }
      - { value: "not", correct: true }
      - { value: "~", correct: false }
      - { value: "negate", correct: false }
    help: |
      Both `!` and `not` are used for logical NOT in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to load the content of a file specified by an environment variable and trim whitespace from it?
    answers:
      - { value: "env(file:trim:MY_FILE_VAR)", correct: false }
      - { value: "env(trim:file:MY_FILE_VAR)", correct: true }
      - { value: "env(read_trim:MY_FILE_VAR)", correct: false }
      - { value: "env(file_content_trim:MY_FILE_VAR)", correct: false }
    help: |
      The `trim:file:` processor loads file content and trims whitespace.
      https://symfony.com/doc/current/configuration/env_var_processors.html#loading-and-trimming-file-content

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods is used to get the Process ID (PID) of a running process?
    answers:
      - { value: "getProcessId()", correct: false }
      - { value: "getPid()", correct: true }
      - { value: "getId()", correct: false }
      - { value: "getRunningPid()", correct: false }
    help: |
      The `getPid()` method returns the Process ID (PID) of the running process.
      https://symfony.com/doc/current/components/process.html#getting-the-process-id

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `DateTimeInterface` objects to strings, integers, or floats, with options for format and timezone?
    answers:
      - { value: "DateNormalizer", correct: false }
      - { value: "DateTimeNormalizer", correct: true }
      - { value: "TimeNormalizer", correct: false }
      - { value: "ObjectNormalizer", correct: false }
    help: |
      `DateTimeNormalizer` is specifically for `DateTimeInterface` objects.
      https://symfony.com/doc/current/serializer.html#datetime-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the sender of an email?
    answers:
      - { value: "setSender()", correct: false }
      - { value: "from()", correct: true }
      - { value: "addSender()", correct: false }
      - { value: "withSender()", correct: false }
    help: |
      The `from()` method sets the sender email address.
      https://symfony.com/doc/current/mailer.html#defining-the-sender

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to check if a path is absolute?
    answers:
      - { value: "isAbsolute()", correct: true }
      - { value: "isAbsolutePath()", correct: false }
      - { value: "checkAbsolute()", correct: false }
      - { value: "isFullyQualified()", correct: false }
    help: |
      The `isAbsolute()` method returns `true` if the path is absolute.
      https://symfony.com/doc/current/components/filesystem.html#checking-if-a-path-is-absolute

  -
    question: |
      What is the purpose of `Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter`?
    answers:
      - { value: "To store cache items in a database.", correct: false }
      - { value: "To store cache items in memory.", correct: false }
      - { value: "To store cache items in the filesystem.", correct: true }
      - { value: "To store cache items in a distributed key-value store.", correct: false }
    help: |
      `FilesystemAdapter` stores cached data in the filesystem.
      https://symfony.com/doc/current/components/cache.html#filesystem-adapter

  -
    question: |
      Which of the following `Symfony\\Component\\Lock\\Store` implementations uses PHP's native semaphore functions for creating locks?
    answers:
      - { value: "FlockStore", correct: false }
      - { value: "SemaphoreStore", correct: true }
      - { value: "PdoStore", correct: false }
      - { value: "MemcachedStore", correct: false }
    help: |
      `SemaphoreStore` utilizes PHP's native semaphore functions.
      https://symfony.com/doc/current/components/lock.html#semaphorestore

  -
    question: |
      Which of the following commands would you use to list all registered services in the Symfony Dependency Injection Container, including hidden services?
    answers:
      - { value: "php bin/console debug:container --all", correct: false }
      - { value: "php bin/console debug:container --show-hidden", correct: true }
      - { value: "php bin/console container:list --hidden", correct: false }
      - { value: "php bin/console services:list --all", correct: false }
    help: |
      The `--show-hidden` option with `debug:container` displays hidden services.
      https://symfony.com/doc/current/service_container/debug.html#listing-all-services

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get the country code associated with a specific timezone ID (e.g., 'America/Vancouver')?
    answers:
      - { value: "getCountryCode('America/Vancouver')", correct: true }
      - { value: "getCountryFromTimezone('America/Vancouver')", correct: false }
      - { value: "findCountryByTimezone('America/Vancouver')", correct: false }
      - { value: "getTimezoneCountry('America/Vancouver')", correct: false }
    help: |
      The `getCountryCode()` method returns the country code for a given timezone ID.
      https://symfony.com/doc/current/components/intl.html#retrieving-the-country-code-from-a-timezone

  -
    question: |
      What is the purpose of the `kernel.runtime_mode.web` parameter in Symfony?
    answers:
      - { value: "It defines the web server's root directory.", correct: false }
      - { value: "It indicates whether the application is running in a web environment.", correct: true }
      - { value: "It sets the default HTTP port for web requests.", correct: false }
      - { value: "It enables or disables the Web Debug Toolbar.", correct: false }
    help: |
      `kernel.runtime_mode.web` is a boolean indicating if the application is running in a web environment.
      https://symfony.com/doc/current/reference/configuration/kernel.html#kernel-runtime-mode-web

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a Unix timestamp, supporting both positive and negative timestamps?
    answers:
      - { value: "fromTimestamp()", correct: false }
      - { value: "createFromTimestamp()", correct: true }
      - { value: "fromUnixTimestamp()", correct: false }
      - { value: "createFromUnixTimestamp()", correct: false }
    help: |
      The static `createFromTimestamp()` method creates `DatePoint` instances from Unix timestamps.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-from-a-timestamp

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to convert a CSV-encoded environment variable string into a PHP array?
    answers:
      - { value: "env(array:MY_CSV_VAR)", correct: false }
      - { value: "env(csv:MY_CSV_VAR)", correct: true }
      - { value: "env(decode:csv:MY_CSV_VAR)", correct: false }
      - { value: "env(parse:csv:MY_CSV_VAR)", correct: false }
    help: |
      The `csv:` processor decodes CSV-encoded environment variables into an array.
      https://symfony.com/doc/current/configuration/env_var_processors.html#csv-encoded-environment-variables

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\Process` methods is used to prevent specific POSIX signals from being propagated to the child process?
    answers:
      - { value: "blockSignals()", correct: false }
      - { value: "ignoreSignals()", correct: false }
      - { value: "setIgnoredSignals()", correct: true }
      - { value: "disableSignalHandling()", correct: false }
    help: |
      The `setIgnoredSignals()` method prevents specific POSIX signals from being propagated to the child process.
      https://symfony.com/doc/current/components/process.html#ignoring-signals

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option defines the name of the environment.
      https://symfony.com/doc/current/components/runtime.html#symfonyruntime-options

  -
    question: |
      Which of the following `Symfony\\Component\\Clock\\DatePoint` methods allows you to create a `DatePoint` instance from a string, similar to `DateTimeImmutable` constructor?
    answers:
      - { value: "createFromString()", correct: false }
      - { value: "new DatePoint('now')", correct: true }
      - { value: "parseString()", correct: false }
      - { value: "fromFormat()", correct: false }
    help: |
      The `DatePoint` constructor accepts a string argument, similar to `DateTimeImmutable`.
      https://symfony.com/doc/current/components/clock.html#creating-a-datepoint-with-a-timezone-or-a-reference-date

  -
    question: |
      Which of the following `ExpressionLanguage` operators is used for logical OR?
    answers:
      - { value: "|", correct: false }
      - { value: "or", correct: true }
      - { value: "||", correct: true }
      - { value: "xor", correct: false }
    help: |
      Both `or` and `||` are used for logical OR in ExpressionLanguage.
      https://symfony.com/doc/current/reference/formats/expression_language.html#logical-operators

  -
    question: |
      Which of the following `env()` processors would you use to invert the boolean value of an environment variable (e.g., `true` becomes `false`)?
    answers:
      - { value: "env(invert:MY_VAR)", correct: false }
      - { value: "env(not:MY_VAR)", correct: true }
      - { value: "env(negate:MY_VAR)", correct: false }
      - { value: "env(flip:MY_VAR)", correct: false }
    help: |
      The `not:` processor inverts the boolean value of an environment variable.
      https://symfony.com/doc/current/configuration/env_var_processors.html#inverting-boolean-environment-variables

  -
    question: |
      What is the purpose of `Symfony\\Component\\Process\\PhpExecutableFinder`?
    answers:
      - { value: "To find PHP files in a directory.", correct: false }
      - { value: "To locate the absolute path of the executable PHP binary on the system.", correct: true }
      - { value: "To determine the PHP version installed.", correct: false }
      - { value: "To find PHP-FPM executable path.", correct: false }
    help: |
      `PhpExecutableFinder` automatically determines and returns the absolute path of the executable PHP binary.
      https://symfony.com/doc/current/components/process.html#finding-the-php-executable

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `BackedEnum` enums to their string or integer backing values?
    answers:
      - { value: "EnumNormalizer", correct: false }
      - { value: "BackedEnumNormalizer", correct: true }
      - { value: "ScalarNormalizer", correct: false }
      - { value: "ValueNormalizer", correct: false }
    help: |
      `BackedEnumNormalizer` converts `BackedEnum` enums to their backing values.
      https://symfony.com/doc/current/serializer.html#backedenum-objects

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Email` methods is used to set the plain text content of an email?
    answers:
      - { value: "setTextBody()", correct: false }
      - { value: "text()", correct: true }
      - { value: "addText()", correct: false }
      - { value: "withText()", correct: false }
    help: |
      The `text()` method sets the plain text content of the email body.
      https://symfony.com/doc/current/components/mime.html#creating-an-email

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to create a directory recursively, ignoring already existing directories?
    answers:
      - { value: "createDir()", correct: false }
      - { value: "makeDirectory()", correct: false }
      - { value: "mkdir()", correct: true }
      - { value: "buildDirectory()", correct: false }
    help: |
      The `mkdir()` method creates a directory recursively and ignores existing ones.
      https://symfony.com/doc/current/components/filesystem.html#creating-directories

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to filter files based on their size (e.g., `>= 1K`, `< 1.5M`)?
    answers:
      - { value: "filterSize()", correct: false }
      - { value: "size()", correct: true }
      - { value: "withSize()", correct: false }
      - { value: "checkSize()", correct: false }
    help: |
      The `size()` method filters files by their size.
      https://symfony.com/doc/current/components/finder.html#filtering-by-size

  -
    question: |
      What is the purpose of "Probabilistic Early Expiration" (`beta` parameter) in Symfony's cache component?
    answers:
      - { value: "To randomly expire cache items to prevent stale data.", correct: false }
      - { value: "To recompute cache values ahead of their expiration, preventing cache stampedes by serving stale data to some users while refreshing for others.", correct: true }
      - { value: "To introduce a random delay before a cache item is actually removed.", correct: false }
      - { value: "To prioritize cache invalidation based on item popularity.", correct: false }
    help: |
      The `beta` parameter enables probabilistic early expiration to prevent cache stampedes.
      https://symfony.com/doc/current/components/cache.html#probabilistic-early-expiration

  -
    question: |
      Which of the following `Symfony\\Component\\Process\\PhpSubprocess` methods ensures that the child PHP process inherits the parent's PHP configuration (e.g., `-d` command-line options)?
    answers:
      - { value: "runInherited()", correct: false }
      - { value: "executeWithParentConfig()", correct: false }
      - { value: "This is its default behavior, no specific method is needed.", correct: true }
      - { value: "inheritConfig()", correct: false }
    help: |
      `PhpSubprocess` is designed to inherit the parent's PHP configuration by default.
      https://symfony.com/doc/current/components/process.html#php-processes

  -
    question: |
      Which of the following `Symfony\\Component\\Serializer\\Normalizer` classes is used to convert `SplFileInfo` objects into a data URI string (e.g., `data:...`) for embedding files into serialized data?
    answers:
      - { value: "FileNormalizer", correct: false }
      - { value: "DataUriNormalizer", correct: true }
      - { value: "StreamNormalizer", correct: false }
      - { value: "BinaryNormalizer", correct: false }
    help: |
      `DataUriNormalizer` converts `SplFileInfo` objects to data URI strings.
      https://symfony.com/doc/current/serializer.html#data-uri-normalizer

  -
    question: |
      Which of the following `Symfony\\Component\\Mime\\Crypto` classes is used to sign an email message using DKIM (DomainKeys Identified Mail)?
    answers:
      - { value: "DkimSigner", correct: true }
      - { value: "DkimEncrypter", correct: false }
      - { value: "MailSigner", correct: false }
      - { value: "DomainKeySigner", correct: false }
    help: |
      `DkimSigner` is used to sign email messages with DKIM.
      https://symfony.com/doc/current/mailer.html#signing-emails

  -
    question: |
      Which of the following `Symfony\\Component\\Filesystem\\Filesystem` methods is used to set the access and modification times for a file?
    answers:
      - { value: "setTimestamps()", correct: false }
      - { value: "updateTimes()", correct: false }
      - { value: "touch()", correct: true }
      - { value: "changeTimes()", correct: false }
    help: |
      The `touch()` method sets access and modification times for a file.
      https://symfony.com/doc/current/components/filesystem.html#setting-file-access-and-modification-times

  -
    question: |
      Which of the following `Symfony\\Component\\Finder\\Finder` methods allows you to sort the results by file name in a case-insensitive manner?
    answers:
      - { value: "sortByName(true)", correct: false }
      - { value: "sortByCaseInsensitiveName()", correct: true }
      - { value: "sortByNameCaseInsensitive()", correct: false }
      - { value: "orderByNameIgnoreCase()", correct: false }
    help: |
      The `sortByCaseInsensitiveName()` method sorts results by name, ignoring case.
      https://symfony.com/doc/current/components/finder.html#sorting-results

  -
    question: |
      What is the default Time To Live (TTL) for a lock created with `Symfony\\Component\\Lock\\LockFactory::createLock()` if not specified?
    answers:
      - { value: "60 seconds", correct: false }
      - { value: "300 seconds", correct: true }
      - { value: "0 (indefinite)", correct: false }
      - { value: "Depends on the store implementation", correct: false }
    help: |
      The default TTL for a lock is 300 seconds.
      https://symfony.com/doc/current/components/lock.html#acquiring-and-releasing-a-lock

  -
    question: |
      Which of the following commands would you use to install the Symfony Profiler Pack as a development dependency?
    answers:
      - { value: "composer require symfony/profiler", correct: false }
      - { value: "composer install --dev profiler", correct: false }
      - { value: "composer require --dev symfony/profiler-pack", correct: true }
      - { value: "composer add --dev profiler-bundle", correct: false }
    help: |
      The `composer require --dev symfony/profiler-pack` command installs the profiler pack.
      https://symfony.com/doc/current/profiler.html#installation

  -
    question: |
      Which of the following `Symfony\\Component\\Intl\\Timezones` methods would you use to get a human-readable GMT offset string (e.g., 'GMT+01:00') for a given timezone ID?
    answers:
      - { value: "getGmtOffset('Europe/Madrid')", correct: true }
      - { value: "getFormattedOffset('Europe/Madrid')", correct: false }
      - { value: "getGmtString('Europe/Madrid')", correct: false }
      - { value: "getDisplayOffset('Europe/Madrid')", correct: false }
    help: |
      The `getGmtOffset()` method returns a human-readable GMT offset string.
      https://symfony.com/doc/current/components/intl.html#retrieving-timezone-utc-gmt-offsets

  -
    question: |
      Which of the following `Symfony\\Component\\Runtime\\Runtime` options defines the name of the environment the application runs in (e.g., 'prod', 'dev')?
    answers:
      - { value: "environment", correct: false }
      - { value: "app_env", correct: false }
      - { value: "env", correct: true }
      - { value: "runtime_env", correct: false }
    help: |
      The `env` option